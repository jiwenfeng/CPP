// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inner.promotions.proto

#ifndef PROTOBUF_inner_2epromotions_2eproto__INCLUDED
#define PROTOBUF_inner_2epromotions_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "inner.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace inner {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_inner_2epromotions_2eproto();
void protobuf_AssignDesc_inner_2epromotions_2eproto();
void protobuf_ShutdownFile_inner_2epromotions_2eproto();

class promotions;
class get_promotions_req;
class get_promotions_rsp;
class set_promotions_req;
class set_promotions_rsp;
class del_promotions_req;
class del_promotions_rsp;

// ===================================================================

class promotions : public ::google::protobuf::Message {
 public:
  promotions();
  virtual ~promotions();

  promotions(const promotions& from);

  inline promotions& operator=(const promotions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const promotions& default_instance();

  void Swap(promotions* other);

  // implements Message ----------------------------------------------

  promotions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const promotions& from);
  void MergeFrom(const promotions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 start_time = 4;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);

  // required uint32 duration_time = 5;
  inline bool has_duration_time() const;
  inline void clear_duration_time();
  static const int kDurationTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 duration_time() const;
  inline void set_duration_time(::google::protobuf::uint32 value);

  // required uint32 end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 end_time() const;
  inline void set_end_time(::google::protobuf::uint32 value);

  // required uint32 loop_time = 7;
  inline bool has_loop_time() const;
  inline void clear_loop_time();
  static const int kLoopTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 loop_time() const;
  inline void set_loop_time(::google::protobuf::uint32 value);

  // required uint32 state = 8;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 8;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:inner.promotions)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_duration_time();
  inline void clear_has_duration_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_loop_time();
  inline void clear_has_loop_time();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 duration_time_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 loop_time_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2epromotions_2eproto();
  friend void protobuf_AssignDesc_inner_2epromotions_2eproto();
  friend void protobuf_ShutdownFile_inner_2epromotions_2eproto();

  void InitAsDefaultInstance();
  static promotions* default_instance_;
};
// -------------------------------------------------------------------

class get_promotions_req : public ::google::protobuf::Message {
 public:
  get_promotions_req();
  virtual ~get_promotions_req();

  get_promotions_req(const get_promotions_req& from);

  inline get_promotions_req& operator=(const get_promotions_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_promotions_req& default_instance();

  void Swap(get_promotions_req* other);

  // implements Message ----------------------------------------------

  get_promotions_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_promotions_req& from);
  void MergeFrom(const get_promotions_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unixtime = 1;
  inline bool has_unixtime() const;
  inline void clear_unixtime();
  static const int kUnixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 unixtime() const;
  inline void set_unixtime(::google::protobuf::uint32 value);

  // optional .inner.inner_head head = 1000;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1000;
  inline const ::inner::inner_head& head() const;
  inline ::inner::inner_head* mutable_head();
  inline ::inner::inner_head* release_head();
  inline void set_allocated_head(::inner::inner_head* head);

  // @@protoc_insertion_point(class_scope:inner.get_promotions_req)
 private:
  inline void set_has_unixtime();
  inline void clear_has_unixtime();
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::inner::inner_head* head_;
  ::google::protobuf::uint32 unixtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2epromotions_2eproto();
  friend void protobuf_AssignDesc_inner_2epromotions_2eproto();
  friend void protobuf_ShutdownFile_inner_2epromotions_2eproto();

  void InitAsDefaultInstance();
  static get_promotions_req* default_instance_;
};
// -------------------------------------------------------------------

class get_promotions_rsp : public ::google::protobuf::Message {
 public:
  get_promotions_rsp();
  virtual ~get_promotions_rsp();

  get_promotions_rsp(const get_promotions_rsp& from);

  inline get_promotions_rsp& operator=(const get_promotions_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_promotions_rsp& default_instance();

  void Swap(get_promotions_rsp* other);

  // implements Message ----------------------------------------------

  get_promotions_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_promotions_rsp& from);
  void MergeFrom(const get_promotions_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .inner.promotions ps = 1;
  inline int ps_size() const;
  inline void clear_ps();
  static const int kPsFieldNumber = 1;
  inline const ::inner::promotions& ps(int index) const;
  inline ::inner::promotions* mutable_ps(int index);
  inline ::inner::promotions* add_ps();
  inline const ::google::protobuf::RepeatedPtrField< ::inner::promotions >&
      ps() const;
  inline ::google::protobuf::RepeatedPtrField< ::inner::promotions >*
      mutable_ps();

  // required .inner.inner_tail tail = 1000;
  inline bool has_tail() const;
  inline void clear_tail();
  static const int kTailFieldNumber = 1000;
  inline const ::inner::inner_tail& tail() const;
  inline ::inner::inner_tail* mutable_tail();
  inline ::inner::inner_tail* release_tail();
  inline void set_allocated_tail(::inner::inner_tail* tail);

  // @@protoc_insertion_point(class_scope:inner.get_promotions_rsp)
 private:
  inline void set_has_tail();
  inline void clear_has_tail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::inner::promotions > ps_;
  ::inner::inner_tail* tail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2epromotions_2eproto();
  friend void protobuf_AssignDesc_inner_2epromotions_2eproto();
  friend void protobuf_ShutdownFile_inner_2epromotions_2eproto();

  void InitAsDefaultInstance();
  static get_promotions_rsp* default_instance_;
};
// -------------------------------------------------------------------

class set_promotions_req : public ::google::protobuf::Message {
 public:
  set_promotions_req();
  virtual ~set_promotions_req();

  set_promotions_req(const set_promotions_req& from);

  inline set_promotions_req& operator=(const set_promotions_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const set_promotions_req& default_instance();

  void Swap(set_promotions_req* other);

  // implements Message ----------------------------------------------

  set_promotions_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const set_promotions_req& from);
  void MergeFrom(const set_promotions_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .inner.promotions ps = 1;
  inline int ps_size() const;
  inline void clear_ps();
  static const int kPsFieldNumber = 1;
  inline const ::inner::promotions& ps(int index) const;
  inline ::inner::promotions* mutable_ps(int index);
  inline ::inner::promotions* add_ps();
  inline const ::google::protobuf::RepeatedPtrField< ::inner::promotions >&
      ps() const;
  inline ::google::protobuf::RepeatedPtrField< ::inner::promotions >*
      mutable_ps();

  // optional .inner.inner_head head = 1000;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1000;
  inline const ::inner::inner_head& head() const;
  inline ::inner::inner_head* mutable_head();
  inline ::inner::inner_head* release_head();
  inline void set_allocated_head(::inner::inner_head* head);

  // @@protoc_insertion_point(class_scope:inner.set_promotions_req)
 private:
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::inner::promotions > ps_;
  ::inner::inner_head* head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2epromotions_2eproto();
  friend void protobuf_AssignDesc_inner_2epromotions_2eproto();
  friend void protobuf_ShutdownFile_inner_2epromotions_2eproto();

  void InitAsDefaultInstance();
  static set_promotions_req* default_instance_;
};
// -------------------------------------------------------------------

class set_promotions_rsp : public ::google::protobuf::Message {
 public:
  set_promotions_rsp();
  virtual ~set_promotions_rsp();

  set_promotions_rsp(const set_promotions_rsp& from);

  inline set_promotions_rsp& operator=(const set_promotions_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const set_promotions_rsp& default_instance();

  void Swap(set_promotions_rsp* other);

  // implements Message ----------------------------------------------

  set_promotions_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const set_promotions_rsp& from);
  void MergeFrom(const set_promotions_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .inner.promotions ps = 1;
  inline int ps_size() const;
  inline void clear_ps();
  static const int kPsFieldNumber = 1;
  inline const ::inner::promotions& ps(int index) const;
  inline ::inner::promotions* mutable_ps(int index);
  inline ::inner::promotions* add_ps();
  inline const ::google::protobuf::RepeatedPtrField< ::inner::promotions >&
      ps() const;
  inline ::google::protobuf::RepeatedPtrField< ::inner::promotions >*
      mutable_ps();

  // required .inner.inner_tail tail = 1000;
  inline bool has_tail() const;
  inline void clear_tail();
  static const int kTailFieldNumber = 1000;
  inline const ::inner::inner_tail& tail() const;
  inline ::inner::inner_tail* mutable_tail();
  inline ::inner::inner_tail* release_tail();
  inline void set_allocated_tail(::inner::inner_tail* tail);

  // @@protoc_insertion_point(class_scope:inner.set_promotions_rsp)
 private:
  inline void set_has_tail();
  inline void clear_has_tail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::inner::promotions > ps_;
  ::inner::inner_tail* tail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2epromotions_2eproto();
  friend void protobuf_AssignDesc_inner_2epromotions_2eproto();
  friend void protobuf_ShutdownFile_inner_2epromotions_2eproto();

  void InitAsDefaultInstance();
  static set_promotions_rsp* default_instance_;
};
// -------------------------------------------------------------------

class del_promotions_req : public ::google::protobuf::Message {
 public:
  del_promotions_req();
  virtual ~del_promotions_req();

  del_promotions_req(const del_promotions_req& from);

  inline del_promotions_req& operator=(const del_promotions_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const del_promotions_req& default_instance();

  void Swap(del_promotions_req* other);

  // implements Message ----------------------------------------------

  del_promotions_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const del_promotions_req& from);
  void MergeFrom(const del_promotions_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint32 value);
  inline void add_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ids();

  // optional .inner.inner_head head = 1000;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1000;
  inline const ::inner::inner_head& head() const;
  inline ::inner::inner_head* mutable_head();
  inline ::inner::inner_head* release_head();
  inline void set_allocated_head(::inner::inner_head* head);

  // @@protoc_insertion_point(class_scope:inner.del_promotions_req)
 private:
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
  ::inner::inner_head* head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2epromotions_2eproto();
  friend void protobuf_AssignDesc_inner_2epromotions_2eproto();
  friend void protobuf_ShutdownFile_inner_2epromotions_2eproto();

  void InitAsDefaultInstance();
  static del_promotions_req* default_instance_;
};
// -------------------------------------------------------------------

class del_promotions_rsp : public ::google::protobuf::Message {
 public:
  del_promotions_rsp();
  virtual ~del_promotions_rsp();

  del_promotions_rsp(const del_promotions_rsp& from);

  inline del_promotions_rsp& operator=(const del_promotions_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const del_promotions_rsp& default_instance();

  void Swap(del_promotions_rsp* other);

  // implements Message ----------------------------------------------

  del_promotions_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const del_promotions_rsp& from);
  void MergeFrom(const del_promotions_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint32 value);
  inline void add_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ids();

  // optional .inner.inner_tail tail = 1000;
  inline bool has_tail() const;
  inline void clear_tail();
  static const int kTailFieldNumber = 1000;
  inline const ::inner::inner_tail& tail() const;
  inline ::inner::inner_tail* mutable_tail();
  inline ::inner::inner_tail* release_tail();
  inline void set_allocated_tail(::inner::inner_tail* tail);

  // @@protoc_insertion_point(class_scope:inner.del_promotions_rsp)
 private:
  inline void set_has_tail();
  inline void clear_has_tail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
  ::inner::inner_tail* tail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2epromotions_2eproto();
  friend void protobuf_AssignDesc_inner_2epromotions_2eproto();
  friend void protobuf_ShutdownFile_inner_2epromotions_2eproto();

  void InitAsDefaultInstance();
  static del_promotions_rsp* default_instance_;
};
// ===================================================================


// ===================================================================

// promotions

// required uint32 id = 1;
inline bool promotions::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void promotions::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void promotions::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void promotions::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 promotions::id() const {
  return id_;
}
inline void promotions::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required string name = 2;
inline bool promotions::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void promotions::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void promotions::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void promotions::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& promotions::name() const {
  return *name_;
}
inline void promotions::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void promotions::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void promotions::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* promotions::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* promotions::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void promotions::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 type = 3;
inline bool promotions::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void promotions::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void promotions::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void promotions::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 promotions::type() const {
  return type_;
}
inline void promotions::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 start_time = 4;
inline bool promotions::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void promotions::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void promotions::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void promotions::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 promotions::start_time() const {
  return start_time_;
}
inline void promotions::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
}

// required uint32 duration_time = 5;
inline bool promotions::has_duration_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void promotions::set_has_duration_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void promotions::clear_has_duration_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void promotions::clear_duration_time() {
  duration_time_ = 0u;
  clear_has_duration_time();
}
inline ::google::protobuf::uint32 promotions::duration_time() const {
  return duration_time_;
}
inline void promotions::set_duration_time(::google::protobuf::uint32 value) {
  set_has_duration_time();
  duration_time_ = value;
}

// required uint32 end_time = 6;
inline bool promotions::has_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void promotions::set_has_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void promotions::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void promotions::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 promotions::end_time() const {
  return end_time_;
}
inline void promotions::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
}

// required uint32 loop_time = 7;
inline bool promotions::has_loop_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void promotions::set_has_loop_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void promotions::clear_has_loop_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void promotions::clear_loop_time() {
  loop_time_ = 0u;
  clear_has_loop_time();
}
inline ::google::protobuf::uint32 promotions::loop_time() const {
  return loop_time_;
}
inline void promotions::set_loop_time(::google::protobuf::uint32 value) {
  set_has_loop_time();
  loop_time_ = value;
}

// required uint32 state = 8;
inline bool promotions::has_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void promotions::set_has_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void promotions::clear_has_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void promotions::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 promotions::state() const {
  return state_;
}
inline void promotions::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// get_promotions_req

// required uint32 unixtime = 1;
inline bool get_promotions_req::has_unixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_promotions_req::set_has_unixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_promotions_req::clear_has_unixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_promotions_req::clear_unixtime() {
  unixtime_ = 0u;
  clear_has_unixtime();
}
inline ::google::protobuf::uint32 get_promotions_req::unixtime() const {
  return unixtime_;
}
inline void get_promotions_req::set_unixtime(::google::protobuf::uint32 value) {
  set_has_unixtime();
  unixtime_ = value;
}

// optional .inner.inner_head head = 1000;
inline bool get_promotions_req::has_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_promotions_req::set_has_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_promotions_req::clear_has_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_promotions_req::clear_head() {
  if (head_ != NULL) head_->::inner::inner_head::Clear();
  clear_has_head();
}
inline const ::inner::inner_head& get_promotions_req::head() const {
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::inner::inner_head* get_promotions_req::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::inner::inner_head;
  return head_;
}
inline ::inner::inner_head* get_promotions_req::release_head() {
  clear_has_head();
  ::inner::inner_head* temp = head_;
  head_ = NULL;
  return temp;
}
inline void get_promotions_req::set_allocated_head(::inner::inner_head* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
}

// -------------------------------------------------------------------

// get_promotions_rsp

// repeated .inner.promotions ps = 1;
inline int get_promotions_rsp::ps_size() const {
  return ps_.size();
}
inline void get_promotions_rsp::clear_ps() {
  ps_.Clear();
}
inline const ::inner::promotions& get_promotions_rsp::ps(int index) const {
  return ps_.Get(index);
}
inline ::inner::promotions* get_promotions_rsp::mutable_ps(int index) {
  return ps_.Mutable(index);
}
inline ::inner::promotions* get_promotions_rsp::add_ps() {
  return ps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::inner::promotions >&
get_promotions_rsp::ps() const {
  return ps_;
}
inline ::google::protobuf::RepeatedPtrField< ::inner::promotions >*
get_promotions_rsp::mutable_ps() {
  return &ps_;
}

// required .inner.inner_tail tail = 1000;
inline bool get_promotions_rsp::has_tail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_promotions_rsp::set_has_tail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_promotions_rsp::clear_has_tail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_promotions_rsp::clear_tail() {
  if (tail_ != NULL) tail_->::inner::inner_tail::Clear();
  clear_has_tail();
}
inline const ::inner::inner_tail& get_promotions_rsp::tail() const {
  return tail_ != NULL ? *tail_ : *default_instance_->tail_;
}
inline ::inner::inner_tail* get_promotions_rsp::mutable_tail() {
  set_has_tail();
  if (tail_ == NULL) tail_ = new ::inner::inner_tail;
  return tail_;
}
inline ::inner::inner_tail* get_promotions_rsp::release_tail() {
  clear_has_tail();
  ::inner::inner_tail* temp = tail_;
  tail_ = NULL;
  return temp;
}
inline void get_promotions_rsp::set_allocated_tail(::inner::inner_tail* tail) {
  delete tail_;
  tail_ = tail;
  if (tail) {
    set_has_tail();
  } else {
    clear_has_tail();
  }
}

// -------------------------------------------------------------------

// set_promotions_req

// repeated .inner.promotions ps = 1;
inline int set_promotions_req::ps_size() const {
  return ps_.size();
}
inline void set_promotions_req::clear_ps() {
  ps_.Clear();
}
inline const ::inner::promotions& set_promotions_req::ps(int index) const {
  return ps_.Get(index);
}
inline ::inner::promotions* set_promotions_req::mutable_ps(int index) {
  return ps_.Mutable(index);
}
inline ::inner::promotions* set_promotions_req::add_ps() {
  return ps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::inner::promotions >&
set_promotions_req::ps() const {
  return ps_;
}
inline ::google::protobuf::RepeatedPtrField< ::inner::promotions >*
set_promotions_req::mutable_ps() {
  return &ps_;
}

// optional .inner.inner_head head = 1000;
inline bool set_promotions_req::has_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void set_promotions_req::set_has_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void set_promotions_req::clear_has_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void set_promotions_req::clear_head() {
  if (head_ != NULL) head_->::inner::inner_head::Clear();
  clear_has_head();
}
inline const ::inner::inner_head& set_promotions_req::head() const {
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::inner::inner_head* set_promotions_req::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::inner::inner_head;
  return head_;
}
inline ::inner::inner_head* set_promotions_req::release_head() {
  clear_has_head();
  ::inner::inner_head* temp = head_;
  head_ = NULL;
  return temp;
}
inline void set_promotions_req::set_allocated_head(::inner::inner_head* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
}

// -------------------------------------------------------------------

// set_promotions_rsp

// repeated .inner.promotions ps = 1;
inline int set_promotions_rsp::ps_size() const {
  return ps_.size();
}
inline void set_promotions_rsp::clear_ps() {
  ps_.Clear();
}
inline const ::inner::promotions& set_promotions_rsp::ps(int index) const {
  return ps_.Get(index);
}
inline ::inner::promotions* set_promotions_rsp::mutable_ps(int index) {
  return ps_.Mutable(index);
}
inline ::inner::promotions* set_promotions_rsp::add_ps() {
  return ps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::inner::promotions >&
set_promotions_rsp::ps() const {
  return ps_;
}
inline ::google::protobuf::RepeatedPtrField< ::inner::promotions >*
set_promotions_rsp::mutable_ps() {
  return &ps_;
}

// required .inner.inner_tail tail = 1000;
inline bool set_promotions_rsp::has_tail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void set_promotions_rsp::set_has_tail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void set_promotions_rsp::clear_has_tail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void set_promotions_rsp::clear_tail() {
  if (tail_ != NULL) tail_->::inner::inner_tail::Clear();
  clear_has_tail();
}
inline const ::inner::inner_tail& set_promotions_rsp::tail() const {
  return tail_ != NULL ? *tail_ : *default_instance_->tail_;
}
inline ::inner::inner_tail* set_promotions_rsp::mutable_tail() {
  set_has_tail();
  if (tail_ == NULL) tail_ = new ::inner::inner_tail;
  return tail_;
}
inline ::inner::inner_tail* set_promotions_rsp::release_tail() {
  clear_has_tail();
  ::inner::inner_tail* temp = tail_;
  tail_ = NULL;
  return temp;
}
inline void set_promotions_rsp::set_allocated_tail(::inner::inner_tail* tail) {
  delete tail_;
  tail_ = tail;
  if (tail) {
    set_has_tail();
  } else {
    clear_has_tail();
  }
}

// -------------------------------------------------------------------

// del_promotions_req

// repeated uint32 ids = 1;
inline int del_promotions_req::ids_size() const {
  return ids_.size();
}
inline void del_promotions_req::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint32 del_promotions_req::ids(int index) const {
  return ids_.Get(index);
}
inline void del_promotions_req::set_ids(int index, ::google::protobuf::uint32 value) {
  ids_.Set(index, value);
}
inline void del_promotions_req::add_ids(::google::protobuf::uint32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
del_promotions_req::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
del_promotions_req::mutable_ids() {
  return &ids_;
}

// optional .inner.inner_head head = 1000;
inline bool del_promotions_req::has_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void del_promotions_req::set_has_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void del_promotions_req::clear_has_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void del_promotions_req::clear_head() {
  if (head_ != NULL) head_->::inner::inner_head::Clear();
  clear_has_head();
}
inline const ::inner::inner_head& del_promotions_req::head() const {
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::inner::inner_head* del_promotions_req::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::inner::inner_head;
  return head_;
}
inline ::inner::inner_head* del_promotions_req::release_head() {
  clear_has_head();
  ::inner::inner_head* temp = head_;
  head_ = NULL;
  return temp;
}
inline void del_promotions_req::set_allocated_head(::inner::inner_head* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
}

// -------------------------------------------------------------------

// del_promotions_rsp

// repeated uint32 ids = 1;
inline int del_promotions_rsp::ids_size() const {
  return ids_.size();
}
inline void del_promotions_rsp::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint32 del_promotions_rsp::ids(int index) const {
  return ids_.Get(index);
}
inline void del_promotions_rsp::set_ids(int index, ::google::protobuf::uint32 value) {
  ids_.Set(index, value);
}
inline void del_promotions_rsp::add_ids(::google::protobuf::uint32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
del_promotions_rsp::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
del_promotions_rsp::mutable_ids() {
  return &ids_;
}

// optional .inner.inner_tail tail = 1000;
inline bool del_promotions_rsp::has_tail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void del_promotions_rsp::set_has_tail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void del_promotions_rsp::clear_has_tail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void del_promotions_rsp::clear_tail() {
  if (tail_ != NULL) tail_->::inner::inner_tail::Clear();
  clear_has_tail();
}
inline const ::inner::inner_tail& del_promotions_rsp::tail() const {
  return tail_ != NULL ? *tail_ : *default_instance_->tail_;
}
inline ::inner::inner_tail* del_promotions_rsp::mutable_tail() {
  set_has_tail();
  if (tail_ == NULL) tail_ = new ::inner::inner_tail;
  return tail_;
}
inline ::inner::inner_tail* del_promotions_rsp::release_tail() {
  clear_has_tail();
  ::inner::inner_tail* temp = tail_;
  tail_ = NULL;
  return temp;
}
inline void del_promotions_rsp::set_allocated_tail(::inner::inner_tail* tail) {
  delete tail_;
  tail_ = tail;
  if (tail) {
    set_has_tail();
  } else {
    clear_has_tail();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace inner

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_inner_2epromotions_2eproto__INCLUDED
