// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inner.online.proto

#ifndef PROTOBUF_inner_2eonline_2eproto__INCLUDED
#define PROTOBUF_inner_2eonline_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "inner.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace inner {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_inner_2eonline_2eproto();
void protobuf_AssignDesc_inner_2eonline_2eproto();
void protobuf_ShutdownFile_inner_2eonline_2eproto();

class online_player_req;
class online_player_rsp;
class kick_req;

// ===================================================================

class online_player_req : public ::google::protobuf::Message {
 public:
  online_player_req();
  virtual ~online_player_req();

  online_player_req(const online_player_req& from);

  inline online_player_req& operator=(const online_player_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const online_player_req& default_instance();

  void Swap(online_player_req* other);

  // implements Message ----------------------------------------------

  online_player_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const online_player_req& from);
  void MergeFrom(const online_player_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unixtime = 1;
  inline bool has_unixtime() const;
  inline void clear_unixtime();
  static const int kUnixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 unixtime() const;
  inline void set_unixtime(::google::protobuf::uint32 value);

  // optional .inner.inner_head head = 1000;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1000;
  inline const ::inner::inner_head& head() const;
  inline ::inner::inner_head* mutable_head();
  inline ::inner::inner_head* release_head();
  inline void set_allocated_head(::inner::inner_head* head);

  // @@protoc_insertion_point(class_scope:inner.online_player_req)
 private:
  inline void set_has_unixtime();
  inline void clear_has_unixtime();
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::inner::inner_head* head_;
  ::google::protobuf::uint32 unixtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2eonline_2eproto();
  friend void protobuf_AssignDesc_inner_2eonline_2eproto();
  friend void protobuf_ShutdownFile_inner_2eonline_2eproto();

  void InitAsDefaultInstance();
  static online_player_req* default_instance_;
};
// -------------------------------------------------------------------

class online_player_rsp : public ::google::protobuf::Message {
 public:
  online_player_rsp();
  virtual ~online_player_rsp();

  online_player_rsp(const online_player_rsp& from);

  inline online_player_rsp& operator=(const online_player_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const online_player_rsp& default_instance();

  void Swap(online_player_rsp* other);

  // implements Message ----------------------------------------------

  online_player_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const online_player_rsp& from);
  void MergeFrom(const online_player_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 role_id = 1;
  inline int role_id_size() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id(int index) const;
  inline void set_role_id(int index, ::google::protobuf::uint32 value);
  inline void add_role_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      role_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_role_id();

  // required .inner.inner_tail tail = 1000;
  inline bool has_tail() const;
  inline void clear_tail();
  static const int kTailFieldNumber = 1000;
  inline const ::inner::inner_tail& tail() const;
  inline ::inner::inner_tail* mutable_tail();
  inline ::inner::inner_tail* release_tail();
  inline void set_allocated_tail(::inner::inner_tail* tail);

  // @@protoc_insertion_point(class_scope:inner.online_player_rsp)
 private:
  inline void set_has_tail();
  inline void clear_has_tail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > role_id_;
  ::inner::inner_tail* tail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2eonline_2eproto();
  friend void protobuf_AssignDesc_inner_2eonline_2eproto();
  friend void protobuf_ShutdownFile_inner_2eonline_2eproto();

  void InitAsDefaultInstance();
  static online_player_rsp* default_instance_;
};
// -------------------------------------------------------------------

class kick_req : public ::google::protobuf::Message {
 public:
  kick_req();
  virtual ~kick_req();

  kick_req(const kick_req& from);

  inline kick_req& operator=(const kick_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const kick_req& default_instance();

  void Swap(kick_req* other);

  // implements Message ----------------------------------------------

  kick_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const kick_req& from);
  void MergeFrom(const kick_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 role_id = 1;
  inline int role_id_size() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id(int index) const;
  inline void set_role_id(int index, ::google::protobuf::uint32 value);
  inline void add_role_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      role_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_role_id();

  // @@protoc_insertion_point(class_scope:inner.kick_req)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_inner_2eonline_2eproto();
  friend void protobuf_AssignDesc_inner_2eonline_2eproto();
  friend void protobuf_ShutdownFile_inner_2eonline_2eproto();

  void InitAsDefaultInstance();
  static kick_req* default_instance_;
};
// ===================================================================


// ===================================================================

// online_player_req

// required uint32 unixtime = 1;
inline bool online_player_req::has_unixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void online_player_req::set_has_unixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void online_player_req::clear_has_unixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void online_player_req::clear_unixtime() {
  unixtime_ = 0u;
  clear_has_unixtime();
}
inline ::google::protobuf::uint32 online_player_req::unixtime() const {
  return unixtime_;
}
inline void online_player_req::set_unixtime(::google::protobuf::uint32 value) {
  set_has_unixtime();
  unixtime_ = value;
}

// optional .inner.inner_head head = 1000;
inline bool online_player_req::has_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void online_player_req::set_has_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void online_player_req::clear_has_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void online_player_req::clear_head() {
  if (head_ != NULL) head_->::inner::inner_head::Clear();
  clear_has_head();
}
inline const ::inner::inner_head& online_player_req::head() const {
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::inner::inner_head* online_player_req::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::inner::inner_head;
  return head_;
}
inline ::inner::inner_head* online_player_req::release_head() {
  clear_has_head();
  ::inner::inner_head* temp = head_;
  head_ = NULL;
  return temp;
}
inline void online_player_req::set_allocated_head(::inner::inner_head* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
}

// -------------------------------------------------------------------

// online_player_rsp

// repeated uint32 role_id = 1;
inline int online_player_rsp::role_id_size() const {
  return role_id_.size();
}
inline void online_player_rsp::clear_role_id() {
  role_id_.Clear();
}
inline ::google::protobuf::uint32 online_player_rsp::role_id(int index) const {
  return role_id_.Get(index);
}
inline void online_player_rsp::set_role_id(int index, ::google::protobuf::uint32 value) {
  role_id_.Set(index, value);
}
inline void online_player_rsp::add_role_id(::google::protobuf::uint32 value) {
  role_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
online_player_rsp::role_id() const {
  return role_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
online_player_rsp::mutable_role_id() {
  return &role_id_;
}

// required .inner.inner_tail tail = 1000;
inline bool online_player_rsp::has_tail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void online_player_rsp::set_has_tail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void online_player_rsp::clear_has_tail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void online_player_rsp::clear_tail() {
  if (tail_ != NULL) tail_->::inner::inner_tail::Clear();
  clear_has_tail();
}
inline const ::inner::inner_tail& online_player_rsp::tail() const {
  return tail_ != NULL ? *tail_ : *default_instance_->tail_;
}
inline ::inner::inner_tail* online_player_rsp::mutable_tail() {
  set_has_tail();
  if (tail_ == NULL) tail_ = new ::inner::inner_tail;
  return tail_;
}
inline ::inner::inner_tail* online_player_rsp::release_tail() {
  clear_has_tail();
  ::inner::inner_tail* temp = tail_;
  tail_ = NULL;
  return temp;
}
inline void online_player_rsp::set_allocated_tail(::inner::inner_tail* tail) {
  delete tail_;
  tail_ = tail;
  if (tail) {
    set_has_tail();
  } else {
    clear_has_tail();
  }
}

// -------------------------------------------------------------------

// kick_req

// repeated uint32 role_id = 1;
inline int kick_req::role_id_size() const {
  return role_id_.size();
}
inline void kick_req::clear_role_id() {
  role_id_.Clear();
}
inline ::google::protobuf::uint32 kick_req::role_id(int index) const {
  return role_id_.Get(index);
}
inline void kick_req::set_role_id(int index, ::google::protobuf::uint32 value) {
  role_id_.Set(index, value);
}
inline void kick_req::add_role_id(::google::protobuf::uint32 value) {
  role_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
kick_req::role_id() const {
  return role_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
kick_req::mutable_role_id() {
  return &role_id_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace inner

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_inner_2eonline_2eproto__INCLUDED
