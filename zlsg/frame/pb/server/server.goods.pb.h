// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.goods.proto

#ifndef PROTOBUF_server_2egoods_2eproto__INCLUDED
#define PROTOBUF_server_2egoods_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace server {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_server_2egoods_2eproto();
void protobuf_AssignDesc_server_2egoods_2eproto();
void protobuf_ShutdownFile_server_2egoods_2eproto();

class role_goods;

// ===================================================================

class role_goods : public ::google::protobuf::Message {
 public:
  role_goods();
  virtual ~role_goods();

  role_goods(const role_goods& from);

  inline role_goods& operator=(const role_goods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const role_goods& default_instance();

  void Swap(role_goods* other);

  // implements Message ----------------------------------------------

  role_goods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const role_goods& from);
  void MergeFrom(const role_goods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 grid_index = 1 [default = 0];
  inline bool has_grid_index() const;
  inline void clear_grid_index();
  static const int kGridIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 grid_index() const;
  inline void set_grid_index(::google::protobuf::uint32 value);

  // required uint32 goods_id = 2 [default = 0];
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  inline ::google::protobuf::uint32 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint32 value);

  // required uint32 quality = 3 [default = 0];
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // required uint32 overlaped_num = 4 [default = 0];
  inline bool has_overlaped_num() const;
  inline void clear_overlaped_num();
  static const int kOverlapedNumFieldNumber = 4;
  inline ::google::protobuf::uint32 overlaped_num() const;
  inline void set_overlaped_num(::google::protobuf::uint32 value);

  // optional uint32 five_elem_attr = 5 [default = 0];
  inline bool has_five_elem_attr() const;
  inline void clear_five_elem_attr();
  static const int kFiveElemAttrFieldNumber = 5;
  inline ::google::protobuf::uint32 five_elem_attr() const;
  inline void set_five_elem_attr(::google::protobuf::uint32 value);

  // optional uint32 authed = 6 [default = 1];
  inline bool has_authed() const;
  inline void clear_authed();
  static const int kAuthedFieldNumber = 6;
  inline ::google::protobuf::uint32 authed() const;
  inline void set_authed(::google::protobuf::uint32 value);

  // optional uint32 binding = 7 [default = 1];
  inline bool has_binding() const;
  inline void clear_binding();
  static const int kBindingFieldNumber = 7;
  inline ::google::protobuf::uint32 binding() const;
  inline void set_binding(::google::protobuf::uint32 value);

  // optional uint32 score = 8 [default = 0];
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 8;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 active_second = 9 [default = 0];
  inline bool has_active_second() const;
  inline void clear_active_second();
  static const int kActiveSecondFieldNumber = 9;
  inline ::google::protobuf::uint32 active_second() const;
  inline void set_active_second(::google::protobuf::uint32 value);

  // optional uint32 end_date = 10 [default = 0];
  inline bool has_end_date() const;
  inline void clear_end_date();
  static const int kEndDateFieldNumber = 10;
  inline ::google::protobuf::uint32 end_date() const;
  inline void set_end_date(::google::protobuf::uint32 value);

  // optional uint32 practice_level = 11 [default = 0];
  inline bool has_practice_level() const;
  inline void clear_practice_level();
  static const int kPracticeLevelFieldNumber = 11;
  inline ::google::protobuf::uint32 practice_level() const;
  inline void set_practice_level(::google::protobuf::uint32 value);

  // optional uint32 enhance_level = 12 [default = 0];
  inline bool has_enhance_level() const;
  inline void clear_enhance_level();
  static const int kEnhanceLevelFieldNumber = 12;
  inline ::google::protobuf::uint32 enhance_level() const;
  inline void set_enhance_level(::google::protobuf::uint32 value);

  // optional uint32 genuine_qi_val = 13 [default = 0];
  inline bool has_genuine_qi_val() const;
  inline void clear_genuine_qi_val();
  static const int kGenuineQiValFieldNumber = 13;
  inline ::google::protobuf::uint32 genuine_qi_val() const;
  inline void set_genuine_qi_val(::google::protobuf::uint32 value);

  // optional uint32 max_durable_val = 14 [default = 0];
  inline bool has_max_durable_val() const;
  inline void clear_max_durable_val();
  static const int kMaxDurableValFieldNumber = 14;
  inline ::google::protobuf::uint32 max_durable_val() const;
  inline void set_max_durable_val(::google::protobuf::uint32 value);

  // optional uint32 curr_durable_val = 15 [default = 0];
  inline bool has_curr_durable_val() const;
  inline void clear_curr_durable_val();
  static const int kCurrDurableValFieldNumber = 15;
  inline ::google::protobuf::uint32 curr_durable_val() const;
  inline void set_curr_durable_val(::google::protobuf::uint32 value);

  // optional uint32 curr_bless_val = 16 [default = 0];
  inline bool has_curr_bless_val() const;
  inline void clear_curr_bless_val();
  static const int kCurrBlessValFieldNumber = 16;
  inline ::google::protobuf::uint32 curr_bless_val() const;
  inline void set_curr_bless_val(::google::protobuf::uint32 value);

  // optional uint32 curr_hole_num = 17 [default = 0];
  inline bool has_curr_hole_num() const;
  inline void clear_curr_hole_num();
  static const int kCurrHoleNumFieldNumber = 17;
  inline ::google::protobuf::uint32 curr_hole_num() const;
  inline void set_curr_hole_num(::google::protobuf::uint32 value);

  // optional uint32 temper_val = 18 [default = 0];
  inline bool has_temper_val() const;
  inline void clear_temper_val();
  static const int kTemperValFieldNumber = 18;
  inline ::google::protobuf::uint32 temper_val() const;
  inline void set_temper_val(::google::protobuf::uint32 value);

  // optional uint32 base_attr_code_1 = 19 [default = 0];
  inline bool has_base_attr_code_1() const;
  inline void clear_base_attr_code_1();
  static const int kBaseAttrCode1FieldNumber = 19;
  inline ::google::protobuf::uint32 base_attr_code_1() const;
  inline void set_base_attr_code_1(::google::protobuf::uint32 value);

  // optional uint32 base_attr_val_1 = 20 [default = 0];
  inline bool has_base_attr_val_1() const;
  inline void clear_base_attr_val_1();
  static const int kBaseAttrVal1FieldNumber = 20;
  inline ::google::protobuf::uint32 base_attr_val_1() const;
  inline void set_base_attr_val_1(::google::protobuf::uint32 value);

  // optional uint32 base_attr_code_2 = 21 [default = 0];
  inline bool has_base_attr_code_2() const;
  inline void clear_base_attr_code_2();
  static const int kBaseAttrCode2FieldNumber = 21;
  inline ::google::protobuf::uint32 base_attr_code_2() const;
  inline void set_base_attr_code_2(::google::protobuf::uint32 value);

  // optional uint32 base_attr_val_2 = 22 [default = 0];
  inline bool has_base_attr_val_2() const;
  inline void clear_base_attr_val_2();
  static const int kBaseAttrVal2FieldNumber = 22;
  inline ::google::protobuf::uint32 base_attr_val_2() const;
  inline void set_base_attr_val_2(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_code_1 = 23 [default = 0];
  inline bool has_addition_attr_code_1() const;
  inline void clear_addition_attr_code_1();
  static const int kAdditionAttrCode1FieldNumber = 23;
  inline ::google::protobuf::uint32 addition_attr_code_1() const;
  inline void set_addition_attr_code_1(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_val_1 = 24 [default = 0];
  inline bool has_addition_attr_val_1() const;
  inline void clear_addition_attr_val_1();
  static const int kAdditionAttrVal1FieldNumber = 24;
  inline ::google::protobuf::uint32 addition_attr_val_1() const;
  inline void set_addition_attr_val_1(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_code_2 = 25 [default = 0];
  inline bool has_addition_attr_code_2() const;
  inline void clear_addition_attr_code_2();
  static const int kAdditionAttrCode2FieldNumber = 25;
  inline ::google::protobuf::uint32 addition_attr_code_2() const;
  inline void set_addition_attr_code_2(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_val_2 = 26 [default = 0];
  inline bool has_addition_attr_val_2() const;
  inline void clear_addition_attr_val_2();
  static const int kAdditionAttrVal2FieldNumber = 26;
  inline ::google::protobuf::uint32 addition_attr_val_2() const;
  inline void set_addition_attr_val_2(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_code_3 = 27 [default = 0];
  inline bool has_addition_attr_code_3() const;
  inline void clear_addition_attr_code_3();
  static const int kAdditionAttrCode3FieldNumber = 27;
  inline ::google::protobuf::uint32 addition_attr_code_3() const;
  inline void set_addition_attr_code_3(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_val_3 = 28 [default = 0];
  inline bool has_addition_attr_val_3() const;
  inline void clear_addition_attr_val_3();
  static const int kAdditionAttrVal3FieldNumber = 28;
  inline ::google::protobuf::uint32 addition_attr_val_3() const;
  inline void set_addition_attr_val_3(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_code_4 = 29 [default = 0];
  inline bool has_addition_attr_code_4() const;
  inline void clear_addition_attr_code_4();
  static const int kAdditionAttrCode4FieldNumber = 29;
  inline ::google::protobuf::uint32 addition_attr_code_4() const;
  inline void set_addition_attr_code_4(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_val_4 = 30 [default = 0];
  inline bool has_addition_attr_val_4() const;
  inline void clear_addition_attr_val_4();
  static const int kAdditionAttrVal4FieldNumber = 30;
  inline ::google::protobuf::uint32 addition_attr_val_4() const;
  inline void set_addition_attr_val_4(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_code_5 = 31 [default = 0];
  inline bool has_addition_attr_code_5() const;
  inline void clear_addition_attr_code_5();
  static const int kAdditionAttrCode5FieldNumber = 31;
  inline ::google::protobuf::uint32 addition_attr_code_5() const;
  inline void set_addition_attr_code_5(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_val_5 = 32 [default = 0];
  inline bool has_addition_attr_val_5() const;
  inline void clear_addition_attr_val_5();
  static const int kAdditionAttrVal5FieldNumber = 32;
  inline ::google::protobuf::uint32 addition_attr_val_5() const;
  inline void set_addition_attr_val_5(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_code_6 = 33 [default = 0];
  inline bool has_addition_attr_code_6() const;
  inline void clear_addition_attr_code_6();
  static const int kAdditionAttrCode6FieldNumber = 33;
  inline ::google::protobuf::uint32 addition_attr_code_6() const;
  inline void set_addition_attr_code_6(::google::protobuf::uint32 value);

  // optional uint32 addition_attr_val_6 = 34 [default = 0];
  inline bool has_addition_attr_val_6() const;
  inline void clear_addition_attr_val_6();
  static const int kAdditionAttrVal6FieldNumber = 34;
  inline ::google::protobuf::uint32 addition_attr_val_6() const;
  inline void set_addition_attr_val_6(::google::protobuf::uint32 value);

  // optional uint32 addition_skill_id = 35 [default = 0];
  inline bool has_addition_skill_id() const;
  inline void clear_addition_skill_id();
  static const int kAdditionSkillIdFieldNumber = 35;
  inline ::google::protobuf::uint32 addition_skill_id() const;
  inline void set_addition_skill_id(::google::protobuf::uint32 value);

  // optional uint32 embed_goods_id_1 = 36 [default = 0];
  inline bool has_embed_goods_id_1() const;
  inline void clear_embed_goods_id_1();
  static const int kEmbedGoodsId1FieldNumber = 36;
  inline ::google::protobuf::uint32 embed_goods_id_1() const;
  inline void set_embed_goods_id_1(::google::protobuf::uint32 value);

  // optional uint32 embed_binding_1 = 37 [default = 0];
  inline bool has_embed_binding_1() const;
  inline void clear_embed_binding_1();
  static const int kEmbedBinding1FieldNumber = 37;
  inline ::google::protobuf::uint32 embed_binding_1() const;
  inline void set_embed_binding_1(::google::protobuf::uint32 value);

  // optional uint32 embed_goods_id_2 = 38 [default = 0];
  inline bool has_embed_goods_id_2() const;
  inline void clear_embed_goods_id_2();
  static const int kEmbedGoodsId2FieldNumber = 38;
  inline ::google::protobuf::uint32 embed_goods_id_2() const;
  inline void set_embed_goods_id_2(::google::protobuf::uint32 value);

  // optional uint32 embed_binding_2 = 39 [default = 0];
  inline bool has_embed_binding_2() const;
  inline void clear_embed_binding_2();
  static const int kEmbedBinding2FieldNumber = 39;
  inline ::google::protobuf::uint32 embed_binding_2() const;
  inline void set_embed_binding_2(::google::protobuf::uint32 value);

  // optional uint32 embed_goods_id_3 = 40 [default = 0];
  inline bool has_embed_goods_id_3() const;
  inline void clear_embed_goods_id_3();
  static const int kEmbedGoodsId3FieldNumber = 40;
  inline ::google::protobuf::uint32 embed_goods_id_3() const;
  inline void set_embed_goods_id_3(::google::protobuf::uint32 value);

  // optional uint32 embed_binding_3 = 41 [default = 0];
  inline bool has_embed_binding_3() const;
  inline void clear_embed_binding_3();
  static const int kEmbedBinding3FieldNumber = 41;
  inline ::google::protobuf::uint32 embed_binding_3() const;
  inline void set_embed_binding_3(::google::protobuf::uint32 value);

  // optional uint32 embed_goods_id_4 = 42 [default = 0];
  inline bool has_embed_goods_id_4() const;
  inline void clear_embed_goods_id_4();
  static const int kEmbedGoodsId4FieldNumber = 42;
  inline ::google::protobuf::uint32 embed_goods_id_4() const;
  inline void set_embed_goods_id_4(::google::protobuf::uint32 value);

  // optional uint32 embed_binding_4 = 43 [default = 0];
  inline bool has_embed_binding_4() const;
  inline void clear_embed_binding_4();
  static const int kEmbedBinding4FieldNumber = 43;
  inline ::google::protobuf::uint32 embed_binding_4() const;
  inline void set_embed_binding_4(::google::protobuf::uint32 value);

  // optional uint32 embed_goods_id_5 = 44 [default = 0];
  inline bool has_embed_goods_id_5() const;
  inline void clear_embed_goods_id_5();
  static const int kEmbedGoodsId5FieldNumber = 44;
  inline ::google::protobuf::uint32 embed_goods_id_5() const;
  inline void set_embed_goods_id_5(::google::protobuf::uint32 value);

  // optional uint32 embed_binding_5 = 45 [default = 0];
  inline bool has_embed_binding_5() const;
  inline void clear_embed_binding_5();
  static const int kEmbedBinding5FieldNumber = 45;
  inline ::google::protobuf::uint32 embed_binding_5() const;
  inline void set_embed_binding_5(::google::protobuf::uint32 value);

  // optional uint32 r_qlty = 46 [default = 0];
  inline bool has_r_qlty() const;
  inline void clear_r_qlty();
  static const int kRQltyFieldNumber = 46;
  inline ::google::protobuf::uint32 r_qlty() const;
  inline void set_r_qlty(::google::protobuf::uint32 value);

  // optional uint32 r_lv = 47 [default = 0];
  inline bool has_r_lv() const;
  inline void clear_r_lv();
  static const int kRLvFieldNumber = 47;
  inline ::google::protobuf::uint32 r_lv() const;
  inline void set_r_lv(::google::protobuf::uint32 value);

  // optional uint32 r_prof = 48 [default = 0];
  inline bool has_r_prof() const;
  inline void clear_r_prof();
  static const int kRProfFieldNumber = 48;
  inline ::google::protobuf::uint32 r_prof() const;
  inline void set_r_prof(::google::protobuf::uint32 value);

  // optional uint32 r_prof_1 = 49 [default = 0];
  inline bool has_r_prof_1() const;
  inline void clear_r_prof_1();
  static const int kRProf1FieldNumber = 49;
  inline ::google::protobuf::uint32 r_prof_1() const;
  inline void set_r_prof_1(::google::protobuf::uint32 value);

  // optional uint32 r_prof_2 = 50 [default = 0];
  inline bool has_r_prof_2() const;
  inline void clear_r_prof_2();
  static const int kRProf2FieldNumber = 50;
  inline ::google::protobuf::uint32 r_prof_2() const;
  inline void set_r_prof_2(::google::protobuf::uint32 value);

  // optional uint32 r_prof_3 = 51 [default = 0];
  inline bool has_r_prof_3() const;
  inline void clear_r_prof_3();
  static const int kRProf3FieldNumber = 51;
  inline ::google::protobuf::uint32 r_prof_3() const;
  inline void set_r_prof_3(::google::protobuf::uint32 value);

  // optional uint32 r_status = 52 [default = 0];
  inline bool has_r_status() const;
  inline void clear_r_status();
  static const int kRStatusFieldNumber = 52;
  inline ::google::protobuf::uint32 r_status() const;
  inline void set_r_status(::google::protobuf::uint32 value);

  // optional float r_para = 53 [default = 0];
  inline bool has_r_para() const;
  inline void clear_r_para();
  static const int kRParaFieldNumber = 53;
  inline float r_para() const;
  inline void set_r_para(float value);

  // optional uint32 r_goods_code = 54 [default = 0];
  inline bool has_r_goods_code() const;
  inline void clear_r_goods_code();
  static const int kRGoodsCodeFieldNumber = 54;
  inline ::google::protobuf::uint32 r_goods_code() const;
  inline void set_r_goods_code(::google::protobuf::uint32 value);

  // optional uint32 r_sub_code = 55 [default = 0];
  inline bool has_r_sub_code() const;
  inline void clear_r_sub_code();
  static const int kRSubCodeFieldNumber = 55;
  inline ::google::protobuf::uint32 r_sub_code() const;
  inline void set_r_sub_code(::google::protobuf::uint32 value);

  // optional uint32 r_attr_sub_code = 56 [default = 0];
  inline bool has_r_attr_sub_code() const;
  inline void clear_r_attr_sub_code();
  static const int kRAttrSubCodeFieldNumber = 56;
  inline ::google::protobuf::uint32 r_attr_sub_code() const;
  inline void set_r_attr_sub_code(::google::protobuf::uint32 value);

  // optional uint32 train = 57 [default = 0];
  inline bool has_train() const;
  inline void clear_train();
  static const int kTrainFieldNumber = 57;
  inline ::google::protobuf::uint32 train() const;
  inline void set_train(::google::protobuf::uint32 value);

  // optional uint32 train_num = 58 [default = 0];
  inline bool has_train_num() const;
  inline void clear_train_num();
  static const int kTrainNumFieldNumber = 58;
  inline ::google::protobuf::uint32 train_num() const;
  inline void set_train_num(::google::protobuf::uint32 value);

  // optional uint32 lvl = 59 [default = 0];
  inline bool has_lvl() const;
  inline void clear_lvl();
  static const int kLvlFieldNumber = 59;
  inline ::google::protobuf::uint32 lvl() const;
  inline void set_lvl(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:server.role_goods)
 private:
  inline void set_has_grid_index();
  inline void clear_has_grid_index();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_overlaped_num();
  inline void clear_has_overlaped_num();
  inline void set_has_five_elem_attr();
  inline void clear_has_five_elem_attr();
  inline void set_has_authed();
  inline void clear_has_authed();
  inline void set_has_binding();
  inline void clear_has_binding();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_active_second();
  inline void clear_has_active_second();
  inline void set_has_end_date();
  inline void clear_has_end_date();
  inline void set_has_practice_level();
  inline void clear_has_practice_level();
  inline void set_has_enhance_level();
  inline void clear_has_enhance_level();
  inline void set_has_genuine_qi_val();
  inline void clear_has_genuine_qi_val();
  inline void set_has_max_durable_val();
  inline void clear_has_max_durable_val();
  inline void set_has_curr_durable_val();
  inline void clear_has_curr_durable_val();
  inline void set_has_curr_bless_val();
  inline void clear_has_curr_bless_val();
  inline void set_has_curr_hole_num();
  inline void clear_has_curr_hole_num();
  inline void set_has_temper_val();
  inline void clear_has_temper_val();
  inline void set_has_base_attr_code_1();
  inline void clear_has_base_attr_code_1();
  inline void set_has_base_attr_val_1();
  inline void clear_has_base_attr_val_1();
  inline void set_has_base_attr_code_2();
  inline void clear_has_base_attr_code_2();
  inline void set_has_base_attr_val_2();
  inline void clear_has_base_attr_val_2();
  inline void set_has_addition_attr_code_1();
  inline void clear_has_addition_attr_code_1();
  inline void set_has_addition_attr_val_1();
  inline void clear_has_addition_attr_val_1();
  inline void set_has_addition_attr_code_2();
  inline void clear_has_addition_attr_code_2();
  inline void set_has_addition_attr_val_2();
  inline void clear_has_addition_attr_val_2();
  inline void set_has_addition_attr_code_3();
  inline void clear_has_addition_attr_code_3();
  inline void set_has_addition_attr_val_3();
  inline void clear_has_addition_attr_val_3();
  inline void set_has_addition_attr_code_4();
  inline void clear_has_addition_attr_code_4();
  inline void set_has_addition_attr_val_4();
  inline void clear_has_addition_attr_val_4();
  inline void set_has_addition_attr_code_5();
  inline void clear_has_addition_attr_code_5();
  inline void set_has_addition_attr_val_5();
  inline void clear_has_addition_attr_val_5();
  inline void set_has_addition_attr_code_6();
  inline void clear_has_addition_attr_code_6();
  inline void set_has_addition_attr_val_6();
  inline void clear_has_addition_attr_val_6();
  inline void set_has_addition_skill_id();
  inline void clear_has_addition_skill_id();
  inline void set_has_embed_goods_id_1();
  inline void clear_has_embed_goods_id_1();
  inline void set_has_embed_binding_1();
  inline void clear_has_embed_binding_1();
  inline void set_has_embed_goods_id_2();
  inline void clear_has_embed_goods_id_2();
  inline void set_has_embed_binding_2();
  inline void clear_has_embed_binding_2();
  inline void set_has_embed_goods_id_3();
  inline void clear_has_embed_goods_id_3();
  inline void set_has_embed_binding_3();
  inline void clear_has_embed_binding_3();
  inline void set_has_embed_goods_id_4();
  inline void clear_has_embed_goods_id_4();
  inline void set_has_embed_binding_4();
  inline void clear_has_embed_binding_4();
  inline void set_has_embed_goods_id_5();
  inline void clear_has_embed_goods_id_5();
  inline void set_has_embed_binding_5();
  inline void clear_has_embed_binding_5();
  inline void set_has_r_qlty();
  inline void clear_has_r_qlty();
  inline void set_has_r_lv();
  inline void clear_has_r_lv();
  inline void set_has_r_prof();
  inline void clear_has_r_prof();
  inline void set_has_r_prof_1();
  inline void clear_has_r_prof_1();
  inline void set_has_r_prof_2();
  inline void clear_has_r_prof_2();
  inline void set_has_r_prof_3();
  inline void clear_has_r_prof_3();
  inline void set_has_r_status();
  inline void clear_has_r_status();
  inline void set_has_r_para();
  inline void clear_has_r_para();
  inline void set_has_r_goods_code();
  inline void clear_has_r_goods_code();
  inline void set_has_r_sub_code();
  inline void clear_has_r_sub_code();
  inline void set_has_r_attr_sub_code();
  inline void clear_has_r_attr_sub_code();
  inline void set_has_train();
  inline void clear_has_train();
  inline void set_has_train_num();
  inline void clear_has_train_num();
  inline void set_has_lvl();
  inline void clear_has_lvl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 grid_index_;
  ::google::protobuf::uint32 goods_id_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 overlaped_num_;
  ::google::protobuf::uint32 five_elem_attr_;
  ::google::protobuf::uint32 authed_;
  ::google::protobuf::uint32 binding_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 active_second_;
  ::google::protobuf::uint32 end_date_;
  ::google::protobuf::uint32 practice_level_;
  ::google::protobuf::uint32 enhance_level_;
  ::google::protobuf::uint32 genuine_qi_val_;
  ::google::protobuf::uint32 max_durable_val_;
  ::google::protobuf::uint32 curr_durable_val_;
  ::google::protobuf::uint32 curr_bless_val_;
  ::google::protobuf::uint32 curr_hole_num_;
  ::google::protobuf::uint32 temper_val_;
  ::google::protobuf::uint32 base_attr_code_1_;
  ::google::protobuf::uint32 base_attr_val_1_;
  ::google::protobuf::uint32 base_attr_code_2_;
  ::google::protobuf::uint32 base_attr_val_2_;
  ::google::protobuf::uint32 addition_attr_code_1_;
  ::google::protobuf::uint32 addition_attr_val_1_;
  ::google::protobuf::uint32 addition_attr_code_2_;
  ::google::protobuf::uint32 addition_attr_val_2_;
  ::google::protobuf::uint32 addition_attr_code_3_;
  ::google::protobuf::uint32 addition_attr_val_3_;
  ::google::protobuf::uint32 addition_attr_code_4_;
  ::google::protobuf::uint32 addition_attr_val_4_;
  ::google::protobuf::uint32 addition_attr_code_5_;
  ::google::protobuf::uint32 addition_attr_val_5_;
  ::google::protobuf::uint32 addition_attr_code_6_;
  ::google::protobuf::uint32 addition_attr_val_6_;
  ::google::protobuf::uint32 addition_skill_id_;
  ::google::protobuf::uint32 embed_goods_id_1_;
  ::google::protobuf::uint32 embed_binding_1_;
  ::google::protobuf::uint32 embed_goods_id_2_;
  ::google::protobuf::uint32 embed_binding_2_;
  ::google::protobuf::uint32 embed_goods_id_3_;
  ::google::protobuf::uint32 embed_binding_3_;
  ::google::protobuf::uint32 embed_goods_id_4_;
  ::google::protobuf::uint32 embed_binding_4_;
  ::google::protobuf::uint32 embed_goods_id_5_;
  ::google::protobuf::uint32 embed_binding_5_;
  ::google::protobuf::uint32 r_qlty_;
  ::google::protobuf::uint32 r_lv_;
  ::google::protobuf::uint32 r_prof_;
  ::google::protobuf::uint32 r_prof_1_;
  ::google::protobuf::uint32 r_prof_2_;
  ::google::protobuf::uint32 r_prof_3_;
  ::google::protobuf::uint32 r_status_;
  float r_para_;
  ::google::protobuf::uint32 r_goods_code_;
  ::google::protobuf::uint32 r_sub_code_;
  ::google::protobuf::uint32 r_attr_sub_code_;
  ::google::protobuf::uint32 train_;
  ::google::protobuf::uint32 train_num_;
  ::google::protobuf::uint32 lvl_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(59 + 31) / 32];

  friend void  protobuf_AddDesc_server_2egoods_2eproto();
  friend void protobuf_AssignDesc_server_2egoods_2eproto();
  friend void protobuf_ShutdownFile_server_2egoods_2eproto();

  void InitAsDefaultInstance();
  static role_goods* default_instance_;
};
// ===================================================================


// ===================================================================

// role_goods

// required uint32 grid_index = 1 [default = 0];
inline bool role_goods::has_grid_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void role_goods::set_has_grid_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void role_goods::clear_has_grid_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void role_goods::clear_grid_index() {
  grid_index_ = 0u;
  clear_has_grid_index();
}
inline ::google::protobuf::uint32 role_goods::grid_index() const {
  return grid_index_;
}
inline void role_goods::set_grid_index(::google::protobuf::uint32 value) {
  set_has_grid_index();
  grid_index_ = value;
}

// required uint32 goods_id = 2 [default = 0];
inline bool role_goods::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void role_goods::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void role_goods::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void role_goods::clear_goods_id() {
  goods_id_ = 0u;
  clear_has_goods_id();
}
inline ::google::protobuf::uint32 role_goods::goods_id() const {
  return goods_id_;
}
inline void role_goods::set_goods_id(::google::protobuf::uint32 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// required uint32 quality = 3 [default = 0];
inline bool role_goods::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void role_goods::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void role_goods::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void role_goods::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 role_goods::quality() const {
  return quality_;
}
inline void role_goods::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// required uint32 overlaped_num = 4 [default = 0];
inline bool role_goods::has_overlaped_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void role_goods::set_has_overlaped_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void role_goods::clear_has_overlaped_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void role_goods::clear_overlaped_num() {
  overlaped_num_ = 0u;
  clear_has_overlaped_num();
}
inline ::google::protobuf::uint32 role_goods::overlaped_num() const {
  return overlaped_num_;
}
inline void role_goods::set_overlaped_num(::google::protobuf::uint32 value) {
  set_has_overlaped_num();
  overlaped_num_ = value;
}

// optional uint32 five_elem_attr = 5 [default = 0];
inline bool role_goods::has_five_elem_attr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void role_goods::set_has_five_elem_attr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void role_goods::clear_has_five_elem_attr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void role_goods::clear_five_elem_attr() {
  five_elem_attr_ = 0u;
  clear_has_five_elem_attr();
}
inline ::google::protobuf::uint32 role_goods::five_elem_attr() const {
  return five_elem_attr_;
}
inline void role_goods::set_five_elem_attr(::google::protobuf::uint32 value) {
  set_has_five_elem_attr();
  five_elem_attr_ = value;
}

// optional uint32 authed = 6 [default = 1];
inline bool role_goods::has_authed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void role_goods::set_has_authed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void role_goods::clear_has_authed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void role_goods::clear_authed() {
  authed_ = 1u;
  clear_has_authed();
}
inline ::google::protobuf::uint32 role_goods::authed() const {
  return authed_;
}
inline void role_goods::set_authed(::google::protobuf::uint32 value) {
  set_has_authed();
  authed_ = value;
}

// optional uint32 binding = 7 [default = 1];
inline bool role_goods::has_binding() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void role_goods::set_has_binding() {
  _has_bits_[0] |= 0x00000040u;
}
inline void role_goods::clear_has_binding() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void role_goods::clear_binding() {
  binding_ = 1u;
  clear_has_binding();
}
inline ::google::protobuf::uint32 role_goods::binding() const {
  return binding_;
}
inline void role_goods::set_binding(::google::protobuf::uint32 value) {
  set_has_binding();
  binding_ = value;
}

// optional uint32 score = 8 [default = 0];
inline bool role_goods::has_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void role_goods::set_has_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void role_goods::clear_has_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void role_goods::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 role_goods::score() const {
  return score_;
}
inline void role_goods::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 active_second = 9 [default = 0];
inline bool role_goods::has_active_second() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void role_goods::set_has_active_second() {
  _has_bits_[0] |= 0x00000100u;
}
inline void role_goods::clear_has_active_second() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void role_goods::clear_active_second() {
  active_second_ = 0u;
  clear_has_active_second();
}
inline ::google::protobuf::uint32 role_goods::active_second() const {
  return active_second_;
}
inline void role_goods::set_active_second(::google::protobuf::uint32 value) {
  set_has_active_second();
  active_second_ = value;
}

// optional uint32 end_date = 10 [default = 0];
inline bool role_goods::has_end_date() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void role_goods::set_has_end_date() {
  _has_bits_[0] |= 0x00000200u;
}
inline void role_goods::clear_has_end_date() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void role_goods::clear_end_date() {
  end_date_ = 0u;
  clear_has_end_date();
}
inline ::google::protobuf::uint32 role_goods::end_date() const {
  return end_date_;
}
inline void role_goods::set_end_date(::google::protobuf::uint32 value) {
  set_has_end_date();
  end_date_ = value;
}

// optional uint32 practice_level = 11 [default = 0];
inline bool role_goods::has_practice_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void role_goods::set_has_practice_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void role_goods::clear_has_practice_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void role_goods::clear_practice_level() {
  practice_level_ = 0u;
  clear_has_practice_level();
}
inline ::google::protobuf::uint32 role_goods::practice_level() const {
  return practice_level_;
}
inline void role_goods::set_practice_level(::google::protobuf::uint32 value) {
  set_has_practice_level();
  practice_level_ = value;
}

// optional uint32 enhance_level = 12 [default = 0];
inline bool role_goods::has_enhance_level() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void role_goods::set_has_enhance_level() {
  _has_bits_[0] |= 0x00000800u;
}
inline void role_goods::clear_has_enhance_level() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void role_goods::clear_enhance_level() {
  enhance_level_ = 0u;
  clear_has_enhance_level();
}
inline ::google::protobuf::uint32 role_goods::enhance_level() const {
  return enhance_level_;
}
inline void role_goods::set_enhance_level(::google::protobuf::uint32 value) {
  set_has_enhance_level();
  enhance_level_ = value;
}

// optional uint32 genuine_qi_val = 13 [default = 0];
inline bool role_goods::has_genuine_qi_val() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void role_goods::set_has_genuine_qi_val() {
  _has_bits_[0] |= 0x00001000u;
}
inline void role_goods::clear_has_genuine_qi_val() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void role_goods::clear_genuine_qi_val() {
  genuine_qi_val_ = 0u;
  clear_has_genuine_qi_val();
}
inline ::google::protobuf::uint32 role_goods::genuine_qi_val() const {
  return genuine_qi_val_;
}
inline void role_goods::set_genuine_qi_val(::google::protobuf::uint32 value) {
  set_has_genuine_qi_val();
  genuine_qi_val_ = value;
}

// optional uint32 max_durable_val = 14 [default = 0];
inline bool role_goods::has_max_durable_val() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void role_goods::set_has_max_durable_val() {
  _has_bits_[0] |= 0x00002000u;
}
inline void role_goods::clear_has_max_durable_val() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void role_goods::clear_max_durable_val() {
  max_durable_val_ = 0u;
  clear_has_max_durable_val();
}
inline ::google::protobuf::uint32 role_goods::max_durable_val() const {
  return max_durable_val_;
}
inline void role_goods::set_max_durable_val(::google::protobuf::uint32 value) {
  set_has_max_durable_val();
  max_durable_val_ = value;
}

// optional uint32 curr_durable_val = 15 [default = 0];
inline bool role_goods::has_curr_durable_val() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void role_goods::set_has_curr_durable_val() {
  _has_bits_[0] |= 0x00004000u;
}
inline void role_goods::clear_has_curr_durable_val() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void role_goods::clear_curr_durable_val() {
  curr_durable_val_ = 0u;
  clear_has_curr_durable_val();
}
inline ::google::protobuf::uint32 role_goods::curr_durable_val() const {
  return curr_durable_val_;
}
inline void role_goods::set_curr_durable_val(::google::protobuf::uint32 value) {
  set_has_curr_durable_val();
  curr_durable_val_ = value;
}

// optional uint32 curr_bless_val = 16 [default = 0];
inline bool role_goods::has_curr_bless_val() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void role_goods::set_has_curr_bless_val() {
  _has_bits_[0] |= 0x00008000u;
}
inline void role_goods::clear_has_curr_bless_val() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void role_goods::clear_curr_bless_val() {
  curr_bless_val_ = 0u;
  clear_has_curr_bless_val();
}
inline ::google::protobuf::uint32 role_goods::curr_bless_val() const {
  return curr_bless_val_;
}
inline void role_goods::set_curr_bless_val(::google::protobuf::uint32 value) {
  set_has_curr_bless_val();
  curr_bless_val_ = value;
}

// optional uint32 curr_hole_num = 17 [default = 0];
inline bool role_goods::has_curr_hole_num() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void role_goods::set_has_curr_hole_num() {
  _has_bits_[0] |= 0x00010000u;
}
inline void role_goods::clear_has_curr_hole_num() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void role_goods::clear_curr_hole_num() {
  curr_hole_num_ = 0u;
  clear_has_curr_hole_num();
}
inline ::google::protobuf::uint32 role_goods::curr_hole_num() const {
  return curr_hole_num_;
}
inline void role_goods::set_curr_hole_num(::google::protobuf::uint32 value) {
  set_has_curr_hole_num();
  curr_hole_num_ = value;
}

// optional uint32 temper_val = 18 [default = 0];
inline bool role_goods::has_temper_val() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void role_goods::set_has_temper_val() {
  _has_bits_[0] |= 0x00020000u;
}
inline void role_goods::clear_has_temper_val() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void role_goods::clear_temper_val() {
  temper_val_ = 0u;
  clear_has_temper_val();
}
inline ::google::protobuf::uint32 role_goods::temper_val() const {
  return temper_val_;
}
inline void role_goods::set_temper_val(::google::protobuf::uint32 value) {
  set_has_temper_val();
  temper_val_ = value;
}

// optional uint32 base_attr_code_1 = 19 [default = 0];
inline bool role_goods::has_base_attr_code_1() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void role_goods::set_has_base_attr_code_1() {
  _has_bits_[0] |= 0x00040000u;
}
inline void role_goods::clear_has_base_attr_code_1() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void role_goods::clear_base_attr_code_1() {
  base_attr_code_1_ = 0u;
  clear_has_base_attr_code_1();
}
inline ::google::protobuf::uint32 role_goods::base_attr_code_1() const {
  return base_attr_code_1_;
}
inline void role_goods::set_base_attr_code_1(::google::protobuf::uint32 value) {
  set_has_base_attr_code_1();
  base_attr_code_1_ = value;
}

// optional uint32 base_attr_val_1 = 20 [default = 0];
inline bool role_goods::has_base_attr_val_1() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void role_goods::set_has_base_attr_val_1() {
  _has_bits_[0] |= 0x00080000u;
}
inline void role_goods::clear_has_base_attr_val_1() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void role_goods::clear_base_attr_val_1() {
  base_attr_val_1_ = 0u;
  clear_has_base_attr_val_1();
}
inline ::google::protobuf::uint32 role_goods::base_attr_val_1() const {
  return base_attr_val_1_;
}
inline void role_goods::set_base_attr_val_1(::google::protobuf::uint32 value) {
  set_has_base_attr_val_1();
  base_attr_val_1_ = value;
}

// optional uint32 base_attr_code_2 = 21 [default = 0];
inline bool role_goods::has_base_attr_code_2() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void role_goods::set_has_base_attr_code_2() {
  _has_bits_[0] |= 0x00100000u;
}
inline void role_goods::clear_has_base_attr_code_2() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void role_goods::clear_base_attr_code_2() {
  base_attr_code_2_ = 0u;
  clear_has_base_attr_code_2();
}
inline ::google::protobuf::uint32 role_goods::base_attr_code_2() const {
  return base_attr_code_2_;
}
inline void role_goods::set_base_attr_code_2(::google::protobuf::uint32 value) {
  set_has_base_attr_code_2();
  base_attr_code_2_ = value;
}

// optional uint32 base_attr_val_2 = 22 [default = 0];
inline bool role_goods::has_base_attr_val_2() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void role_goods::set_has_base_attr_val_2() {
  _has_bits_[0] |= 0x00200000u;
}
inline void role_goods::clear_has_base_attr_val_2() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void role_goods::clear_base_attr_val_2() {
  base_attr_val_2_ = 0u;
  clear_has_base_attr_val_2();
}
inline ::google::protobuf::uint32 role_goods::base_attr_val_2() const {
  return base_attr_val_2_;
}
inline void role_goods::set_base_attr_val_2(::google::protobuf::uint32 value) {
  set_has_base_attr_val_2();
  base_attr_val_2_ = value;
}

// optional uint32 addition_attr_code_1 = 23 [default = 0];
inline bool role_goods::has_addition_attr_code_1() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void role_goods::set_has_addition_attr_code_1() {
  _has_bits_[0] |= 0x00400000u;
}
inline void role_goods::clear_has_addition_attr_code_1() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void role_goods::clear_addition_attr_code_1() {
  addition_attr_code_1_ = 0u;
  clear_has_addition_attr_code_1();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_code_1() const {
  return addition_attr_code_1_;
}
inline void role_goods::set_addition_attr_code_1(::google::protobuf::uint32 value) {
  set_has_addition_attr_code_1();
  addition_attr_code_1_ = value;
}

// optional uint32 addition_attr_val_1 = 24 [default = 0];
inline bool role_goods::has_addition_attr_val_1() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void role_goods::set_has_addition_attr_val_1() {
  _has_bits_[0] |= 0x00800000u;
}
inline void role_goods::clear_has_addition_attr_val_1() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void role_goods::clear_addition_attr_val_1() {
  addition_attr_val_1_ = 0u;
  clear_has_addition_attr_val_1();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_val_1() const {
  return addition_attr_val_1_;
}
inline void role_goods::set_addition_attr_val_1(::google::protobuf::uint32 value) {
  set_has_addition_attr_val_1();
  addition_attr_val_1_ = value;
}

// optional uint32 addition_attr_code_2 = 25 [default = 0];
inline bool role_goods::has_addition_attr_code_2() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void role_goods::set_has_addition_attr_code_2() {
  _has_bits_[0] |= 0x01000000u;
}
inline void role_goods::clear_has_addition_attr_code_2() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void role_goods::clear_addition_attr_code_2() {
  addition_attr_code_2_ = 0u;
  clear_has_addition_attr_code_2();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_code_2() const {
  return addition_attr_code_2_;
}
inline void role_goods::set_addition_attr_code_2(::google::protobuf::uint32 value) {
  set_has_addition_attr_code_2();
  addition_attr_code_2_ = value;
}

// optional uint32 addition_attr_val_2 = 26 [default = 0];
inline bool role_goods::has_addition_attr_val_2() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void role_goods::set_has_addition_attr_val_2() {
  _has_bits_[0] |= 0x02000000u;
}
inline void role_goods::clear_has_addition_attr_val_2() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void role_goods::clear_addition_attr_val_2() {
  addition_attr_val_2_ = 0u;
  clear_has_addition_attr_val_2();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_val_2() const {
  return addition_attr_val_2_;
}
inline void role_goods::set_addition_attr_val_2(::google::protobuf::uint32 value) {
  set_has_addition_attr_val_2();
  addition_attr_val_2_ = value;
}

// optional uint32 addition_attr_code_3 = 27 [default = 0];
inline bool role_goods::has_addition_attr_code_3() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void role_goods::set_has_addition_attr_code_3() {
  _has_bits_[0] |= 0x04000000u;
}
inline void role_goods::clear_has_addition_attr_code_3() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void role_goods::clear_addition_attr_code_3() {
  addition_attr_code_3_ = 0u;
  clear_has_addition_attr_code_3();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_code_3() const {
  return addition_attr_code_3_;
}
inline void role_goods::set_addition_attr_code_3(::google::protobuf::uint32 value) {
  set_has_addition_attr_code_3();
  addition_attr_code_3_ = value;
}

// optional uint32 addition_attr_val_3 = 28 [default = 0];
inline bool role_goods::has_addition_attr_val_3() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void role_goods::set_has_addition_attr_val_3() {
  _has_bits_[0] |= 0x08000000u;
}
inline void role_goods::clear_has_addition_attr_val_3() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void role_goods::clear_addition_attr_val_3() {
  addition_attr_val_3_ = 0u;
  clear_has_addition_attr_val_3();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_val_3() const {
  return addition_attr_val_3_;
}
inline void role_goods::set_addition_attr_val_3(::google::protobuf::uint32 value) {
  set_has_addition_attr_val_3();
  addition_attr_val_3_ = value;
}

// optional uint32 addition_attr_code_4 = 29 [default = 0];
inline bool role_goods::has_addition_attr_code_4() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void role_goods::set_has_addition_attr_code_4() {
  _has_bits_[0] |= 0x10000000u;
}
inline void role_goods::clear_has_addition_attr_code_4() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void role_goods::clear_addition_attr_code_4() {
  addition_attr_code_4_ = 0u;
  clear_has_addition_attr_code_4();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_code_4() const {
  return addition_attr_code_4_;
}
inline void role_goods::set_addition_attr_code_4(::google::protobuf::uint32 value) {
  set_has_addition_attr_code_4();
  addition_attr_code_4_ = value;
}

// optional uint32 addition_attr_val_4 = 30 [default = 0];
inline bool role_goods::has_addition_attr_val_4() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void role_goods::set_has_addition_attr_val_4() {
  _has_bits_[0] |= 0x20000000u;
}
inline void role_goods::clear_has_addition_attr_val_4() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void role_goods::clear_addition_attr_val_4() {
  addition_attr_val_4_ = 0u;
  clear_has_addition_attr_val_4();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_val_4() const {
  return addition_attr_val_4_;
}
inline void role_goods::set_addition_attr_val_4(::google::protobuf::uint32 value) {
  set_has_addition_attr_val_4();
  addition_attr_val_4_ = value;
}

// optional uint32 addition_attr_code_5 = 31 [default = 0];
inline bool role_goods::has_addition_attr_code_5() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void role_goods::set_has_addition_attr_code_5() {
  _has_bits_[0] |= 0x40000000u;
}
inline void role_goods::clear_has_addition_attr_code_5() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void role_goods::clear_addition_attr_code_5() {
  addition_attr_code_5_ = 0u;
  clear_has_addition_attr_code_5();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_code_5() const {
  return addition_attr_code_5_;
}
inline void role_goods::set_addition_attr_code_5(::google::protobuf::uint32 value) {
  set_has_addition_attr_code_5();
  addition_attr_code_5_ = value;
}

// optional uint32 addition_attr_val_5 = 32 [default = 0];
inline bool role_goods::has_addition_attr_val_5() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void role_goods::set_has_addition_attr_val_5() {
  _has_bits_[0] |= 0x80000000u;
}
inline void role_goods::clear_has_addition_attr_val_5() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void role_goods::clear_addition_attr_val_5() {
  addition_attr_val_5_ = 0u;
  clear_has_addition_attr_val_5();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_val_5() const {
  return addition_attr_val_5_;
}
inline void role_goods::set_addition_attr_val_5(::google::protobuf::uint32 value) {
  set_has_addition_attr_val_5();
  addition_attr_val_5_ = value;
}

// optional uint32 addition_attr_code_6 = 33 [default = 0];
inline bool role_goods::has_addition_attr_code_6() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void role_goods::set_has_addition_attr_code_6() {
  _has_bits_[1] |= 0x00000001u;
}
inline void role_goods::clear_has_addition_attr_code_6() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void role_goods::clear_addition_attr_code_6() {
  addition_attr_code_6_ = 0u;
  clear_has_addition_attr_code_6();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_code_6() const {
  return addition_attr_code_6_;
}
inline void role_goods::set_addition_attr_code_6(::google::protobuf::uint32 value) {
  set_has_addition_attr_code_6();
  addition_attr_code_6_ = value;
}

// optional uint32 addition_attr_val_6 = 34 [default = 0];
inline bool role_goods::has_addition_attr_val_6() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void role_goods::set_has_addition_attr_val_6() {
  _has_bits_[1] |= 0x00000002u;
}
inline void role_goods::clear_has_addition_attr_val_6() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void role_goods::clear_addition_attr_val_6() {
  addition_attr_val_6_ = 0u;
  clear_has_addition_attr_val_6();
}
inline ::google::protobuf::uint32 role_goods::addition_attr_val_6() const {
  return addition_attr_val_6_;
}
inline void role_goods::set_addition_attr_val_6(::google::protobuf::uint32 value) {
  set_has_addition_attr_val_6();
  addition_attr_val_6_ = value;
}

// optional uint32 addition_skill_id = 35 [default = 0];
inline bool role_goods::has_addition_skill_id() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void role_goods::set_has_addition_skill_id() {
  _has_bits_[1] |= 0x00000004u;
}
inline void role_goods::clear_has_addition_skill_id() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void role_goods::clear_addition_skill_id() {
  addition_skill_id_ = 0u;
  clear_has_addition_skill_id();
}
inline ::google::protobuf::uint32 role_goods::addition_skill_id() const {
  return addition_skill_id_;
}
inline void role_goods::set_addition_skill_id(::google::protobuf::uint32 value) {
  set_has_addition_skill_id();
  addition_skill_id_ = value;
}

// optional uint32 embed_goods_id_1 = 36 [default = 0];
inline bool role_goods::has_embed_goods_id_1() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void role_goods::set_has_embed_goods_id_1() {
  _has_bits_[1] |= 0x00000008u;
}
inline void role_goods::clear_has_embed_goods_id_1() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void role_goods::clear_embed_goods_id_1() {
  embed_goods_id_1_ = 0u;
  clear_has_embed_goods_id_1();
}
inline ::google::protobuf::uint32 role_goods::embed_goods_id_1() const {
  return embed_goods_id_1_;
}
inline void role_goods::set_embed_goods_id_1(::google::protobuf::uint32 value) {
  set_has_embed_goods_id_1();
  embed_goods_id_1_ = value;
}

// optional uint32 embed_binding_1 = 37 [default = 0];
inline bool role_goods::has_embed_binding_1() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void role_goods::set_has_embed_binding_1() {
  _has_bits_[1] |= 0x00000010u;
}
inline void role_goods::clear_has_embed_binding_1() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void role_goods::clear_embed_binding_1() {
  embed_binding_1_ = 0u;
  clear_has_embed_binding_1();
}
inline ::google::protobuf::uint32 role_goods::embed_binding_1() const {
  return embed_binding_1_;
}
inline void role_goods::set_embed_binding_1(::google::protobuf::uint32 value) {
  set_has_embed_binding_1();
  embed_binding_1_ = value;
}

// optional uint32 embed_goods_id_2 = 38 [default = 0];
inline bool role_goods::has_embed_goods_id_2() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void role_goods::set_has_embed_goods_id_2() {
  _has_bits_[1] |= 0x00000020u;
}
inline void role_goods::clear_has_embed_goods_id_2() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void role_goods::clear_embed_goods_id_2() {
  embed_goods_id_2_ = 0u;
  clear_has_embed_goods_id_2();
}
inline ::google::protobuf::uint32 role_goods::embed_goods_id_2() const {
  return embed_goods_id_2_;
}
inline void role_goods::set_embed_goods_id_2(::google::protobuf::uint32 value) {
  set_has_embed_goods_id_2();
  embed_goods_id_2_ = value;
}

// optional uint32 embed_binding_2 = 39 [default = 0];
inline bool role_goods::has_embed_binding_2() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void role_goods::set_has_embed_binding_2() {
  _has_bits_[1] |= 0x00000040u;
}
inline void role_goods::clear_has_embed_binding_2() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void role_goods::clear_embed_binding_2() {
  embed_binding_2_ = 0u;
  clear_has_embed_binding_2();
}
inline ::google::protobuf::uint32 role_goods::embed_binding_2() const {
  return embed_binding_2_;
}
inline void role_goods::set_embed_binding_2(::google::protobuf::uint32 value) {
  set_has_embed_binding_2();
  embed_binding_2_ = value;
}

// optional uint32 embed_goods_id_3 = 40 [default = 0];
inline bool role_goods::has_embed_goods_id_3() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void role_goods::set_has_embed_goods_id_3() {
  _has_bits_[1] |= 0x00000080u;
}
inline void role_goods::clear_has_embed_goods_id_3() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void role_goods::clear_embed_goods_id_3() {
  embed_goods_id_3_ = 0u;
  clear_has_embed_goods_id_3();
}
inline ::google::protobuf::uint32 role_goods::embed_goods_id_3() const {
  return embed_goods_id_3_;
}
inline void role_goods::set_embed_goods_id_3(::google::protobuf::uint32 value) {
  set_has_embed_goods_id_3();
  embed_goods_id_3_ = value;
}

// optional uint32 embed_binding_3 = 41 [default = 0];
inline bool role_goods::has_embed_binding_3() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void role_goods::set_has_embed_binding_3() {
  _has_bits_[1] |= 0x00000100u;
}
inline void role_goods::clear_has_embed_binding_3() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void role_goods::clear_embed_binding_3() {
  embed_binding_3_ = 0u;
  clear_has_embed_binding_3();
}
inline ::google::protobuf::uint32 role_goods::embed_binding_3() const {
  return embed_binding_3_;
}
inline void role_goods::set_embed_binding_3(::google::protobuf::uint32 value) {
  set_has_embed_binding_3();
  embed_binding_3_ = value;
}

// optional uint32 embed_goods_id_4 = 42 [default = 0];
inline bool role_goods::has_embed_goods_id_4() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void role_goods::set_has_embed_goods_id_4() {
  _has_bits_[1] |= 0x00000200u;
}
inline void role_goods::clear_has_embed_goods_id_4() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void role_goods::clear_embed_goods_id_4() {
  embed_goods_id_4_ = 0u;
  clear_has_embed_goods_id_4();
}
inline ::google::protobuf::uint32 role_goods::embed_goods_id_4() const {
  return embed_goods_id_4_;
}
inline void role_goods::set_embed_goods_id_4(::google::protobuf::uint32 value) {
  set_has_embed_goods_id_4();
  embed_goods_id_4_ = value;
}

// optional uint32 embed_binding_4 = 43 [default = 0];
inline bool role_goods::has_embed_binding_4() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void role_goods::set_has_embed_binding_4() {
  _has_bits_[1] |= 0x00000400u;
}
inline void role_goods::clear_has_embed_binding_4() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void role_goods::clear_embed_binding_4() {
  embed_binding_4_ = 0u;
  clear_has_embed_binding_4();
}
inline ::google::protobuf::uint32 role_goods::embed_binding_4() const {
  return embed_binding_4_;
}
inline void role_goods::set_embed_binding_4(::google::protobuf::uint32 value) {
  set_has_embed_binding_4();
  embed_binding_4_ = value;
}

// optional uint32 embed_goods_id_5 = 44 [default = 0];
inline bool role_goods::has_embed_goods_id_5() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void role_goods::set_has_embed_goods_id_5() {
  _has_bits_[1] |= 0x00000800u;
}
inline void role_goods::clear_has_embed_goods_id_5() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void role_goods::clear_embed_goods_id_5() {
  embed_goods_id_5_ = 0u;
  clear_has_embed_goods_id_5();
}
inline ::google::protobuf::uint32 role_goods::embed_goods_id_5() const {
  return embed_goods_id_5_;
}
inline void role_goods::set_embed_goods_id_5(::google::protobuf::uint32 value) {
  set_has_embed_goods_id_5();
  embed_goods_id_5_ = value;
}

// optional uint32 embed_binding_5 = 45 [default = 0];
inline bool role_goods::has_embed_binding_5() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void role_goods::set_has_embed_binding_5() {
  _has_bits_[1] |= 0x00001000u;
}
inline void role_goods::clear_has_embed_binding_5() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void role_goods::clear_embed_binding_5() {
  embed_binding_5_ = 0u;
  clear_has_embed_binding_5();
}
inline ::google::protobuf::uint32 role_goods::embed_binding_5() const {
  return embed_binding_5_;
}
inline void role_goods::set_embed_binding_5(::google::protobuf::uint32 value) {
  set_has_embed_binding_5();
  embed_binding_5_ = value;
}

// optional uint32 r_qlty = 46 [default = 0];
inline bool role_goods::has_r_qlty() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void role_goods::set_has_r_qlty() {
  _has_bits_[1] |= 0x00002000u;
}
inline void role_goods::clear_has_r_qlty() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void role_goods::clear_r_qlty() {
  r_qlty_ = 0u;
  clear_has_r_qlty();
}
inline ::google::protobuf::uint32 role_goods::r_qlty() const {
  return r_qlty_;
}
inline void role_goods::set_r_qlty(::google::protobuf::uint32 value) {
  set_has_r_qlty();
  r_qlty_ = value;
}

// optional uint32 r_lv = 47 [default = 0];
inline bool role_goods::has_r_lv() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void role_goods::set_has_r_lv() {
  _has_bits_[1] |= 0x00004000u;
}
inline void role_goods::clear_has_r_lv() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void role_goods::clear_r_lv() {
  r_lv_ = 0u;
  clear_has_r_lv();
}
inline ::google::protobuf::uint32 role_goods::r_lv() const {
  return r_lv_;
}
inline void role_goods::set_r_lv(::google::protobuf::uint32 value) {
  set_has_r_lv();
  r_lv_ = value;
}

// optional uint32 r_prof = 48 [default = 0];
inline bool role_goods::has_r_prof() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void role_goods::set_has_r_prof() {
  _has_bits_[1] |= 0x00008000u;
}
inline void role_goods::clear_has_r_prof() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void role_goods::clear_r_prof() {
  r_prof_ = 0u;
  clear_has_r_prof();
}
inline ::google::protobuf::uint32 role_goods::r_prof() const {
  return r_prof_;
}
inline void role_goods::set_r_prof(::google::protobuf::uint32 value) {
  set_has_r_prof();
  r_prof_ = value;
}

// optional uint32 r_prof_1 = 49 [default = 0];
inline bool role_goods::has_r_prof_1() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void role_goods::set_has_r_prof_1() {
  _has_bits_[1] |= 0x00010000u;
}
inline void role_goods::clear_has_r_prof_1() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void role_goods::clear_r_prof_1() {
  r_prof_1_ = 0u;
  clear_has_r_prof_1();
}
inline ::google::protobuf::uint32 role_goods::r_prof_1() const {
  return r_prof_1_;
}
inline void role_goods::set_r_prof_1(::google::protobuf::uint32 value) {
  set_has_r_prof_1();
  r_prof_1_ = value;
}

// optional uint32 r_prof_2 = 50 [default = 0];
inline bool role_goods::has_r_prof_2() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void role_goods::set_has_r_prof_2() {
  _has_bits_[1] |= 0x00020000u;
}
inline void role_goods::clear_has_r_prof_2() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void role_goods::clear_r_prof_2() {
  r_prof_2_ = 0u;
  clear_has_r_prof_2();
}
inline ::google::protobuf::uint32 role_goods::r_prof_2() const {
  return r_prof_2_;
}
inline void role_goods::set_r_prof_2(::google::protobuf::uint32 value) {
  set_has_r_prof_2();
  r_prof_2_ = value;
}

// optional uint32 r_prof_3 = 51 [default = 0];
inline bool role_goods::has_r_prof_3() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void role_goods::set_has_r_prof_3() {
  _has_bits_[1] |= 0x00040000u;
}
inline void role_goods::clear_has_r_prof_3() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void role_goods::clear_r_prof_3() {
  r_prof_3_ = 0u;
  clear_has_r_prof_3();
}
inline ::google::protobuf::uint32 role_goods::r_prof_3() const {
  return r_prof_3_;
}
inline void role_goods::set_r_prof_3(::google::protobuf::uint32 value) {
  set_has_r_prof_3();
  r_prof_3_ = value;
}

// optional uint32 r_status = 52 [default = 0];
inline bool role_goods::has_r_status() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void role_goods::set_has_r_status() {
  _has_bits_[1] |= 0x00080000u;
}
inline void role_goods::clear_has_r_status() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void role_goods::clear_r_status() {
  r_status_ = 0u;
  clear_has_r_status();
}
inline ::google::protobuf::uint32 role_goods::r_status() const {
  return r_status_;
}
inline void role_goods::set_r_status(::google::protobuf::uint32 value) {
  set_has_r_status();
  r_status_ = value;
}

// optional float r_para = 53 [default = 0];
inline bool role_goods::has_r_para() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void role_goods::set_has_r_para() {
  _has_bits_[1] |= 0x00100000u;
}
inline void role_goods::clear_has_r_para() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void role_goods::clear_r_para() {
  r_para_ = 0;
  clear_has_r_para();
}
inline float role_goods::r_para() const {
  return r_para_;
}
inline void role_goods::set_r_para(float value) {
  set_has_r_para();
  r_para_ = value;
}

// optional uint32 r_goods_code = 54 [default = 0];
inline bool role_goods::has_r_goods_code() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void role_goods::set_has_r_goods_code() {
  _has_bits_[1] |= 0x00200000u;
}
inline void role_goods::clear_has_r_goods_code() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void role_goods::clear_r_goods_code() {
  r_goods_code_ = 0u;
  clear_has_r_goods_code();
}
inline ::google::protobuf::uint32 role_goods::r_goods_code() const {
  return r_goods_code_;
}
inline void role_goods::set_r_goods_code(::google::protobuf::uint32 value) {
  set_has_r_goods_code();
  r_goods_code_ = value;
}

// optional uint32 r_sub_code = 55 [default = 0];
inline bool role_goods::has_r_sub_code() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void role_goods::set_has_r_sub_code() {
  _has_bits_[1] |= 0x00400000u;
}
inline void role_goods::clear_has_r_sub_code() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void role_goods::clear_r_sub_code() {
  r_sub_code_ = 0u;
  clear_has_r_sub_code();
}
inline ::google::protobuf::uint32 role_goods::r_sub_code() const {
  return r_sub_code_;
}
inline void role_goods::set_r_sub_code(::google::protobuf::uint32 value) {
  set_has_r_sub_code();
  r_sub_code_ = value;
}

// optional uint32 r_attr_sub_code = 56 [default = 0];
inline bool role_goods::has_r_attr_sub_code() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void role_goods::set_has_r_attr_sub_code() {
  _has_bits_[1] |= 0x00800000u;
}
inline void role_goods::clear_has_r_attr_sub_code() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void role_goods::clear_r_attr_sub_code() {
  r_attr_sub_code_ = 0u;
  clear_has_r_attr_sub_code();
}
inline ::google::protobuf::uint32 role_goods::r_attr_sub_code() const {
  return r_attr_sub_code_;
}
inline void role_goods::set_r_attr_sub_code(::google::protobuf::uint32 value) {
  set_has_r_attr_sub_code();
  r_attr_sub_code_ = value;
}

// optional uint32 train = 57 [default = 0];
inline bool role_goods::has_train() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void role_goods::set_has_train() {
  _has_bits_[1] |= 0x01000000u;
}
inline void role_goods::clear_has_train() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void role_goods::clear_train() {
  train_ = 0u;
  clear_has_train();
}
inline ::google::protobuf::uint32 role_goods::train() const {
  return train_;
}
inline void role_goods::set_train(::google::protobuf::uint32 value) {
  set_has_train();
  train_ = value;
}

// optional uint32 train_num = 58 [default = 0];
inline bool role_goods::has_train_num() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void role_goods::set_has_train_num() {
  _has_bits_[1] |= 0x02000000u;
}
inline void role_goods::clear_has_train_num() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void role_goods::clear_train_num() {
  train_num_ = 0u;
  clear_has_train_num();
}
inline ::google::protobuf::uint32 role_goods::train_num() const {
  return train_num_;
}
inline void role_goods::set_train_num(::google::protobuf::uint32 value) {
  set_has_train_num();
  train_num_ = value;
}

// optional uint32 lvl = 59 [default = 0];
inline bool role_goods::has_lvl() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void role_goods::set_has_lvl() {
  _has_bits_[1] |= 0x04000000u;
}
inline void role_goods::clear_has_lvl() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void role_goods::clear_lvl() {
  lvl_ = 0u;
  clear_has_lvl();
}
inline ::google::protobuf::uint32 role_goods::lvl() const {
  return lvl_;
}
inline void role_goods::set_lvl(::google::protobuf::uint32 value) {
  set_has_lvl();
  lvl_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace server

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_2egoods_2eproto__INCLUDED
