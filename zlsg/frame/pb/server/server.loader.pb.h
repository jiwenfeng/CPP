// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.loader.proto

#ifndef PROTOBUF_server_2eloader_2eproto__INCLUDED
#define PROTOBUF_server_2eloader_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace server {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_server_2eloader_2eproto();
void protobuf_AssignDesc_server_2eloader_2eproto();
void protobuf_ShutdownFile_server_2eloader_2eproto();

class load_role_msg;
class load_role_ret;

// ===================================================================

class load_role_msg : public ::google::protobuf::Message {
 public:
  load_role_msg();
  virtual ~load_role_msg();

  load_role_msg(const load_role_msg& from);

  inline load_role_msg& operator=(const load_role_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const load_role_msg& default_instance();

  void Swap(load_role_msg* other);

  // implements Message ----------------------------------------------

  load_role_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const load_role_msg& from);
  void MergeFrom(const load_role_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required string pb = 2;
  inline bool has_pb() const;
  inline void clear_pb();
  static const int kPbFieldNumber = 2;
  inline const ::std::string& pb() const;
  inline void set_pb(const ::std::string& value);
  inline void set_pb(const char* value);
  inline void set_pb(const char* value, size_t size);
  inline ::std::string* mutable_pb();
  inline ::std::string* release_pb();
  inline void set_allocated_pb(::std::string* pb);

  // @@protoc_insertion_point(class_scope:server.load_role_msg)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_pb();
  inline void clear_has_pb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* pb_;
  ::google::protobuf::uint32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_server_2eloader_2eproto();
  friend void protobuf_AssignDesc_server_2eloader_2eproto();
  friend void protobuf_ShutdownFile_server_2eloader_2eproto();

  void InitAsDefaultInstance();
  static load_role_msg* default_instance_;
};
// -------------------------------------------------------------------

class load_role_ret : public ::google::protobuf::Message {
 public:
  load_role_ret();
  virtual ~load_role_ret();

  load_role_ret(const load_role_ret& from);

  inline load_role_ret& operator=(const load_role_ret& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const load_role_ret& default_instance();

  void Swap(load_role_ret* other);

  // implements Message ----------------------------------------------

  load_role_ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const load_role_ret& from);
  void MergeFrom(const load_role_ret& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ptr = 1;
  inline bool has_ptr() const;
  inline void clear_ptr();
  static const int kPtrFieldNumber = 1;
  inline ::google::protobuf::uint64 ptr() const;
  inline void set_ptr(::google::protobuf::uint64 value);

  // required uint64 cptr = 2;
  inline bool has_cptr() const;
  inline void clear_cptr();
  static const int kCptrFieldNumber = 2;
  inline ::google::protobuf::uint64 cptr() const;
  inline void set_cptr(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:server.load_role_ret)
 private:
  inline void set_has_ptr();
  inline void clear_has_ptr();
  inline void set_has_cptr();
  inline void clear_has_cptr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 ptr_;
  ::google::protobuf::uint64 cptr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_server_2eloader_2eproto();
  friend void protobuf_AssignDesc_server_2eloader_2eproto();
  friend void protobuf_ShutdownFile_server_2eloader_2eproto();

  void InitAsDefaultInstance();
  static load_role_ret* default_instance_;
};
// ===================================================================


// ===================================================================

// load_role_msg

// required uint32 role_id = 1;
inline bool load_role_msg::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void load_role_msg::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void load_role_msg::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void load_role_msg::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 load_role_msg::role_id() const {
  return role_id_;
}
inline void load_role_msg::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required string pb = 2;
inline bool load_role_msg::has_pb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void load_role_msg::set_has_pb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void load_role_msg::clear_has_pb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void load_role_msg::clear_pb() {
  if (pb_ != &::google::protobuf::internal::kEmptyString) {
    pb_->clear();
  }
  clear_has_pb();
}
inline const ::std::string& load_role_msg::pb() const {
  return *pb_;
}
inline void load_role_msg::set_pb(const ::std::string& value) {
  set_has_pb();
  if (pb_ == &::google::protobuf::internal::kEmptyString) {
    pb_ = new ::std::string;
  }
  pb_->assign(value);
}
inline void load_role_msg::set_pb(const char* value) {
  set_has_pb();
  if (pb_ == &::google::protobuf::internal::kEmptyString) {
    pb_ = new ::std::string;
  }
  pb_->assign(value);
}
inline void load_role_msg::set_pb(const char* value, size_t size) {
  set_has_pb();
  if (pb_ == &::google::protobuf::internal::kEmptyString) {
    pb_ = new ::std::string;
  }
  pb_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* load_role_msg::mutable_pb() {
  set_has_pb();
  if (pb_ == &::google::protobuf::internal::kEmptyString) {
    pb_ = new ::std::string;
  }
  return pb_;
}
inline ::std::string* load_role_msg::release_pb() {
  clear_has_pb();
  if (pb_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pb_;
    pb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void load_role_msg::set_allocated_pb(::std::string* pb) {
  if (pb_ != &::google::protobuf::internal::kEmptyString) {
    delete pb_;
  }
  if (pb) {
    set_has_pb();
    pb_ = pb;
  } else {
    clear_has_pb();
    pb_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// load_role_ret

// required uint64 ptr = 1;
inline bool load_role_ret::has_ptr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void load_role_ret::set_has_ptr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void load_role_ret::clear_has_ptr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void load_role_ret::clear_ptr() {
  ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_ptr();
}
inline ::google::protobuf::uint64 load_role_ret::ptr() const {
  return ptr_;
}
inline void load_role_ret::set_ptr(::google::protobuf::uint64 value) {
  set_has_ptr();
  ptr_ = value;
}

// required uint64 cptr = 2;
inline bool load_role_ret::has_cptr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void load_role_ret::set_has_cptr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void load_role_ret::clear_has_cptr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void load_role_ret::clear_cptr() {
  cptr_ = GOOGLE_ULONGLONG(0);
  clear_has_cptr();
}
inline ::google::protobuf::uint64 load_role_ret::cptr() const {
  return cptr_;
}
inline void load_role_ret::set_cptr(::google::protobuf::uint64 value) {
  set_has_cptr();
  cptr_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace server

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_2eloader_2eproto__INCLUDED
