// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.goods.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server.goods.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace server {

namespace {

const ::google::protobuf::Descriptor* role_goods_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  role_goods_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_2egoods_2eproto() {
  protobuf_AddDesc_server_2egoods_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server.goods.proto");
  GOOGLE_CHECK(file != NULL);
  role_goods_descriptor_ = file->message_type(0);
  static const int role_goods_offsets_[59] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, grid_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, goods_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, overlaped_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, five_elem_attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, authed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, binding_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, active_second_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, end_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, practice_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, enhance_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, genuine_qi_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, max_durable_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, curr_durable_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, curr_bless_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, curr_hole_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, temper_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, base_attr_code_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, base_attr_val_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, base_attr_code_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, base_attr_val_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_code_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_val_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_code_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_val_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_code_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_val_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_code_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_val_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_code_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_val_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_code_6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_attr_val_6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, addition_skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_goods_id_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_binding_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_goods_id_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_binding_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_goods_id_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_binding_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_goods_id_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_binding_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_goods_id_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, embed_binding_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_qlty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_prof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_prof_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_prof_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_prof_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_para_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_goods_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_sub_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, r_attr_sub_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, train_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, train_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, lvl_),
  };
  role_goods_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      role_goods_descriptor_,
      role_goods::default_instance_,
      role_goods_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(role_goods, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(role_goods));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_2egoods_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    role_goods_descriptor_, &role_goods::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_2egoods_2eproto() {
  delete role_goods::default_instance_;
  delete role_goods_reflection_;
}

void protobuf_AddDesc_server_2egoods_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022server.goods.proto\022\006server\"\223\014\n\nrole_go"
    "ods\022\025\n\ngrid_index\030\001 \002(\r:\0010\022\023\n\010goods_id\030\002"
    " \002(\r:\0010\022\022\n\007quality\030\003 \002(\r:\0010\022\030\n\roverlaped"
    "_num\030\004 \002(\r:\0010\022\031\n\016five_elem_attr\030\005 \001(\r:\0010"
    "\022\021\n\006authed\030\006 \001(\r:\0011\022\022\n\007binding\030\007 \001(\r:\0011\022"
    "\020\n\005score\030\010 \001(\r:\0010\022\030\n\ractive_second\030\t \001(\r"
    ":\0010\022\023\n\010end_date\030\n \001(\r:\0010\022\031\n\016practice_lev"
    "el\030\013 \001(\r:\0010\022\030\n\renhance_level\030\014 \001(\r:\0010\022\031\n"
    "\016genuine_qi_val\030\r \001(\r:\0010\022\032\n\017max_durable_"
    "val\030\016 \001(\r:\0010\022\033\n\020curr_durable_val\030\017 \001(\r:\001"
    "0\022\031\n\016curr_bless_val\030\020 \001(\r:\0010\022\030\n\rcurr_hol"
    "e_num\030\021 \001(\r:\0010\022\025\n\ntemper_val\030\022 \001(\r:\0010\022\033\n"
    "\020base_attr_code_1\030\023 \001(\r:\0010\022\032\n\017base_attr_"
    "val_1\030\024 \001(\r:\0010\022\033\n\020base_attr_code_2\030\025 \001(\r"
    ":\0010\022\032\n\017base_attr_val_2\030\026 \001(\r:\0010\022\037\n\024addit"
    "ion_attr_code_1\030\027 \001(\r:\0010\022\036\n\023addition_att"
    "r_val_1\030\030 \001(\r:\0010\022\037\n\024addition_attr_code_2"
    "\030\031 \001(\r:\0010\022\036\n\023addition_attr_val_2\030\032 \001(\r:\001"
    "0\022\037\n\024addition_attr_code_3\030\033 \001(\r:\0010\022\036\n\023ad"
    "dition_attr_val_3\030\034 \001(\r:\0010\022\037\n\024addition_a"
    "ttr_code_4\030\035 \001(\r:\0010\022\036\n\023addition_attr_val"
    "_4\030\036 \001(\r:\0010\022\037\n\024addition_attr_code_5\030\037 \001("
    "\r:\0010\022\036\n\023addition_attr_val_5\030  \001(\r:\0010\022\037\n\024"
    "addition_attr_code_6\030! \001(\r:\0010\022\036\n\023additio"
    "n_attr_val_6\030\" \001(\r:\0010\022\034\n\021addition_skill_"
    "id\030# \001(\r:\0010\022\033\n\020embed_goods_id_1\030$ \001(\r:\0010"
    "\022\032\n\017embed_binding_1\030% \001(\r:\0010\022\033\n\020embed_go"
    "ods_id_2\030& \001(\r:\0010\022\032\n\017embed_binding_2\030\' \001"
    "(\r:\0010\022\033\n\020embed_goods_id_3\030( \001(\r:\0010\022\032\n\017em"
    "bed_binding_3\030) \001(\r:\0010\022\033\n\020embed_goods_id"
    "_4\030* \001(\r:\0010\022\032\n\017embed_binding_4\030+ \001(\r:\0010\022"
    "\033\n\020embed_goods_id_5\030, \001(\r:\0010\022\032\n\017embed_bi"
    "nding_5\030- \001(\r:\0010\022\021\n\006r_qlty\030. \001(\r:\0010\022\017\n\004r"
    "_lv\030/ \001(\r:\0010\022\021\n\006r_prof\0300 \001(\r:\0010\022\023\n\010r_pro"
    "f_1\0301 \001(\r:\0010\022\023\n\010r_prof_2\0302 \001(\r:\0010\022\023\n\010r_p"
    "rof_3\0303 \001(\r:\0010\022\023\n\010r_status\0304 \001(\r:\0010\022\021\n\006r"
    "_para\0305 \001(\002:\0010\022\027\n\014r_goods_code\0306 \001(\r:\0010\022"
    "\025\n\nr_sub_code\0307 \001(\r:\0010\022\032\n\017r_attr_sub_cod"
    "e\0308 \001(\r:\0010\022\020\n\005train\0309 \001(\r:\0010\022\024\n\ttrain_nu"
    "m\030: \001(\r:\0010\022\016\n\003lvl\030; \001(\r:\0010", 1586);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server.goods.proto", &protobuf_RegisterTypes);
  role_goods::default_instance_ = new role_goods();
  role_goods::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_2egoods_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_2egoods_2eproto {
  StaticDescriptorInitializer_server_2egoods_2eproto() {
    protobuf_AddDesc_server_2egoods_2eproto();
  }
} static_descriptor_initializer_server_2egoods_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int role_goods::kGridIndexFieldNumber;
const int role_goods::kGoodsIdFieldNumber;
const int role_goods::kQualityFieldNumber;
const int role_goods::kOverlapedNumFieldNumber;
const int role_goods::kFiveElemAttrFieldNumber;
const int role_goods::kAuthedFieldNumber;
const int role_goods::kBindingFieldNumber;
const int role_goods::kScoreFieldNumber;
const int role_goods::kActiveSecondFieldNumber;
const int role_goods::kEndDateFieldNumber;
const int role_goods::kPracticeLevelFieldNumber;
const int role_goods::kEnhanceLevelFieldNumber;
const int role_goods::kGenuineQiValFieldNumber;
const int role_goods::kMaxDurableValFieldNumber;
const int role_goods::kCurrDurableValFieldNumber;
const int role_goods::kCurrBlessValFieldNumber;
const int role_goods::kCurrHoleNumFieldNumber;
const int role_goods::kTemperValFieldNumber;
const int role_goods::kBaseAttrCode1FieldNumber;
const int role_goods::kBaseAttrVal1FieldNumber;
const int role_goods::kBaseAttrCode2FieldNumber;
const int role_goods::kBaseAttrVal2FieldNumber;
const int role_goods::kAdditionAttrCode1FieldNumber;
const int role_goods::kAdditionAttrVal1FieldNumber;
const int role_goods::kAdditionAttrCode2FieldNumber;
const int role_goods::kAdditionAttrVal2FieldNumber;
const int role_goods::kAdditionAttrCode3FieldNumber;
const int role_goods::kAdditionAttrVal3FieldNumber;
const int role_goods::kAdditionAttrCode4FieldNumber;
const int role_goods::kAdditionAttrVal4FieldNumber;
const int role_goods::kAdditionAttrCode5FieldNumber;
const int role_goods::kAdditionAttrVal5FieldNumber;
const int role_goods::kAdditionAttrCode6FieldNumber;
const int role_goods::kAdditionAttrVal6FieldNumber;
const int role_goods::kAdditionSkillIdFieldNumber;
const int role_goods::kEmbedGoodsId1FieldNumber;
const int role_goods::kEmbedBinding1FieldNumber;
const int role_goods::kEmbedGoodsId2FieldNumber;
const int role_goods::kEmbedBinding2FieldNumber;
const int role_goods::kEmbedGoodsId3FieldNumber;
const int role_goods::kEmbedBinding3FieldNumber;
const int role_goods::kEmbedGoodsId4FieldNumber;
const int role_goods::kEmbedBinding4FieldNumber;
const int role_goods::kEmbedGoodsId5FieldNumber;
const int role_goods::kEmbedBinding5FieldNumber;
const int role_goods::kRQltyFieldNumber;
const int role_goods::kRLvFieldNumber;
const int role_goods::kRProfFieldNumber;
const int role_goods::kRProf1FieldNumber;
const int role_goods::kRProf2FieldNumber;
const int role_goods::kRProf3FieldNumber;
const int role_goods::kRStatusFieldNumber;
const int role_goods::kRParaFieldNumber;
const int role_goods::kRGoodsCodeFieldNumber;
const int role_goods::kRSubCodeFieldNumber;
const int role_goods::kRAttrSubCodeFieldNumber;
const int role_goods::kTrainFieldNumber;
const int role_goods::kTrainNumFieldNumber;
const int role_goods::kLvlFieldNumber;
#endif  // !_MSC_VER

role_goods::role_goods()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void role_goods::InitAsDefaultInstance() {
}

role_goods::role_goods(const role_goods& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void role_goods::SharedCtor() {
  _cached_size_ = 0;
  grid_index_ = 0u;
  goods_id_ = 0u;
  quality_ = 0u;
  overlaped_num_ = 0u;
  five_elem_attr_ = 0u;
  authed_ = 1u;
  binding_ = 1u;
  score_ = 0u;
  active_second_ = 0u;
  end_date_ = 0u;
  practice_level_ = 0u;
  enhance_level_ = 0u;
  genuine_qi_val_ = 0u;
  max_durable_val_ = 0u;
  curr_durable_val_ = 0u;
  curr_bless_val_ = 0u;
  curr_hole_num_ = 0u;
  temper_val_ = 0u;
  base_attr_code_1_ = 0u;
  base_attr_val_1_ = 0u;
  base_attr_code_2_ = 0u;
  base_attr_val_2_ = 0u;
  addition_attr_code_1_ = 0u;
  addition_attr_val_1_ = 0u;
  addition_attr_code_2_ = 0u;
  addition_attr_val_2_ = 0u;
  addition_attr_code_3_ = 0u;
  addition_attr_val_3_ = 0u;
  addition_attr_code_4_ = 0u;
  addition_attr_val_4_ = 0u;
  addition_attr_code_5_ = 0u;
  addition_attr_val_5_ = 0u;
  addition_attr_code_6_ = 0u;
  addition_attr_val_6_ = 0u;
  addition_skill_id_ = 0u;
  embed_goods_id_1_ = 0u;
  embed_binding_1_ = 0u;
  embed_goods_id_2_ = 0u;
  embed_binding_2_ = 0u;
  embed_goods_id_3_ = 0u;
  embed_binding_3_ = 0u;
  embed_goods_id_4_ = 0u;
  embed_binding_4_ = 0u;
  embed_goods_id_5_ = 0u;
  embed_binding_5_ = 0u;
  r_qlty_ = 0u;
  r_lv_ = 0u;
  r_prof_ = 0u;
  r_prof_1_ = 0u;
  r_prof_2_ = 0u;
  r_prof_3_ = 0u;
  r_status_ = 0u;
  r_para_ = 0;
  r_goods_code_ = 0u;
  r_sub_code_ = 0u;
  r_attr_sub_code_ = 0u;
  train_ = 0u;
  train_num_ = 0u;
  lvl_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

role_goods::~role_goods() {
  SharedDtor();
}

void role_goods::SharedDtor() {
  if (this != default_instance_) {
  }
}

void role_goods::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* role_goods::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return role_goods_descriptor_;
}

const role_goods& role_goods::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2egoods_2eproto();
  return *default_instance_;
}

role_goods* role_goods::default_instance_ = NULL;

role_goods* role_goods::New() const {
  return new role_goods;
}

void role_goods::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grid_index_ = 0u;
    goods_id_ = 0u;
    quality_ = 0u;
    overlaped_num_ = 0u;
    five_elem_attr_ = 0u;
    authed_ = 1u;
    binding_ = 1u;
    score_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    active_second_ = 0u;
    end_date_ = 0u;
    practice_level_ = 0u;
    enhance_level_ = 0u;
    genuine_qi_val_ = 0u;
    max_durable_val_ = 0u;
    curr_durable_val_ = 0u;
    curr_bless_val_ = 0u;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    curr_hole_num_ = 0u;
    temper_val_ = 0u;
    base_attr_code_1_ = 0u;
    base_attr_val_1_ = 0u;
    base_attr_code_2_ = 0u;
    base_attr_val_2_ = 0u;
    addition_attr_code_1_ = 0u;
    addition_attr_val_1_ = 0u;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    addition_attr_code_2_ = 0u;
    addition_attr_val_2_ = 0u;
    addition_attr_code_3_ = 0u;
    addition_attr_val_3_ = 0u;
    addition_attr_code_4_ = 0u;
    addition_attr_val_4_ = 0u;
    addition_attr_code_5_ = 0u;
    addition_attr_val_5_ = 0u;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    addition_attr_code_6_ = 0u;
    addition_attr_val_6_ = 0u;
    addition_skill_id_ = 0u;
    embed_goods_id_1_ = 0u;
    embed_binding_1_ = 0u;
    embed_goods_id_2_ = 0u;
    embed_binding_2_ = 0u;
    embed_goods_id_3_ = 0u;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    embed_binding_3_ = 0u;
    embed_goods_id_4_ = 0u;
    embed_binding_4_ = 0u;
    embed_goods_id_5_ = 0u;
    embed_binding_5_ = 0u;
    r_qlty_ = 0u;
    r_lv_ = 0u;
    r_prof_ = 0u;
  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    r_prof_1_ = 0u;
    r_prof_2_ = 0u;
    r_prof_3_ = 0u;
    r_status_ = 0u;
    r_para_ = 0;
    r_goods_code_ = 0u;
    r_sub_code_ = 0u;
    r_attr_sub_code_ = 0u;
  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    train_ = 0u;
    train_num_ = 0u;
    lvl_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool role_goods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 grid_index = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grid_index_)));
          set_has_grid_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_goods_id;
        break;
      }

      // required uint32 goods_id = 2 [default = 0];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goods_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goods_id_)));
          set_has_goods_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_quality;
        break;
      }

      // required uint32 quality = 3 [default = 0];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_overlaped_num;
        break;
      }

      // required uint32 overlaped_num = 4 [default = 0];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_overlaped_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &overlaped_num_)));
          set_has_overlaped_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_five_elem_attr;
        break;
      }

      // optional uint32 five_elem_attr = 5 [default = 0];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_five_elem_attr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &five_elem_attr_)));
          set_has_five_elem_attr();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_authed;
        break;
      }

      // optional uint32 authed = 6 [default = 1];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_authed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authed_)));
          set_has_authed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_binding;
        break;
      }

      // optional uint32 binding = 7 [default = 1];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_binding:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &binding_)));
          set_has_binding();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_score;
        break;
      }

      // optional uint32 score = 8 [default = 0];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_active_second;
        break;
      }

      // optional uint32 active_second = 9 [default = 0];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_active_second:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &active_second_)));
          set_has_active_second();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_end_date;
        break;
      }

      // optional uint32 end_date = 10 [default = 0];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_date:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_date_)));
          set_has_end_date();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_practice_level;
        break;
      }

      // optional uint32 practice_level = 11 [default = 0];
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_practice_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &practice_level_)));
          set_has_practice_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_enhance_level;
        break;
      }

      // optional uint32 enhance_level = 12 [default = 0];
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enhance_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enhance_level_)));
          set_has_enhance_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_genuine_qi_val;
        break;
      }

      // optional uint32 genuine_qi_val = 13 [default = 0];
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_genuine_qi_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &genuine_qi_val_)));
          set_has_genuine_qi_val();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_max_durable_val;
        break;
      }

      // optional uint32 max_durable_val = 14 [default = 0];
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_durable_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_durable_val_)));
          set_has_max_durable_val();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_curr_durable_val;
        break;
      }

      // optional uint32 curr_durable_val = 15 [default = 0];
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_curr_durable_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curr_durable_val_)));
          set_has_curr_durable_val();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_curr_bless_val;
        break;
      }

      // optional uint32 curr_bless_val = 16 [default = 0];
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_curr_bless_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curr_bless_val_)));
          set_has_curr_bless_val();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_curr_hole_num;
        break;
      }

      // optional uint32 curr_hole_num = 17 [default = 0];
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_curr_hole_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curr_hole_num_)));
          set_has_curr_hole_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_temper_val;
        break;
      }

      // optional uint32 temper_val = 18 [default = 0];
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_temper_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &temper_val_)));
          set_has_temper_val();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_base_attr_code_1;
        break;
      }

      // optional uint32 base_attr_code_1 = 19 [default = 0];
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_base_attr_code_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_attr_code_1_)));
          set_has_base_attr_code_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_base_attr_val_1;
        break;
      }

      // optional uint32 base_attr_val_1 = 20 [default = 0];
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_base_attr_val_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_attr_val_1_)));
          set_has_base_attr_val_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_base_attr_code_2;
        break;
      }

      // optional uint32 base_attr_code_2 = 21 [default = 0];
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_base_attr_code_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_attr_code_2_)));
          set_has_base_attr_code_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_base_attr_val_2;
        break;
      }

      // optional uint32 base_attr_val_2 = 22 [default = 0];
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_base_attr_val_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &base_attr_val_2_)));
          set_has_base_attr_val_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_addition_attr_code_1;
        break;
      }

      // optional uint32 addition_attr_code_1 = 23 [default = 0];
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_code_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_code_1_)));
          set_has_addition_attr_code_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_addition_attr_val_1;
        break;
      }

      // optional uint32 addition_attr_val_1 = 24 [default = 0];
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_val_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_val_1_)));
          set_has_addition_attr_val_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_addition_attr_code_2;
        break;
      }

      // optional uint32 addition_attr_code_2 = 25 [default = 0];
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_code_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_code_2_)));
          set_has_addition_attr_code_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_addition_attr_val_2;
        break;
      }

      // optional uint32 addition_attr_val_2 = 26 [default = 0];
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_val_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_val_2_)));
          set_has_addition_attr_val_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_addition_attr_code_3;
        break;
      }

      // optional uint32 addition_attr_code_3 = 27 [default = 0];
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_code_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_code_3_)));
          set_has_addition_attr_code_3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_addition_attr_val_3;
        break;
      }

      // optional uint32 addition_attr_val_3 = 28 [default = 0];
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_val_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_val_3_)));
          set_has_addition_attr_val_3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_addition_attr_code_4;
        break;
      }

      // optional uint32 addition_attr_code_4 = 29 [default = 0];
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_code_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_code_4_)));
          set_has_addition_attr_code_4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_addition_attr_val_4;
        break;
      }

      // optional uint32 addition_attr_val_4 = 30 [default = 0];
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_val_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_val_4_)));
          set_has_addition_attr_val_4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_addition_attr_code_5;
        break;
      }

      // optional uint32 addition_attr_code_5 = 31 [default = 0];
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_code_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_code_5_)));
          set_has_addition_attr_code_5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_addition_attr_val_5;
        break;
      }

      // optional uint32 addition_attr_val_5 = 32 [default = 0];
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_val_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_val_5_)));
          set_has_addition_attr_val_5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_addition_attr_code_6;
        break;
      }

      // optional uint32 addition_attr_code_6 = 33 [default = 0];
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_code_6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_code_6_)));
          set_has_addition_attr_code_6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_addition_attr_val_6;
        break;
      }

      // optional uint32 addition_attr_val_6 = 34 [default = 0];
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_attr_val_6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_attr_val_6_)));
          set_has_addition_attr_val_6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_addition_skill_id;
        break;
      }

      // optional uint32 addition_skill_id = 35 [default = 0];
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addition_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &addition_skill_id_)));
          set_has_addition_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_embed_goods_id_1;
        break;
      }

      // optional uint32 embed_goods_id_1 = 36 [default = 0];
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_goods_id_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_goods_id_1_)));
          set_has_embed_goods_id_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(296)) goto parse_embed_binding_1;
        break;
      }

      // optional uint32 embed_binding_1 = 37 [default = 0];
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_binding_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_binding_1_)));
          set_has_embed_binding_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(304)) goto parse_embed_goods_id_2;
        break;
      }

      // optional uint32 embed_goods_id_2 = 38 [default = 0];
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_goods_id_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_goods_id_2_)));
          set_has_embed_goods_id_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_embed_binding_2;
        break;
      }

      // optional uint32 embed_binding_2 = 39 [default = 0];
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_binding_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_binding_2_)));
          set_has_embed_binding_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(320)) goto parse_embed_goods_id_3;
        break;
      }

      // optional uint32 embed_goods_id_3 = 40 [default = 0];
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_goods_id_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_goods_id_3_)));
          set_has_embed_goods_id_3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(328)) goto parse_embed_binding_3;
        break;
      }

      // optional uint32 embed_binding_3 = 41 [default = 0];
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_binding_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_binding_3_)));
          set_has_embed_binding_3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(336)) goto parse_embed_goods_id_4;
        break;
      }

      // optional uint32 embed_goods_id_4 = 42 [default = 0];
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_goods_id_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_goods_id_4_)));
          set_has_embed_goods_id_4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(344)) goto parse_embed_binding_4;
        break;
      }

      // optional uint32 embed_binding_4 = 43 [default = 0];
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_binding_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_binding_4_)));
          set_has_embed_binding_4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(352)) goto parse_embed_goods_id_5;
        break;
      }

      // optional uint32 embed_goods_id_5 = 44 [default = 0];
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_goods_id_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_goods_id_5_)));
          set_has_embed_goods_id_5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(360)) goto parse_embed_binding_5;
        break;
      }

      // optional uint32 embed_binding_5 = 45 [default = 0];
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_embed_binding_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embed_binding_5_)));
          set_has_embed_binding_5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(368)) goto parse_r_qlty;
        break;
      }

      // optional uint32 r_qlty = 46 [default = 0];
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_qlty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_qlty_)));
          set_has_r_qlty();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(376)) goto parse_r_lv;
        break;
      }

      // optional uint32 r_lv = 47 [default = 0];
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_lv_)));
          set_has_r_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(384)) goto parse_r_prof;
        break;
      }

      // optional uint32 r_prof = 48 [default = 0];
      case 48: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_prof:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_prof_)));
          set_has_r_prof();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(392)) goto parse_r_prof_1;
        break;
      }

      // optional uint32 r_prof_1 = 49 [default = 0];
      case 49: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_prof_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_prof_1_)));
          set_has_r_prof_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(400)) goto parse_r_prof_2;
        break;
      }

      // optional uint32 r_prof_2 = 50 [default = 0];
      case 50: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_prof_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_prof_2_)));
          set_has_r_prof_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(408)) goto parse_r_prof_3;
        break;
      }

      // optional uint32 r_prof_3 = 51 [default = 0];
      case 51: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_prof_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_prof_3_)));
          set_has_r_prof_3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(416)) goto parse_r_status;
        break;
      }

      // optional uint32 r_status = 52 [default = 0];
      case 52: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_status_)));
          set_has_r_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(429)) goto parse_r_para;
        break;
      }

      // optional float r_para = 53 [default = 0];
      case 53: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_r_para:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &r_para_)));
          set_has_r_para();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(432)) goto parse_r_goods_code;
        break;
      }

      // optional uint32 r_goods_code = 54 [default = 0];
      case 54: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_goods_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_goods_code_)));
          set_has_r_goods_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(440)) goto parse_r_sub_code;
        break;
      }

      // optional uint32 r_sub_code = 55 [default = 0];
      case 55: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_sub_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_sub_code_)));
          set_has_r_sub_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(448)) goto parse_r_attr_sub_code;
        break;
      }

      // optional uint32 r_attr_sub_code = 56 [default = 0];
      case 56: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_r_attr_sub_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_attr_sub_code_)));
          set_has_r_attr_sub_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(456)) goto parse_train;
        break;
      }

      // optional uint32 train = 57 [default = 0];
      case 57: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_train:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &train_)));
          set_has_train();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(464)) goto parse_train_num;
        break;
      }

      // optional uint32 train_num = 58 [default = 0];
      case 58: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_train_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &train_num_)));
          set_has_train_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(472)) goto parse_lvl;
        break;
      }

      // optional uint32 lvl = 59 [default = 0];
      case 59: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lvl_)));
          set_has_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void role_goods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 grid_index = 1 [default = 0];
  if (has_grid_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->grid_index(), output);
  }

  // required uint32 goods_id = 2 [default = 0];
  if (has_goods_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->goods_id(), output);
  }

  // required uint32 quality = 3 [default = 0];
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quality(), output);
  }

  // required uint32 overlaped_num = 4 [default = 0];
  if (has_overlaped_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->overlaped_num(), output);
  }

  // optional uint32 five_elem_attr = 5 [default = 0];
  if (has_five_elem_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->five_elem_attr(), output);
  }

  // optional uint32 authed = 6 [default = 1];
  if (has_authed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->authed(), output);
  }

  // optional uint32 binding = 7 [default = 1];
  if (has_binding()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->binding(), output);
  }

  // optional uint32 score = 8 [default = 0];
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->score(), output);
  }

  // optional uint32 active_second = 9 [default = 0];
  if (has_active_second()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->active_second(), output);
  }

  // optional uint32 end_date = 10 [default = 0];
  if (has_end_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->end_date(), output);
  }

  // optional uint32 practice_level = 11 [default = 0];
  if (has_practice_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->practice_level(), output);
  }

  // optional uint32 enhance_level = 12 [default = 0];
  if (has_enhance_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->enhance_level(), output);
  }

  // optional uint32 genuine_qi_val = 13 [default = 0];
  if (has_genuine_qi_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->genuine_qi_val(), output);
  }

  // optional uint32 max_durable_val = 14 [default = 0];
  if (has_max_durable_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->max_durable_val(), output);
  }

  // optional uint32 curr_durable_val = 15 [default = 0];
  if (has_curr_durable_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->curr_durable_val(), output);
  }

  // optional uint32 curr_bless_val = 16 [default = 0];
  if (has_curr_bless_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->curr_bless_val(), output);
  }

  // optional uint32 curr_hole_num = 17 [default = 0];
  if (has_curr_hole_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->curr_hole_num(), output);
  }

  // optional uint32 temper_val = 18 [default = 0];
  if (has_temper_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->temper_val(), output);
  }

  // optional uint32 base_attr_code_1 = 19 [default = 0];
  if (has_base_attr_code_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->base_attr_code_1(), output);
  }

  // optional uint32 base_attr_val_1 = 20 [default = 0];
  if (has_base_attr_val_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->base_attr_val_1(), output);
  }

  // optional uint32 base_attr_code_2 = 21 [default = 0];
  if (has_base_attr_code_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->base_attr_code_2(), output);
  }

  // optional uint32 base_attr_val_2 = 22 [default = 0];
  if (has_base_attr_val_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->base_attr_val_2(), output);
  }

  // optional uint32 addition_attr_code_1 = 23 [default = 0];
  if (has_addition_attr_code_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->addition_attr_code_1(), output);
  }

  // optional uint32 addition_attr_val_1 = 24 [default = 0];
  if (has_addition_attr_val_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->addition_attr_val_1(), output);
  }

  // optional uint32 addition_attr_code_2 = 25 [default = 0];
  if (has_addition_attr_code_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->addition_attr_code_2(), output);
  }

  // optional uint32 addition_attr_val_2 = 26 [default = 0];
  if (has_addition_attr_val_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->addition_attr_val_2(), output);
  }

  // optional uint32 addition_attr_code_3 = 27 [default = 0];
  if (has_addition_attr_code_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->addition_attr_code_3(), output);
  }

  // optional uint32 addition_attr_val_3 = 28 [default = 0];
  if (has_addition_attr_val_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->addition_attr_val_3(), output);
  }

  // optional uint32 addition_attr_code_4 = 29 [default = 0];
  if (has_addition_attr_code_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->addition_attr_code_4(), output);
  }

  // optional uint32 addition_attr_val_4 = 30 [default = 0];
  if (has_addition_attr_val_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->addition_attr_val_4(), output);
  }

  // optional uint32 addition_attr_code_5 = 31 [default = 0];
  if (has_addition_attr_code_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->addition_attr_code_5(), output);
  }

  // optional uint32 addition_attr_val_5 = 32 [default = 0];
  if (has_addition_attr_val_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->addition_attr_val_5(), output);
  }

  // optional uint32 addition_attr_code_6 = 33 [default = 0];
  if (has_addition_attr_code_6()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->addition_attr_code_6(), output);
  }

  // optional uint32 addition_attr_val_6 = 34 [default = 0];
  if (has_addition_attr_val_6()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->addition_attr_val_6(), output);
  }

  // optional uint32 addition_skill_id = 35 [default = 0];
  if (has_addition_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->addition_skill_id(), output);
  }

  // optional uint32 embed_goods_id_1 = 36 [default = 0];
  if (has_embed_goods_id_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->embed_goods_id_1(), output);
  }

  // optional uint32 embed_binding_1 = 37 [default = 0];
  if (has_embed_binding_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->embed_binding_1(), output);
  }

  // optional uint32 embed_goods_id_2 = 38 [default = 0];
  if (has_embed_goods_id_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->embed_goods_id_2(), output);
  }

  // optional uint32 embed_binding_2 = 39 [default = 0];
  if (has_embed_binding_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->embed_binding_2(), output);
  }

  // optional uint32 embed_goods_id_3 = 40 [default = 0];
  if (has_embed_goods_id_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->embed_goods_id_3(), output);
  }

  // optional uint32 embed_binding_3 = 41 [default = 0];
  if (has_embed_binding_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(41, this->embed_binding_3(), output);
  }

  // optional uint32 embed_goods_id_4 = 42 [default = 0];
  if (has_embed_goods_id_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->embed_goods_id_4(), output);
  }

  // optional uint32 embed_binding_4 = 43 [default = 0];
  if (has_embed_binding_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->embed_binding_4(), output);
  }

  // optional uint32 embed_goods_id_5 = 44 [default = 0];
  if (has_embed_goods_id_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(44, this->embed_goods_id_5(), output);
  }

  // optional uint32 embed_binding_5 = 45 [default = 0];
  if (has_embed_binding_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(45, this->embed_binding_5(), output);
  }

  // optional uint32 r_qlty = 46 [default = 0];
  if (has_r_qlty()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(46, this->r_qlty(), output);
  }

  // optional uint32 r_lv = 47 [default = 0];
  if (has_r_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(47, this->r_lv(), output);
  }

  // optional uint32 r_prof = 48 [default = 0];
  if (has_r_prof()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(48, this->r_prof(), output);
  }

  // optional uint32 r_prof_1 = 49 [default = 0];
  if (has_r_prof_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->r_prof_1(), output);
  }

  // optional uint32 r_prof_2 = 50 [default = 0];
  if (has_r_prof_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->r_prof_2(), output);
  }

  // optional uint32 r_prof_3 = 51 [default = 0];
  if (has_r_prof_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(51, this->r_prof_3(), output);
  }

  // optional uint32 r_status = 52 [default = 0];
  if (has_r_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(52, this->r_status(), output);
  }

  // optional float r_para = 53 [default = 0];
  if (has_r_para()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(53, this->r_para(), output);
  }

  // optional uint32 r_goods_code = 54 [default = 0];
  if (has_r_goods_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(54, this->r_goods_code(), output);
  }

  // optional uint32 r_sub_code = 55 [default = 0];
  if (has_r_sub_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(55, this->r_sub_code(), output);
  }

  // optional uint32 r_attr_sub_code = 56 [default = 0];
  if (has_r_attr_sub_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(56, this->r_attr_sub_code(), output);
  }

  // optional uint32 train = 57 [default = 0];
  if (has_train()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(57, this->train(), output);
  }

  // optional uint32 train_num = 58 [default = 0];
  if (has_train_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(58, this->train_num(), output);
  }

  // optional uint32 lvl = 59 [default = 0];
  if (has_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(59, this->lvl(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* role_goods::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 grid_index = 1 [default = 0];
  if (has_grid_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->grid_index(), target);
  }

  // required uint32 goods_id = 2 [default = 0];
  if (has_goods_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->goods_id(), target);
  }

  // required uint32 quality = 3 [default = 0];
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quality(), target);
  }

  // required uint32 overlaped_num = 4 [default = 0];
  if (has_overlaped_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->overlaped_num(), target);
  }

  // optional uint32 five_elem_attr = 5 [default = 0];
  if (has_five_elem_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->five_elem_attr(), target);
  }

  // optional uint32 authed = 6 [default = 1];
  if (has_authed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->authed(), target);
  }

  // optional uint32 binding = 7 [default = 1];
  if (has_binding()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->binding(), target);
  }

  // optional uint32 score = 8 [default = 0];
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->score(), target);
  }

  // optional uint32 active_second = 9 [default = 0];
  if (has_active_second()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->active_second(), target);
  }

  // optional uint32 end_date = 10 [default = 0];
  if (has_end_date()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->end_date(), target);
  }

  // optional uint32 practice_level = 11 [default = 0];
  if (has_practice_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->practice_level(), target);
  }

  // optional uint32 enhance_level = 12 [default = 0];
  if (has_enhance_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->enhance_level(), target);
  }

  // optional uint32 genuine_qi_val = 13 [default = 0];
  if (has_genuine_qi_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->genuine_qi_val(), target);
  }

  // optional uint32 max_durable_val = 14 [default = 0];
  if (has_max_durable_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->max_durable_val(), target);
  }

  // optional uint32 curr_durable_val = 15 [default = 0];
  if (has_curr_durable_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->curr_durable_val(), target);
  }

  // optional uint32 curr_bless_val = 16 [default = 0];
  if (has_curr_bless_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->curr_bless_val(), target);
  }

  // optional uint32 curr_hole_num = 17 [default = 0];
  if (has_curr_hole_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->curr_hole_num(), target);
  }

  // optional uint32 temper_val = 18 [default = 0];
  if (has_temper_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->temper_val(), target);
  }

  // optional uint32 base_attr_code_1 = 19 [default = 0];
  if (has_base_attr_code_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->base_attr_code_1(), target);
  }

  // optional uint32 base_attr_val_1 = 20 [default = 0];
  if (has_base_attr_val_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->base_attr_val_1(), target);
  }

  // optional uint32 base_attr_code_2 = 21 [default = 0];
  if (has_base_attr_code_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->base_attr_code_2(), target);
  }

  // optional uint32 base_attr_val_2 = 22 [default = 0];
  if (has_base_attr_val_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->base_attr_val_2(), target);
  }

  // optional uint32 addition_attr_code_1 = 23 [default = 0];
  if (has_addition_attr_code_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->addition_attr_code_1(), target);
  }

  // optional uint32 addition_attr_val_1 = 24 [default = 0];
  if (has_addition_attr_val_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->addition_attr_val_1(), target);
  }

  // optional uint32 addition_attr_code_2 = 25 [default = 0];
  if (has_addition_attr_code_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->addition_attr_code_2(), target);
  }

  // optional uint32 addition_attr_val_2 = 26 [default = 0];
  if (has_addition_attr_val_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->addition_attr_val_2(), target);
  }

  // optional uint32 addition_attr_code_3 = 27 [default = 0];
  if (has_addition_attr_code_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->addition_attr_code_3(), target);
  }

  // optional uint32 addition_attr_val_3 = 28 [default = 0];
  if (has_addition_attr_val_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->addition_attr_val_3(), target);
  }

  // optional uint32 addition_attr_code_4 = 29 [default = 0];
  if (has_addition_attr_code_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->addition_attr_code_4(), target);
  }

  // optional uint32 addition_attr_val_4 = 30 [default = 0];
  if (has_addition_attr_val_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->addition_attr_val_4(), target);
  }

  // optional uint32 addition_attr_code_5 = 31 [default = 0];
  if (has_addition_attr_code_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->addition_attr_code_5(), target);
  }

  // optional uint32 addition_attr_val_5 = 32 [default = 0];
  if (has_addition_attr_val_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->addition_attr_val_5(), target);
  }

  // optional uint32 addition_attr_code_6 = 33 [default = 0];
  if (has_addition_attr_code_6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->addition_attr_code_6(), target);
  }

  // optional uint32 addition_attr_val_6 = 34 [default = 0];
  if (has_addition_attr_val_6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->addition_attr_val_6(), target);
  }

  // optional uint32 addition_skill_id = 35 [default = 0];
  if (has_addition_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->addition_skill_id(), target);
  }

  // optional uint32 embed_goods_id_1 = 36 [default = 0];
  if (has_embed_goods_id_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->embed_goods_id_1(), target);
  }

  // optional uint32 embed_binding_1 = 37 [default = 0];
  if (has_embed_binding_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->embed_binding_1(), target);
  }

  // optional uint32 embed_goods_id_2 = 38 [default = 0];
  if (has_embed_goods_id_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->embed_goods_id_2(), target);
  }

  // optional uint32 embed_binding_2 = 39 [default = 0];
  if (has_embed_binding_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->embed_binding_2(), target);
  }

  // optional uint32 embed_goods_id_3 = 40 [default = 0];
  if (has_embed_goods_id_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->embed_goods_id_3(), target);
  }

  // optional uint32 embed_binding_3 = 41 [default = 0];
  if (has_embed_binding_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(41, this->embed_binding_3(), target);
  }

  // optional uint32 embed_goods_id_4 = 42 [default = 0];
  if (has_embed_goods_id_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->embed_goods_id_4(), target);
  }

  // optional uint32 embed_binding_4 = 43 [default = 0];
  if (has_embed_binding_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->embed_binding_4(), target);
  }

  // optional uint32 embed_goods_id_5 = 44 [default = 0];
  if (has_embed_goods_id_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(44, this->embed_goods_id_5(), target);
  }

  // optional uint32 embed_binding_5 = 45 [default = 0];
  if (has_embed_binding_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(45, this->embed_binding_5(), target);
  }

  // optional uint32 r_qlty = 46 [default = 0];
  if (has_r_qlty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(46, this->r_qlty(), target);
  }

  // optional uint32 r_lv = 47 [default = 0];
  if (has_r_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(47, this->r_lv(), target);
  }

  // optional uint32 r_prof = 48 [default = 0];
  if (has_r_prof()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(48, this->r_prof(), target);
  }

  // optional uint32 r_prof_1 = 49 [default = 0];
  if (has_r_prof_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(49, this->r_prof_1(), target);
  }

  // optional uint32 r_prof_2 = 50 [default = 0];
  if (has_r_prof_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->r_prof_2(), target);
  }

  // optional uint32 r_prof_3 = 51 [default = 0];
  if (has_r_prof_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(51, this->r_prof_3(), target);
  }

  // optional uint32 r_status = 52 [default = 0];
  if (has_r_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(52, this->r_status(), target);
  }

  // optional float r_para = 53 [default = 0];
  if (has_r_para()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(53, this->r_para(), target);
  }

  // optional uint32 r_goods_code = 54 [default = 0];
  if (has_r_goods_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(54, this->r_goods_code(), target);
  }

  // optional uint32 r_sub_code = 55 [default = 0];
  if (has_r_sub_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(55, this->r_sub_code(), target);
  }

  // optional uint32 r_attr_sub_code = 56 [default = 0];
  if (has_r_attr_sub_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(56, this->r_attr_sub_code(), target);
  }

  // optional uint32 train = 57 [default = 0];
  if (has_train()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(57, this->train(), target);
  }

  // optional uint32 train_num = 58 [default = 0];
  if (has_train_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(58, this->train_num(), target);
  }

  // optional uint32 lvl = 59 [default = 0];
  if (has_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(59, this->lvl(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int role_goods::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 grid_index = 1 [default = 0];
    if (has_grid_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grid_index());
    }

    // required uint32 goods_id = 2 [default = 0];
    if (has_goods_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goods_id());
    }

    // required uint32 quality = 3 [default = 0];
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // required uint32 overlaped_num = 4 [default = 0];
    if (has_overlaped_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->overlaped_num());
    }

    // optional uint32 five_elem_attr = 5 [default = 0];
    if (has_five_elem_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->five_elem_attr());
    }

    // optional uint32 authed = 6 [default = 1];
    if (has_authed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->authed());
    }

    // optional uint32 binding = 7 [default = 1];
    if (has_binding()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->binding());
    }

    // optional uint32 score = 8 [default = 0];
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 active_second = 9 [default = 0];
    if (has_active_second()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->active_second());
    }

    // optional uint32 end_date = 10 [default = 0];
    if (has_end_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->end_date());
    }

    // optional uint32 practice_level = 11 [default = 0];
    if (has_practice_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->practice_level());
    }

    // optional uint32 enhance_level = 12 [default = 0];
    if (has_enhance_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->enhance_level());
    }

    // optional uint32 genuine_qi_val = 13 [default = 0];
    if (has_genuine_qi_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->genuine_qi_val());
    }

    // optional uint32 max_durable_val = 14 [default = 0];
    if (has_max_durable_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_durable_val());
    }

    // optional uint32 curr_durable_val = 15 [default = 0];
    if (has_curr_durable_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->curr_durable_val());
    }

    // optional uint32 curr_bless_val = 16 [default = 0];
    if (has_curr_bless_val()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->curr_bless_val());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional uint32 curr_hole_num = 17 [default = 0];
    if (has_curr_hole_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->curr_hole_num());
    }

    // optional uint32 temper_val = 18 [default = 0];
    if (has_temper_val()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->temper_val());
    }

    // optional uint32 base_attr_code_1 = 19 [default = 0];
    if (has_base_attr_code_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_attr_code_1());
    }

    // optional uint32 base_attr_val_1 = 20 [default = 0];
    if (has_base_attr_val_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_attr_val_1());
    }

    // optional uint32 base_attr_code_2 = 21 [default = 0];
    if (has_base_attr_code_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_attr_code_2());
    }

    // optional uint32 base_attr_val_2 = 22 [default = 0];
    if (has_base_attr_val_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->base_attr_val_2());
    }

    // optional uint32 addition_attr_code_1 = 23 [default = 0];
    if (has_addition_attr_code_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_code_1());
    }

    // optional uint32 addition_attr_val_1 = 24 [default = 0];
    if (has_addition_attr_val_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_val_1());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional uint32 addition_attr_code_2 = 25 [default = 0];
    if (has_addition_attr_code_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_code_2());
    }

    // optional uint32 addition_attr_val_2 = 26 [default = 0];
    if (has_addition_attr_val_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_val_2());
    }

    // optional uint32 addition_attr_code_3 = 27 [default = 0];
    if (has_addition_attr_code_3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_code_3());
    }

    // optional uint32 addition_attr_val_3 = 28 [default = 0];
    if (has_addition_attr_val_3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_val_3());
    }

    // optional uint32 addition_attr_code_4 = 29 [default = 0];
    if (has_addition_attr_code_4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_code_4());
    }

    // optional uint32 addition_attr_val_4 = 30 [default = 0];
    if (has_addition_attr_val_4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_val_4());
    }

    // optional uint32 addition_attr_code_5 = 31 [default = 0];
    if (has_addition_attr_code_5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_code_5());
    }

    // optional uint32 addition_attr_val_5 = 32 [default = 0];
    if (has_addition_attr_val_5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_val_5());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional uint32 addition_attr_code_6 = 33 [default = 0];
    if (has_addition_attr_code_6()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_code_6());
    }

    // optional uint32 addition_attr_val_6 = 34 [default = 0];
    if (has_addition_attr_val_6()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_attr_val_6());
    }

    // optional uint32 addition_skill_id = 35 [default = 0];
    if (has_addition_skill_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->addition_skill_id());
    }

    // optional uint32 embed_goods_id_1 = 36 [default = 0];
    if (has_embed_goods_id_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_goods_id_1());
    }

    // optional uint32 embed_binding_1 = 37 [default = 0];
    if (has_embed_binding_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_binding_1());
    }

    // optional uint32 embed_goods_id_2 = 38 [default = 0];
    if (has_embed_goods_id_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_goods_id_2());
    }

    // optional uint32 embed_binding_2 = 39 [default = 0];
    if (has_embed_binding_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_binding_2());
    }

    // optional uint32 embed_goods_id_3 = 40 [default = 0];
    if (has_embed_goods_id_3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_goods_id_3());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional uint32 embed_binding_3 = 41 [default = 0];
    if (has_embed_binding_3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_binding_3());
    }

    // optional uint32 embed_goods_id_4 = 42 [default = 0];
    if (has_embed_goods_id_4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_goods_id_4());
    }

    // optional uint32 embed_binding_4 = 43 [default = 0];
    if (has_embed_binding_4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_binding_4());
    }

    // optional uint32 embed_goods_id_5 = 44 [default = 0];
    if (has_embed_goods_id_5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_goods_id_5());
    }

    // optional uint32 embed_binding_5 = 45 [default = 0];
    if (has_embed_binding_5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->embed_binding_5());
    }

    // optional uint32 r_qlty = 46 [default = 0];
    if (has_r_qlty()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_qlty());
    }

    // optional uint32 r_lv = 47 [default = 0];
    if (has_r_lv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_lv());
    }

    // optional uint32 r_prof = 48 [default = 0];
    if (has_r_prof()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_prof());
    }

  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // optional uint32 r_prof_1 = 49 [default = 0];
    if (has_r_prof_1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_prof_1());
    }

    // optional uint32 r_prof_2 = 50 [default = 0];
    if (has_r_prof_2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_prof_2());
    }

    // optional uint32 r_prof_3 = 51 [default = 0];
    if (has_r_prof_3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_prof_3());
    }

    // optional uint32 r_status = 52 [default = 0];
    if (has_r_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_status());
    }

    // optional float r_para = 53 [default = 0];
    if (has_r_para()) {
      total_size += 2 + 4;
    }

    // optional uint32 r_goods_code = 54 [default = 0];
    if (has_r_goods_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_goods_code());
    }

    // optional uint32 r_sub_code = 55 [default = 0];
    if (has_r_sub_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_sub_code());
    }

    // optional uint32 r_attr_sub_code = 56 [default = 0];
    if (has_r_attr_sub_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r_attr_sub_code());
    }

  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    // optional uint32 train = 57 [default = 0];
    if (has_train()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->train());
    }

    // optional uint32 train_num = 58 [default = 0];
    if (has_train_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->train_num());
    }

    // optional uint32 lvl = 59 [default = 0];
    if (has_lvl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lvl());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void role_goods::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const role_goods* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const role_goods*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void role_goods::MergeFrom(const role_goods& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grid_index()) {
      set_grid_index(from.grid_index());
    }
    if (from.has_goods_id()) {
      set_goods_id(from.goods_id());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_overlaped_num()) {
      set_overlaped_num(from.overlaped_num());
    }
    if (from.has_five_elem_attr()) {
      set_five_elem_attr(from.five_elem_attr());
    }
    if (from.has_authed()) {
      set_authed(from.authed());
    }
    if (from.has_binding()) {
      set_binding(from.binding());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_active_second()) {
      set_active_second(from.active_second());
    }
    if (from.has_end_date()) {
      set_end_date(from.end_date());
    }
    if (from.has_practice_level()) {
      set_practice_level(from.practice_level());
    }
    if (from.has_enhance_level()) {
      set_enhance_level(from.enhance_level());
    }
    if (from.has_genuine_qi_val()) {
      set_genuine_qi_val(from.genuine_qi_val());
    }
    if (from.has_max_durable_val()) {
      set_max_durable_val(from.max_durable_val());
    }
    if (from.has_curr_durable_val()) {
      set_curr_durable_val(from.curr_durable_val());
    }
    if (from.has_curr_bless_val()) {
      set_curr_bless_val(from.curr_bless_val());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_curr_hole_num()) {
      set_curr_hole_num(from.curr_hole_num());
    }
    if (from.has_temper_val()) {
      set_temper_val(from.temper_val());
    }
    if (from.has_base_attr_code_1()) {
      set_base_attr_code_1(from.base_attr_code_1());
    }
    if (from.has_base_attr_val_1()) {
      set_base_attr_val_1(from.base_attr_val_1());
    }
    if (from.has_base_attr_code_2()) {
      set_base_attr_code_2(from.base_attr_code_2());
    }
    if (from.has_base_attr_val_2()) {
      set_base_attr_val_2(from.base_attr_val_2());
    }
    if (from.has_addition_attr_code_1()) {
      set_addition_attr_code_1(from.addition_attr_code_1());
    }
    if (from.has_addition_attr_val_1()) {
      set_addition_attr_val_1(from.addition_attr_val_1());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_addition_attr_code_2()) {
      set_addition_attr_code_2(from.addition_attr_code_2());
    }
    if (from.has_addition_attr_val_2()) {
      set_addition_attr_val_2(from.addition_attr_val_2());
    }
    if (from.has_addition_attr_code_3()) {
      set_addition_attr_code_3(from.addition_attr_code_3());
    }
    if (from.has_addition_attr_val_3()) {
      set_addition_attr_val_3(from.addition_attr_val_3());
    }
    if (from.has_addition_attr_code_4()) {
      set_addition_attr_code_4(from.addition_attr_code_4());
    }
    if (from.has_addition_attr_val_4()) {
      set_addition_attr_val_4(from.addition_attr_val_4());
    }
    if (from.has_addition_attr_code_5()) {
      set_addition_attr_code_5(from.addition_attr_code_5());
    }
    if (from.has_addition_attr_val_5()) {
      set_addition_attr_val_5(from.addition_attr_val_5());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_addition_attr_code_6()) {
      set_addition_attr_code_6(from.addition_attr_code_6());
    }
    if (from.has_addition_attr_val_6()) {
      set_addition_attr_val_6(from.addition_attr_val_6());
    }
    if (from.has_addition_skill_id()) {
      set_addition_skill_id(from.addition_skill_id());
    }
    if (from.has_embed_goods_id_1()) {
      set_embed_goods_id_1(from.embed_goods_id_1());
    }
    if (from.has_embed_binding_1()) {
      set_embed_binding_1(from.embed_binding_1());
    }
    if (from.has_embed_goods_id_2()) {
      set_embed_goods_id_2(from.embed_goods_id_2());
    }
    if (from.has_embed_binding_2()) {
      set_embed_binding_2(from.embed_binding_2());
    }
    if (from.has_embed_goods_id_3()) {
      set_embed_goods_id_3(from.embed_goods_id_3());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_embed_binding_3()) {
      set_embed_binding_3(from.embed_binding_3());
    }
    if (from.has_embed_goods_id_4()) {
      set_embed_goods_id_4(from.embed_goods_id_4());
    }
    if (from.has_embed_binding_4()) {
      set_embed_binding_4(from.embed_binding_4());
    }
    if (from.has_embed_goods_id_5()) {
      set_embed_goods_id_5(from.embed_goods_id_5());
    }
    if (from.has_embed_binding_5()) {
      set_embed_binding_5(from.embed_binding_5());
    }
    if (from.has_r_qlty()) {
      set_r_qlty(from.r_qlty());
    }
    if (from.has_r_lv()) {
      set_r_lv(from.r_lv());
    }
    if (from.has_r_prof()) {
      set_r_prof(from.r_prof());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from.has_r_prof_1()) {
      set_r_prof_1(from.r_prof_1());
    }
    if (from.has_r_prof_2()) {
      set_r_prof_2(from.r_prof_2());
    }
    if (from.has_r_prof_3()) {
      set_r_prof_3(from.r_prof_3());
    }
    if (from.has_r_status()) {
      set_r_status(from.r_status());
    }
    if (from.has_r_para()) {
      set_r_para(from.r_para());
    }
    if (from.has_r_goods_code()) {
      set_r_goods_code(from.r_goods_code());
    }
    if (from.has_r_sub_code()) {
      set_r_sub_code(from.r_sub_code());
    }
    if (from.has_r_attr_sub_code()) {
      set_r_attr_sub_code(from.r_attr_sub_code());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from.has_train()) {
      set_train(from.train());
    }
    if (from.has_train_num()) {
      set_train_num(from.train_num());
    }
    if (from.has_lvl()) {
      set_lvl(from.lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void role_goods::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void role_goods::CopyFrom(const role_goods& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool role_goods::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void role_goods::Swap(role_goods* other) {
  if (other != this) {
    std::swap(grid_index_, other->grid_index_);
    std::swap(goods_id_, other->goods_id_);
    std::swap(quality_, other->quality_);
    std::swap(overlaped_num_, other->overlaped_num_);
    std::swap(five_elem_attr_, other->five_elem_attr_);
    std::swap(authed_, other->authed_);
    std::swap(binding_, other->binding_);
    std::swap(score_, other->score_);
    std::swap(active_second_, other->active_second_);
    std::swap(end_date_, other->end_date_);
    std::swap(practice_level_, other->practice_level_);
    std::swap(enhance_level_, other->enhance_level_);
    std::swap(genuine_qi_val_, other->genuine_qi_val_);
    std::swap(max_durable_val_, other->max_durable_val_);
    std::swap(curr_durable_val_, other->curr_durable_val_);
    std::swap(curr_bless_val_, other->curr_bless_val_);
    std::swap(curr_hole_num_, other->curr_hole_num_);
    std::swap(temper_val_, other->temper_val_);
    std::swap(base_attr_code_1_, other->base_attr_code_1_);
    std::swap(base_attr_val_1_, other->base_attr_val_1_);
    std::swap(base_attr_code_2_, other->base_attr_code_2_);
    std::swap(base_attr_val_2_, other->base_attr_val_2_);
    std::swap(addition_attr_code_1_, other->addition_attr_code_1_);
    std::swap(addition_attr_val_1_, other->addition_attr_val_1_);
    std::swap(addition_attr_code_2_, other->addition_attr_code_2_);
    std::swap(addition_attr_val_2_, other->addition_attr_val_2_);
    std::swap(addition_attr_code_3_, other->addition_attr_code_3_);
    std::swap(addition_attr_val_3_, other->addition_attr_val_3_);
    std::swap(addition_attr_code_4_, other->addition_attr_code_4_);
    std::swap(addition_attr_val_4_, other->addition_attr_val_4_);
    std::swap(addition_attr_code_5_, other->addition_attr_code_5_);
    std::swap(addition_attr_val_5_, other->addition_attr_val_5_);
    std::swap(addition_attr_code_6_, other->addition_attr_code_6_);
    std::swap(addition_attr_val_6_, other->addition_attr_val_6_);
    std::swap(addition_skill_id_, other->addition_skill_id_);
    std::swap(embed_goods_id_1_, other->embed_goods_id_1_);
    std::swap(embed_binding_1_, other->embed_binding_1_);
    std::swap(embed_goods_id_2_, other->embed_goods_id_2_);
    std::swap(embed_binding_2_, other->embed_binding_2_);
    std::swap(embed_goods_id_3_, other->embed_goods_id_3_);
    std::swap(embed_binding_3_, other->embed_binding_3_);
    std::swap(embed_goods_id_4_, other->embed_goods_id_4_);
    std::swap(embed_binding_4_, other->embed_binding_4_);
    std::swap(embed_goods_id_5_, other->embed_goods_id_5_);
    std::swap(embed_binding_5_, other->embed_binding_5_);
    std::swap(r_qlty_, other->r_qlty_);
    std::swap(r_lv_, other->r_lv_);
    std::swap(r_prof_, other->r_prof_);
    std::swap(r_prof_1_, other->r_prof_1_);
    std::swap(r_prof_2_, other->r_prof_2_);
    std::swap(r_prof_3_, other->r_prof_3_);
    std::swap(r_status_, other->r_status_);
    std::swap(r_para_, other->r_para_);
    std::swap(r_goods_code_, other->r_goods_code_);
    std::swap(r_sub_code_, other->r_sub_code_);
    std::swap(r_attr_sub_code_, other->r_attr_sub_code_);
    std::swap(train_, other->train_);
    std::swap(train_num_, other->train_num_);
    std::swap(lvl_, other->lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata role_goods::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = role_goods_descriptor_;
  metadata.reflection = role_goods_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace server

// @@protoc_insertion_point(global_scope)
