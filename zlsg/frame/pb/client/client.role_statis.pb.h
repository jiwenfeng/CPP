// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.role_statis.proto

#ifndef PROTOBUF_client_2erole_5fstatis_2eproto__INCLUDED
#define PROTOBUF_client_2erole_5fstatis_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

class role_statis_req;
class role_statis_info;
class role_statis_rsp;
class day_info;
class sign_list_req;
class sign_list_rsp;
class sign_in_req;
class sign_in_rsp;
class land_reward_req;
class land_reward_rsp;
class land_reward_list_rsp;

enum SIGN_IN_RESULT_E {
  SIGN_IN_RESULT_SUCCESS = 1,
  SIGN_IN_RESULT_ALREADY_SIGN = 2,
  SIGN_IN_RESULT_CONFIG_ERRO = 3
};
bool SIGN_IN_RESULT_E_IsValid(int value);
const SIGN_IN_RESULT_E SIGN_IN_RESULT_E_MIN = SIGN_IN_RESULT_SUCCESS;
const SIGN_IN_RESULT_E SIGN_IN_RESULT_E_MAX = SIGN_IN_RESULT_CONFIG_ERRO;
const int SIGN_IN_RESULT_E_ARRAYSIZE = SIGN_IN_RESULT_E_MAX + 1;

const ::google::protobuf::EnumDescriptor* SIGN_IN_RESULT_E_descriptor();
inline const ::std::string& SIGN_IN_RESULT_E_Name(SIGN_IN_RESULT_E value) {
  return ::google::protobuf::internal::NameOfEnum(
    SIGN_IN_RESULT_E_descriptor(), value);
}
inline bool SIGN_IN_RESULT_E_Parse(
    const ::std::string& name, SIGN_IN_RESULT_E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SIGN_IN_RESULT_E>(
    SIGN_IN_RESULT_E_descriptor(), name, value);
}
// ===================================================================

class role_statis_req : public ::google::protobuf::Message {
 public:
  role_statis_req();
  virtual ~role_statis_req();

  role_statis_req(const role_statis_req& from);

  inline role_statis_req& operator=(const role_statis_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const role_statis_req& default_instance();

  void Swap(role_statis_req* other);

  // implements Message ----------------------------------------------

  role_statis_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const role_statis_req& from);
  void MergeFrom(const role_statis_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 type = 1;
  inline int type_size() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type(int index) const;
  inline void set_type(int index, ::google::protobuf::uint32 value);
  inline void add_type(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_type();

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.role_statis_req)
 private:
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > type_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static role_statis_req* default_instance_;
};
// -------------------------------------------------------------------

class role_statis_info : public ::google::protobuf::Message {
 public:
  role_statis_info();
  virtual ~role_statis_info();

  role_statis_info(const role_statis_info& from);

  inline role_statis_info& operator=(const role_statis_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const role_statis_info& default_instance();

  void Swap(role_statis_info* other);

  // implements Message ----------------------------------------------

  role_statis_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const role_statis_info& from);
  void MergeFrom(const role_statis_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 update_type = 2;
  inline bool has_update_type() const;
  inline void clear_update_type();
  static const int kUpdateTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 update_type() const;
  inline void set_update_type(::google::protobuf::uint32 value);

  // required uint32 val = 3;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 3;
  inline ::google::protobuf::uint32 val() const;
  inline void set_val(::google::protobuf::uint32 value);

  // required uint32 last_time = 4;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 last_time() const;
  inline void set_last_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.role_statis_info)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_update_type();
  inline void clear_has_update_type();
  inline void set_has_val();
  inline void clear_has_val();
  inline void set_has_last_time();
  inline void clear_has_last_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 update_type_;
  ::google::protobuf::uint32 val_;
  ::google::protobuf::uint32 last_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static role_statis_info* default_instance_;
};
// -------------------------------------------------------------------

class role_statis_rsp : public ::google::protobuf::Message {
 public:
  role_statis_rsp();
  virtual ~role_statis_rsp();

  role_statis_rsp(const role_statis_rsp& from);

  inline role_statis_rsp& operator=(const role_statis_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const role_statis_rsp& default_instance();

  void Swap(role_statis_rsp* other);

  // implements Message ----------------------------------------------

  role_statis_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const role_statis_rsp& from);
  void MergeFrom(const role_statis_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.role_statis_info rsi = 1;
  inline int rsi_size() const;
  inline void clear_rsi();
  static const int kRsiFieldNumber = 1;
  inline const ::client::role_statis_info& rsi(int index) const;
  inline ::client::role_statis_info* mutable_rsi(int index);
  inline ::client::role_statis_info* add_rsi();
  inline const ::google::protobuf::RepeatedPtrField< ::client::role_statis_info >&
      rsi() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::role_statis_info >*
      mutable_rsi();

  // @@protoc_insertion_point(class_scope:client.role_statis_rsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::role_statis_info > rsi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static role_statis_rsp* default_instance_;
};
// -------------------------------------------------------------------

class day_info : public ::google::protobuf::Message {
 public:
  day_info();
  virtual ~day_info();

  day_info(const day_info& from);

  inline day_info& operator=(const day_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const day_info& default_instance();

  void Swap(day_info* other);

  // implements Message ----------------------------------------------

  day_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const day_info& from);
  void MergeFrom(const day_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // required uint32 month = 2;
  inline bool has_month() const;
  inline void clear_month();
  static const int kMonthFieldNumber = 2;
  inline ::google::protobuf::uint32 month() const;
  inline void set_month(::google::protobuf::uint32 value);

  // required uint32 year = 3;
  inline bool has_year() const;
  inline void clear_year();
  static const int kYearFieldNumber = 3;
  inline ::google::protobuf::uint32 year() const;
  inline void set_year(::google::protobuf::uint32 value);

  // required uint32 week_day = 4;
  inline bool has_week_day() const;
  inline void clear_week_day();
  static const int kWeekDayFieldNumber = 4;
  inline ::google::protobuf::uint32 week_day() const;
  inline void set_week_day(::google::protobuf::uint32 value);

  // required uint32 max_day = 5;
  inline bool has_max_day() const;
  inline void clear_max_day();
  static const int kMaxDayFieldNumber = 5;
  inline ::google::protobuf::uint32 max_day() const;
  inline void set_max_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.day_info)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_month();
  inline void clear_has_month();
  inline void set_has_year();
  inline void clear_has_year();
  inline void set_has_week_day();
  inline void clear_has_week_day();
  inline void set_has_max_day();
  inline void clear_has_max_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 day_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 year_;
  ::google::protobuf::uint32 week_day_;
  ::google::protobuf::uint32 max_day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static day_info* default_instance_;
};
// -------------------------------------------------------------------

class sign_list_req : public ::google::protobuf::Message {
 public:
  sign_list_req();
  virtual ~sign_list_req();

  sign_list_req(const sign_list_req& from);

  inline sign_list_req& operator=(const sign_list_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sign_list_req& default_instance();

  void Swap(sign_list_req* other);

  // implements Message ----------------------------------------------

  sign_list_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sign_list_req& from);
  void MergeFrom(const sign_list_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 list_tye = 1;
  inline bool has_list_tye() const;
  inline void clear_list_tye();
  static const int kListTyeFieldNumber = 1;
  inline ::google::protobuf::uint32 list_tye() const;
  inline void set_list_tye(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.sign_list_req)
 private:
  inline void set_has_list_tye();
  inline void clear_has_list_tye();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 list_tye_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static sign_list_req* default_instance_;
};
// -------------------------------------------------------------------

class sign_list_rsp : public ::google::protobuf::Message {
 public:
  sign_list_rsp();
  virtual ~sign_list_rsp();

  sign_list_rsp(const sign_list_rsp& from);

  inline sign_list_rsp& operator=(const sign_list_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sign_list_rsp& default_instance();

  void Swap(sign_list_rsp* other);

  // implements Message ----------------------------------------------

  sign_list_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sign_list_rsp& from);
  void MergeFrom(const sign_list_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sign_value = 1;
  inline bool has_sign_value() const;
  inline void clear_sign_value();
  static const int kSignValueFieldNumber = 1;
  inline ::google::protobuf::uint32 sign_value() const;
  inline void set_sign_value(::google::protobuf::uint32 value);

  // repeated .client.day_info info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::client::day_info& info(int index) const;
  inline ::client::day_info* mutable_info(int index);
  inline ::client::day_info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::day_info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::day_info >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:client.sign_list_rsp)
 private:
  inline void set_has_sign_value();
  inline void clear_has_sign_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::day_info > info_;
  ::google::protobuf::uint32 sign_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static sign_list_rsp* default_instance_;
};
// -------------------------------------------------------------------

class sign_in_req : public ::google::protobuf::Message {
 public:
  sign_in_req();
  virtual ~sign_in_req();

  sign_in_req(const sign_in_req& from);

  inline sign_in_req& operator=(const sign_in_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sign_in_req& default_instance();

  void Swap(sign_in_req* other);

  // implements Message ----------------------------------------------

  sign_in_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sign_in_req& from);
  void MergeFrom(const sign_in_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sign_date = 1;
  inline bool has_sign_date() const;
  inline void clear_sign_date();
  static const int kSignDateFieldNumber = 1;
  inline ::google::protobuf::uint32 sign_date() const;
  inline void set_sign_date(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.sign_in_req)
 private:
  inline void set_has_sign_date();
  inline void clear_has_sign_date();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 sign_date_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static sign_in_req* default_instance_;
};
// -------------------------------------------------------------------

class sign_in_rsp : public ::google::protobuf::Message {
 public:
  sign_in_rsp();
  virtual ~sign_in_rsp();

  sign_in_rsp(const sign_in_rsp& from);

  inline sign_in_rsp& operator=(const sign_in_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sign_in_rsp& default_instance();

  void Swap(sign_in_rsp* other);

  // implements Message ----------------------------------------------

  sign_in_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sign_in_rsp& from);
  void MergeFrom(const sign_in_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result_type = 1;
  inline bool has_result_type() const;
  inline void clear_result_type();
  static const int kResultTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 result_type() const;
  inline void set_result_type(::google::protobuf::uint32 value);

  // required uint32 sign_value = 2;
  inline bool has_sign_value() const;
  inline void clear_sign_value();
  static const int kSignValueFieldNumber = 2;
  inline ::google::protobuf::uint32 sign_value() const;
  inline void set_sign_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.sign_in_rsp)
 private:
  inline void set_has_result_type();
  inline void clear_has_result_type();
  inline void set_has_sign_value();
  inline void clear_has_sign_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_type_;
  ::google::protobuf::uint32 sign_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static sign_in_rsp* default_instance_;
};
// -------------------------------------------------------------------

class land_reward_req : public ::google::protobuf::Message {
 public:
  land_reward_req();
  virtual ~land_reward_req();

  land_reward_req(const land_reward_req& from);

  inline land_reward_req& operator=(const land_reward_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const land_reward_req& default_instance();

  void Swap(land_reward_req* other);

  // implements Message ----------------------------------------------

  land_reward_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const land_reward_req& from);
  void MergeFrom(const land_reward_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 land_day = 1;
  inline bool has_land_day() const;
  inline void clear_land_day();
  static const int kLandDayFieldNumber = 1;
  inline ::google::protobuf::uint32 land_day() const;
  inline void set_land_day(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.land_reward_req)
 private:
  inline void set_has_land_day();
  inline void clear_has_land_day();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 land_day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static land_reward_req* default_instance_;
};
// -------------------------------------------------------------------

class land_reward_rsp : public ::google::protobuf::Message {
 public:
  land_reward_rsp();
  virtual ~land_reward_rsp();

  land_reward_rsp(const land_reward_rsp& from);

  inline land_reward_rsp& operator=(const land_reward_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const land_reward_rsp& default_instance();

  void Swap(land_reward_rsp* other);

  // implements Message ----------------------------------------------

  land_reward_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const land_reward_rsp& from);
  void MergeFrom(const land_reward_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result_type = 1;
  inline bool has_result_type() const;
  inline void clear_result_type();
  static const int kResultTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 result_type() const;
  inline void set_result_type(::google::protobuf::uint32 value);

  // optional uint32 reward_flag = 2;
  inline bool has_reward_flag() const;
  inline void clear_reward_flag();
  static const int kRewardFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 reward_flag() const;
  inline void set_reward_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.land_reward_rsp)
 private:
  inline void set_has_result_type();
  inline void clear_has_result_type();
  inline void set_has_reward_flag();
  inline void clear_has_reward_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_type_;
  ::google::protobuf::uint32 reward_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static land_reward_rsp* default_instance_;
};
// -------------------------------------------------------------------

class land_reward_list_rsp : public ::google::protobuf::Message {
 public:
  land_reward_list_rsp();
  virtual ~land_reward_list_rsp();

  land_reward_list_rsp(const land_reward_list_rsp& from);

  inline land_reward_list_rsp& operator=(const land_reward_list_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const land_reward_list_rsp& default_instance();

  void Swap(land_reward_list_rsp* other);

  // implements Message ----------------------------------------------

  land_reward_list_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const land_reward_list_rsp& from);
  void MergeFrom(const land_reward_list_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 land_day = 1;
  inline bool has_land_day() const;
  inline void clear_land_day();
  static const int kLandDayFieldNumber = 1;
  inline ::google::protobuf::uint32 land_day() const;
  inline void set_land_day(::google::protobuf::uint32 value);

  // required uint32 reward_flag = 2;
  inline bool has_reward_flag() const;
  inline void clear_reward_flag();
  static const int kRewardFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 reward_flag() const;
  inline void set_reward_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.land_reward_list_rsp)
 private:
  inline void set_has_land_day();
  inline void clear_has_land_day();
  inline void set_has_reward_flag();
  inline void clear_has_reward_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 land_day_;
  ::google::protobuf::uint32 reward_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fstatis_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fstatis_2eproto();

  void InitAsDefaultInstance();
  static land_reward_list_rsp* default_instance_;
};
// ===================================================================


// ===================================================================

// role_statis_req

// repeated uint32 type = 1;
inline int role_statis_req::type_size() const {
  return type_.size();
}
inline void role_statis_req::clear_type() {
  type_.Clear();
}
inline ::google::protobuf::uint32 role_statis_req::type(int index) const {
  return type_.Get(index);
}
inline void role_statis_req::set_type(int index, ::google::protobuf::uint32 value) {
  type_.Set(index, value);
}
inline void role_statis_req::add_type(::google::protobuf::uint32 value) {
  type_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
role_statis_req::type() const {
  return type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
role_statis_req::mutable_type() {
  return &type_;
}

// optional .client.server_head svr_head = 1000;
inline bool role_statis_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void role_statis_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void role_statis_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void role_statis_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& role_statis_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* role_statis_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* role_statis_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void role_statis_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// role_statis_info

// required uint32 type = 1;
inline bool role_statis_info::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void role_statis_info::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void role_statis_info::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void role_statis_info::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 role_statis_info::type() const {
  return type_;
}
inline void role_statis_info::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 update_type = 2;
inline bool role_statis_info::has_update_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void role_statis_info::set_has_update_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void role_statis_info::clear_has_update_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void role_statis_info::clear_update_type() {
  update_type_ = 0u;
  clear_has_update_type();
}
inline ::google::protobuf::uint32 role_statis_info::update_type() const {
  return update_type_;
}
inline void role_statis_info::set_update_type(::google::protobuf::uint32 value) {
  set_has_update_type();
  update_type_ = value;
}

// required uint32 val = 3;
inline bool role_statis_info::has_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void role_statis_info::set_has_val() {
  _has_bits_[0] |= 0x00000004u;
}
inline void role_statis_info::clear_has_val() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void role_statis_info::clear_val() {
  val_ = 0u;
  clear_has_val();
}
inline ::google::protobuf::uint32 role_statis_info::val() const {
  return val_;
}
inline void role_statis_info::set_val(::google::protobuf::uint32 value) {
  set_has_val();
  val_ = value;
}

// required uint32 last_time = 4;
inline bool role_statis_info::has_last_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void role_statis_info::set_has_last_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void role_statis_info::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void role_statis_info::clear_last_time() {
  last_time_ = 0u;
  clear_has_last_time();
}
inline ::google::protobuf::uint32 role_statis_info::last_time() const {
  return last_time_;
}
inline void role_statis_info::set_last_time(::google::protobuf::uint32 value) {
  set_has_last_time();
  last_time_ = value;
}

// -------------------------------------------------------------------

// role_statis_rsp

// repeated .client.role_statis_info rsi = 1;
inline int role_statis_rsp::rsi_size() const {
  return rsi_.size();
}
inline void role_statis_rsp::clear_rsi() {
  rsi_.Clear();
}
inline const ::client::role_statis_info& role_statis_rsp::rsi(int index) const {
  return rsi_.Get(index);
}
inline ::client::role_statis_info* role_statis_rsp::mutable_rsi(int index) {
  return rsi_.Mutable(index);
}
inline ::client::role_statis_info* role_statis_rsp::add_rsi() {
  return rsi_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::role_statis_info >&
role_statis_rsp::rsi() const {
  return rsi_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::role_statis_info >*
role_statis_rsp::mutable_rsi() {
  return &rsi_;
}

// -------------------------------------------------------------------

// day_info

// required uint32 day = 1;
inline bool day_info::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void day_info::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void day_info::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void day_info::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 day_info::day() const {
  return day_;
}
inline void day_info::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// required uint32 month = 2;
inline bool day_info::has_month() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void day_info::set_has_month() {
  _has_bits_[0] |= 0x00000002u;
}
inline void day_info::clear_has_month() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void day_info::clear_month() {
  month_ = 0u;
  clear_has_month();
}
inline ::google::protobuf::uint32 day_info::month() const {
  return month_;
}
inline void day_info::set_month(::google::protobuf::uint32 value) {
  set_has_month();
  month_ = value;
}

// required uint32 year = 3;
inline bool day_info::has_year() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void day_info::set_has_year() {
  _has_bits_[0] |= 0x00000004u;
}
inline void day_info::clear_has_year() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void day_info::clear_year() {
  year_ = 0u;
  clear_has_year();
}
inline ::google::protobuf::uint32 day_info::year() const {
  return year_;
}
inline void day_info::set_year(::google::protobuf::uint32 value) {
  set_has_year();
  year_ = value;
}

// required uint32 week_day = 4;
inline bool day_info::has_week_day() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void day_info::set_has_week_day() {
  _has_bits_[0] |= 0x00000008u;
}
inline void day_info::clear_has_week_day() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void day_info::clear_week_day() {
  week_day_ = 0u;
  clear_has_week_day();
}
inline ::google::protobuf::uint32 day_info::week_day() const {
  return week_day_;
}
inline void day_info::set_week_day(::google::protobuf::uint32 value) {
  set_has_week_day();
  week_day_ = value;
}

// required uint32 max_day = 5;
inline bool day_info::has_max_day() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void day_info::set_has_max_day() {
  _has_bits_[0] |= 0x00000010u;
}
inline void day_info::clear_has_max_day() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void day_info::clear_max_day() {
  max_day_ = 0u;
  clear_has_max_day();
}
inline ::google::protobuf::uint32 day_info::max_day() const {
  return max_day_;
}
inline void day_info::set_max_day(::google::protobuf::uint32 value) {
  set_has_max_day();
  max_day_ = value;
}

// -------------------------------------------------------------------

// sign_list_req

// required uint32 list_tye = 1;
inline bool sign_list_req::has_list_tye() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sign_list_req::set_has_list_tye() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sign_list_req::clear_has_list_tye() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sign_list_req::clear_list_tye() {
  list_tye_ = 0u;
  clear_has_list_tye();
}
inline ::google::protobuf::uint32 sign_list_req::list_tye() const {
  return list_tye_;
}
inline void sign_list_req::set_list_tye(::google::protobuf::uint32 value) {
  set_has_list_tye();
  list_tye_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool sign_list_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sign_list_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sign_list_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sign_list_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& sign_list_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* sign_list_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* sign_list_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void sign_list_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// sign_list_rsp

// required uint32 sign_value = 1;
inline bool sign_list_rsp::has_sign_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sign_list_rsp::set_has_sign_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sign_list_rsp::clear_has_sign_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sign_list_rsp::clear_sign_value() {
  sign_value_ = 0u;
  clear_has_sign_value();
}
inline ::google::protobuf::uint32 sign_list_rsp::sign_value() const {
  return sign_value_;
}
inline void sign_list_rsp::set_sign_value(::google::protobuf::uint32 value) {
  set_has_sign_value();
  sign_value_ = value;
}

// repeated .client.day_info info = 2;
inline int sign_list_rsp::info_size() const {
  return info_.size();
}
inline void sign_list_rsp::clear_info() {
  info_.Clear();
}
inline const ::client::day_info& sign_list_rsp::info(int index) const {
  return info_.Get(index);
}
inline ::client::day_info* sign_list_rsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::client::day_info* sign_list_rsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::day_info >&
sign_list_rsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::day_info >*
sign_list_rsp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// sign_in_req

// required uint32 sign_date = 1;
inline bool sign_in_req::has_sign_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sign_in_req::set_has_sign_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sign_in_req::clear_has_sign_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sign_in_req::clear_sign_date() {
  sign_date_ = 0u;
  clear_has_sign_date();
}
inline ::google::protobuf::uint32 sign_in_req::sign_date() const {
  return sign_date_;
}
inline void sign_in_req::set_sign_date(::google::protobuf::uint32 value) {
  set_has_sign_date();
  sign_date_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool sign_in_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sign_in_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sign_in_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sign_in_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& sign_in_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* sign_in_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* sign_in_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void sign_in_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// sign_in_rsp

// required uint32 result_type = 1;
inline bool sign_in_rsp::has_result_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sign_in_rsp::set_has_result_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sign_in_rsp::clear_has_result_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sign_in_rsp::clear_result_type() {
  result_type_ = 0u;
  clear_has_result_type();
}
inline ::google::protobuf::uint32 sign_in_rsp::result_type() const {
  return result_type_;
}
inline void sign_in_rsp::set_result_type(::google::protobuf::uint32 value) {
  set_has_result_type();
  result_type_ = value;
}

// required uint32 sign_value = 2;
inline bool sign_in_rsp::has_sign_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sign_in_rsp::set_has_sign_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sign_in_rsp::clear_has_sign_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sign_in_rsp::clear_sign_value() {
  sign_value_ = 0u;
  clear_has_sign_value();
}
inline ::google::protobuf::uint32 sign_in_rsp::sign_value() const {
  return sign_value_;
}
inline void sign_in_rsp::set_sign_value(::google::protobuf::uint32 value) {
  set_has_sign_value();
  sign_value_ = value;
}

// -------------------------------------------------------------------

// land_reward_req

// required uint32 land_day = 1;
inline bool land_reward_req::has_land_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void land_reward_req::set_has_land_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void land_reward_req::clear_has_land_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void land_reward_req::clear_land_day() {
  land_day_ = 0u;
  clear_has_land_day();
}
inline ::google::protobuf::uint32 land_reward_req::land_day() const {
  return land_day_;
}
inline void land_reward_req::set_land_day(::google::protobuf::uint32 value) {
  set_has_land_day();
  land_day_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool land_reward_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void land_reward_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void land_reward_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void land_reward_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& land_reward_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* land_reward_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* land_reward_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void land_reward_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// land_reward_rsp

// required uint32 result_type = 1;
inline bool land_reward_rsp::has_result_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void land_reward_rsp::set_has_result_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void land_reward_rsp::clear_has_result_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void land_reward_rsp::clear_result_type() {
  result_type_ = 0u;
  clear_has_result_type();
}
inline ::google::protobuf::uint32 land_reward_rsp::result_type() const {
  return result_type_;
}
inline void land_reward_rsp::set_result_type(::google::protobuf::uint32 value) {
  set_has_result_type();
  result_type_ = value;
}

// optional uint32 reward_flag = 2;
inline bool land_reward_rsp::has_reward_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void land_reward_rsp::set_has_reward_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void land_reward_rsp::clear_has_reward_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void land_reward_rsp::clear_reward_flag() {
  reward_flag_ = 0u;
  clear_has_reward_flag();
}
inline ::google::protobuf::uint32 land_reward_rsp::reward_flag() const {
  return reward_flag_;
}
inline void land_reward_rsp::set_reward_flag(::google::protobuf::uint32 value) {
  set_has_reward_flag();
  reward_flag_ = value;
}

// -------------------------------------------------------------------

// land_reward_list_rsp

// required uint32 land_day = 1;
inline bool land_reward_list_rsp::has_land_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void land_reward_list_rsp::set_has_land_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void land_reward_list_rsp::clear_has_land_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void land_reward_list_rsp::clear_land_day() {
  land_day_ = 0u;
  clear_has_land_day();
}
inline ::google::protobuf::uint32 land_reward_list_rsp::land_day() const {
  return land_day_;
}
inline void land_reward_list_rsp::set_land_day(::google::protobuf::uint32 value) {
  set_has_land_day();
  land_day_ = value;
}

// required uint32 reward_flag = 2;
inline bool land_reward_list_rsp::has_reward_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void land_reward_list_rsp::set_has_reward_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void land_reward_list_rsp::clear_has_reward_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void land_reward_list_rsp::clear_reward_flag() {
  reward_flag_ = 0u;
  clear_has_reward_flag();
}
inline ::google::protobuf::uint32 land_reward_list_rsp::reward_flag() const {
  return reward_flag_;
}
inline void land_reward_list_rsp::set_reward_flag(::google::protobuf::uint32 value) {
  set_has_reward_flag();
  reward_flag_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::SIGN_IN_RESULT_E>() {
  return ::client::SIGN_IN_RESULT_E_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2erole_5fstatis_2eproto__INCLUDED
