import "client.comm.proto";
package client;

enum BATTLE_OPERATE_RET_E{
    BORE_SUCCESS        = 0;   // 战场操作成功
	BORE_TIME_LIMIT     = 1;   // 战场时间限制
	BORE_ROLE_NUM_LIMIT = 2;   // 人数上限
	BORE_BATTLE_LIMIT   = 3;   // 没有多余的战场

	BORE_SYS_ERR        = 999; // 服务器系统错误
}

// 请求获取战场信息
message battle_info_req {
	required uint32      time     = 1;    // 战场ID
	optional server_head svr_head = 1000; // 服务端填写项，客户端不需要关心也不必填写数据 
}

// 战场信息
message battle_info {
    required uint32 index         = 1; // 战场ID
    required uint32 close_seconds = 2; // 战场关闭剩余秒数
    required uint32 angel_num     = 3; // 天仙阵营人数
	required uint32 witch_num     = 4; // 巫神阵营人数
	required uint32 nether_num    = 5; // 幽冥中人数
}

// 战场信息返回
message battle_info_rsp {
    required uint32 open_seconds = 1; // 距离下次战场开启的剩余秒数，如果战场正在开启中，则为0
	optional battle_info bi = 2;      // 当前可进战场信息
}

// 个人战场排名信息
message battle_score {
    required uint32 role_id = 1; // 角色ID
	required uint32 score = 2;   // 积分
}

// 个人积分排行
message battle_score_list {
    repeated battle_score bs = 1; // 排行数据 
}

// 阵营积分信息
message battle_camp_score {
    required uint32 camp_id = 1; // 阵营ID
    required uint32 score   = 2; // 该阵营的总积分
}

// 阵营积分列表
message battle_camp_score_list {
    repeated battle_camp_score bcs = 1; // 阵营积分情况
}

// 请求加入战场
message battle_enter_req {
    required uint32 time = 1; // 当前客户端拿到服务器的unixtime
	required uint32 id = 2;   // 战场ID 
	
	optional server_head svr_head = 1000; // 服务端填写项，客户端不需要关心也不必填写数据 
}

// 请求加入战场结果
message battle_enter_rsp {
    required BATTLE_OPERATE_RET_E ret = 1; // 请求进入战场结果
}

// 请求离开战场
message battle_leave_req {
    required uint32 time = 1; // 请求离开战场

	optional server_head svr_head = 1000; // 服务端填写项，客户端不需要关心也不必填写数据
}

// 离开战场结果
message battle_leave_rsp {
    required BATTLE_OPERATE_RET_E ret = 1; // 离开战场结果
}

// 荣誉返还
message battle_honor_refund_req {
    required uint32      unixtime = 1;
    optional server_head svr_head = 1000;
}

message battle_honor_refund_rsp {
    required uint32 ret = 1; // 0 成功 1 失败
}

message battle_personal_record {
    required uint32 role_id   = 1 [default = 0];
    required uint32 honor     = 2 [default = 0];  // 荣誉
    required uint32 score     = 3 [default = 0];  // 积分
    required uint32 kill      = 4 [default = 0];  // 杀人数
    required uint32 dead      = 5 [default = 0];  // 死亡数
    required uint32 max_combo = 6 [default = 0];  // 最大连杀数
    required uint32 cur_combo = 7 [default = 0];  // 当前连杀数
    required uint32 rank      = 8 [default = 0];  // 没用
    required uint32 kill_time = 9 [default = 0];  // 上次杀人时间
    required uint32 last_kill = 10[default = 0];  // 上次杀的人
}

// 通知更新个人战绩
message notify_battle_personal_record {
    repeated battle_personal_record bpr = 1;
}

// 战场奖励信息 
message battle_slmt_reward{
    optional uint32 bind_tael = 1[default = 0]; // 获得的绑定铜钱
	optional uint32 honor     = 2[default = 0]; // 获取的荣誉值（三阵营）
	optional uint32 score     = 3[default = 0]; // 获取的积分（攻城战）
	optional uint32 family_fam= 4[default = 0]; // 获取的家族贡献（领土战）
	
	repeated uint32 goods_id = 5;  // 奖励的物品ID   
}

// 战场结算数据
message battle_slmt_msg{
    required uint32 battle_id  = 1;   // 结算战场ID
	optional uint32 rank_id    = 2;   // 当前战场的个人排名
	optional uint32 win_family = 3;   // 获胜的家族ID
	optional battle_slmt_reward bsr = 4; // 获取到的奖励
}

// 战场奖励发放
enum BATTLE_REWARD_VIA_TYPE {
    BRVT_BATTLE = 0;
    BRVT_DOMAIN = 1;
    BRVT_SIEGE  = 2;
    BRVT_GEM    = 3;
}

message battle_reward_info {
    required uint32 role_id   = 1;
    repeated uint32 reward_id = 2;
}

message battle_reward_via {
    required uint32             type = 1; // 0三阵营战场 1领土战 2攻城战
    repeated battle_reward_info bri  = 2;
}

// 获取战场开启信息
message battle_status_req {
    repeated uint32      battle_id = 1;
    optional server_head svr_head  = 1000;
}

message battle_status {
    required uint32 battle_id  = 1;
    optional uint32 cur_time   = 2;
    optional uint32 open_time  = 3;
    optional uint32 close_time = 4;
}

message battle_status_rsp {
    repeated battle_status bs = 1;
}