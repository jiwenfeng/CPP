// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.field_score.proto

#ifndef PROTOBUF_client_2efield_5fscore_2eproto__INCLUDED
#define PROTOBUF_client_2efield_5fscore_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2efield_5fscore_2eproto();
void protobuf_AssignDesc_client_2efield_5fscore_2eproto();
void protobuf_ShutdownFile_client_2efield_5fscore_2eproto();

class field_score_info;
class field_score_msg;
class filed_score_exchange_req;
class filed_score_exchange_rsp;
class filed_score_find_req;
class filed_score_role_pos;
class filed_score_find_rsp;

// ===================================================================

class field_score_info : public ::google::protobuf::Message {
 public:
  field_score_info();
  virtual ~field_score_info();

  field_score_info(const field_score_info& from);

  inline field_score_info& operator=(const field_score_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const field_score_info& default_instance();

  void Swap(field_score_info* other);

  // implements Message ----------------------------------------------

  field_score_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const field_score_info& from);
  void MergeFrom(const field_score_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.field_score_info)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_AssignDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_ShutdownFile_client_2efield_5fscore_2eproto();

  void InitAsDefaultInstance();
  static field_score_info* default_instance_;
};
// -------------------------------------------------------------------

class field_score_msg : public ::google::protobuf::Message {
 public:
  field_score_msg();
  virtual ~field_score_msg();

  field_score_msg(const field_score_msg& from);

  inline field_score_msg& operator=(const field_score_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const field_score_msg& default_instance();

  void Swap(field_score_msg* other);

  // implements Message ----------------------------------------------

  field_score_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const field_score_msg& from);
  void MergeFrom(const field_score_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.field_score_info fsi = 1;
  inline int fsi_size() const;
  inline void clear_fsi();
  static const int kFsiFieldNumber = 1;
  inline const ::client::field_score_info& fsi(int index) const;
  inline ::client::field_score_info* mutable_fsi(int index);
  inline ::client::field_score_info* add_fsi();
  inline const ::google::protobuf::RepeatedPtrField< ::client::field_score_info >&
      fsi() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::field_score_info >*
      mutable_fsi();

  // @@protoc_insertion_point(class_scope:client.field_score_msg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::field_score_info > fsi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_AssignDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_ShutdownFile_client_2efield_5fscore_2eproto();

  void InitAsDefaultInstance();
  static field_score_msg* default_instance_;
};
// -------------------------------------------------------------------

class filed_score_exchange_req : public ::google::protobuf::Message {
 public:
  filed_score_exchange_req();
  virtual ~filed_score_exchange_req();

  filed_score_exchange_req(const filed_score_exchange_req& from);

  inline filed_score_exchange_req& operator=(const filed_score_exchange_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const filed_score_exchange_req& default_instance();

  void Swap(filed_score_exchange_req* other);

  // implements Message ----------------------------------------------

  filed_score_exchange_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const filed_score_exchange_req& from);
  void MergeFrom(const filed_score_exchange_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 score = 1;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 1;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.filed_score_exchange_req)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_AssignDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_ShutdownFile_client_2efield_5fscore_2eproto();

  void InitAsDefaultInstance();
  static filed_score_exchange_req* default_instance_;
};
// -------------------------------------------------------------------

class filed_score_exchange_rsp : public ::google::protobuf::Message {
 public:
  filed_score_exchange_rsp();
  virtual ~filed_score_exchange_rsp();

  filed_score_exchange_rsp(const filed_score_exchange_rsp& from);

  inline filed_score_exchange_rsp& operator=(const filed_score_exchange_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const filed_score_exchange_rsp& default_instance();

  void Swap(filed_score_exchange_rsp* other);

  // implements Message ----------------------------------------------

  filed_score_exchange_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const filed_score_exchange_rsp& from);
  void MergeFrom(const filed_score_exchange_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.filed_score_exchange_rsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_AssignDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_ShutdownFile_client_2efield_5fscore_2eproto();

  void InitAsDefaultInstance();
  static filed_score_exchange_rsp* default_instance_;
};
// -------------------------------------------------------------------

class filed_score_find_req : public ::google::protobuf::Message {
 public:
  filed_score_find_req();
  virtual ~filed_score_find_req();

  filed_score_find_req(const filed_score_find_req& from);

  inline filed_score_find_req& operator=(const filed_score_find_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const filed_score_find_req& default_instance();

  void Swap(filed_score_find_req* other);

  // implements Message ----------------------------------------------

  filed_score_find_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const filed_score_find_req& from);
  void MergeFrom(const filed_score_find_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 role_id = 1;
  inline int role_id_size() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id(int index) const;
  inline void set_role_id(int index, ::google::protobuf::uint32 value);
  inline void add_role_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      role_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_role_id();

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.filed_score_find_req)
 private:
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > role_id_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_AssignDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_ShutdownFile_client_2efield_5fscore_2eproto();

  void InitAsDefaultInstance();
  static filed_score_find_req* default_instance_;
};
// -------------------------------------------------------------------

class filed_score_role_pos : public ::google::protobuf::Message {
 public:
  filed_score_role_pos();
  virtual ~filed_score_role_pos();

  filed_score_role_pos(const filed_score_role_pos& from);

  inline filed_score_role_pos& operator=(const filed_score_role_pos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const filed_score_role_pos& default_instance();

  void Swap(filed_score_role_pos* other);

  // implements Message ----------------------------------------------

  filed_score_role_pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const filed_score_role_pos& from);
  void MergeFrom(const filed_score_role_pos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // required uint32 y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.filed_score_role_pos)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_AssignDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_ShutdownFile_client_2efield_5fscore_2eproto();

  void InitAsDefaultInstance();
  static filed_score_role_pos* default_instance_;
};
// -------------------------------------------------------------------

class filed_score_find_rsp : public ::google::protobuf::Message {
 public:
  filed_score_find_rsp();
  virtual ~filed_score_find_rsp();

  filed_score_find_rsp(const filed_score_find_rsp& from);

  inline filed_score_find_rsp& operator=(const filed_score_find_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const filed_score_find_rsp& default_instance();

  void Swap(filed_score_find_rsp* other);

  // implements Message ----------------------------------------------

  filed_score_find_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const filed_score_find_rsp& from);
  void MergeFrom(const filed_score_find_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.filed_score_role_pos fsrp = 1;
  inline int fsrp_size() const;
  inline void clear_fsrp();
  static const int kFsrpFieldNumber = 1;
  inline const ::client::filed_score_role_pos& fsrp(int index) const;
  inline ::client::filed_score_role_pos* mutable_fsrp(int index);
  inline ::client::filed_score_role_pos* add_fsrp();
  inline const ::google::protobuf::RepeatedPtrField< ::client::filed_score_role_pos >&
      fsrp() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::filed_score_role_pos >*
      mutable_fsrp();

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.filed_score_find_rsp)
 private:
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::filed_score_role_pos > fsrp_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_AssignDesc_client_2efield_5fscore_2eproto();
  friend void protobuf_ShutdownFile_client_2efield_5fscore_2eproto();

  void InitAsDefaultInstance();
  static filed_score_find_rsp* default_instance_;
};
// ===================================================================


// ===================================================================

// field_score_info

// required uint32 role_id = 1;
inline bool field_score_info::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void field_score_info::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void field_score_info::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void field_score_info::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 field_score_info::role_id() const {
  return role_id_;
}
inline void field_score_info::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 score = 2;
inline bool field_score_info::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void field_score_info::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void field_score_info::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void field_score_info::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 field_score_info::score() const {
  return score_;
}
inline void field_score_info::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 type = 3;
inline bool field_score_info::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void field_score_info::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void field_score_info::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void field_score_info::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 field_score_info::type() const {
  return type_;
}
inline void field_score_info::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// field_score_msg

// repeated .client.field_score_info fsi = 1;
inline int field_score_msg::fsi_size() const {
  return fsi_.size();
}
inline void field_score_msg::clear_fsi() {
  fsi_.Clear();
}
inline const ::client::field_score_info& field_score_msg::fsi(int index) const {
  return fsi_.Get(index);
}
inline ::client::field_score_info* field_score_msg::mutable_fsi(int index) {
  return fsi_.Mutable(index);
}
inline ::client::field_score_info* field_score_msg::add_fsi() {
  return fsi_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::field_score_info >&
field_score_msg::fsi() const {
  return fsi_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::field_score_info >*
field_score_msg::mutable_fsi() {
  return &fsi_;
}

// -------------------------------------------------------------------

// filed_score_exchange_req

// required uint32 score = 1;
inline bool filed_score_exchange_req::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void filed_score_exchange_req::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void filed_score_exchange_req::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void filed_score_exchange_req::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 filed_score_exchange_req::score() const {
  return score_;
}
inline void filed_score_exchange_req::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool filed_score_exchange_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void filed_score_exchange_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void filed_score_exchange_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void filed_score_exchange_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& filed_score_exchange_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* filed_score_exchange_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* filed_score_exchange_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void filed_score_exchange_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// filed_score_exchange_rsp

// required uint32 ret = 1;
inline bool filed_score_exchange_rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void filed_score_exchange_rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void filed_score_exchange_rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void filed_score_exchange_rsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 filed_score_exchange_rsp::ret() const {
  return ret_;
}
inline void filed_score_exchange_rsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// filed_score_find_req

// repeated uint32 role_id = 1;
inline int filed_score_find_req::role_id_size() const {
  return role_id_.size();
}
inline void filed_score_find_req::clear_role_id() {
  role_id_.Clear();
}
inline ::google::protobuf::uint32 filed_score_find_req::role_id(int index) const {
  return role_id_.Get(index);
}
inline void filed_score_find_req::set_role_id(int index, ::google::protobuf::uint32 value) {
  role_id_.Set(index, value);
}
inline void filed_score_find_req::add_role_id(::google::protobuf::uint32 value) {
  role_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
filed_score_find_req::role_id() const {
  return role_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
filed_score_find_req::mutable_role_id() {
  return &role_id_;
}

// optional .client.server_head svr_head = 1000;
inline bool filed_score_find_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void filed_score_find_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void filed_score_find_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void filed_score_find_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& filed_score_find_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* filed_score_find_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* filed_score_find_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void filed_score_find_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// filed_score_role_pos

// required uint32 role_id = 1;
inline bool filed_score_role_pos::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void filed_score_role_pos::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void filed_score_role_pos::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void filed_score_role_pos::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 filed_score_role_pos::role_id() const {
  return role_id_;
}
inline void filed_score_role_pos::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 x = 2;
inline bool filed_score_role_pos::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void filed_score_role_pos::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void filed_score_role_pos::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void filed_score_role_pos::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 filed_score_role_pos::x() const {
  return x_;
}
inline void filed_score_role_pos::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
}

// required uint32 y = 3;
inline bool filed_score_role_pos::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void filed_score_role_pos::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void filed_score_role_pos::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void filed_score_role_pos::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 filed_score_role_pos::y() const {
  return y_;
}
inline void filed_score_role_pos::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// filed_score_find_rsp

// repeated .client.filed_score_role_pos fsrp = 1;
inline int filed_score_find_rsp::fsrp_size() const {
  return fsrp_.size();
}
inline void filed_score_find_rsp::clear_fsrp() {
  fsrp_.Clear();
}
inline const ::client::filed_score_role_pos& filed_score_find_rsp::fsrp(int index) const {
  return fsrp_.Get(index);
}
inline ::client::filed_score_role_pos* filed_score_find_rsp::mutable_fsrp(int index) {
  return fsrp_.Mutable(index);
}
inline ::client::filed_score_role_pos* filed_score_find_rsp::add_fsrp() {
  return fsrp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::filed_score_role_pos >&
filed_score_find_rsp::fsrp() const {
  return fsrp_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::filed_score_role_pos >*
filed_score_find_rsp::mutable_fsrp() {
  return &fsrp_;
}

// optional .client.server_head svr_head = 1000;
inline bool filed_score_find_rsp::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void filed_score_find_rsp::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void filed_score_find_rsp::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void filed_score_find_rsp::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& filed_score_find_rsp::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* filed_score_find_rsp::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* filed_score_find_rsp::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void filed_score_find_rsp::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2efield_5fscore_2eproto__INCLUDED
