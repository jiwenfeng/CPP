// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.region.proto

#ifndef PROTOBUF_client_2eregion_2eproto__INCLUDED
#define PROTOBUF_client_2eregion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
#include "client.raid_operate.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2eregion_2eproto();
void protobuf_AssignDesc_client_2eregion_2eproto();
void protobuf_ShutdownFile_client_2eregion_2eproto();

class region_feature;
class region_info;
class region_info_msg;
class region_complete_msg;

// ===================================================================

class region_feature : public ::google::protobuf::Message {
 public:
  region_feature();
  virtual ~region_feature();

  region_feature(const region_feature& from);

  inline region_feature& operator=(const region_feature& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const region_feature& default_instance();

  void Swap(region_feature* other);

  // implements Message ----------------------------------------------

  region_feature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const region_feature& from);
  void MergeFrom(const region_feature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float exp_magnification = 1;
  inline bool has_exp_magnification() const;
  inline void clear_exp_magnification();
  static const int kExpMagnificationFieldNumber = 1;
  inline float exp_magnification() const;
  inline void set_exp_magnification(float value);

  // optional float atk_magnification = 2;
  inline bool has_atk_magnification() const;
  inline void clear_atk_magnification();
  static const int kAtkMagnificationFieldNumber = 2;
  inline float atk_magnification() const;
  inline void set_atk_magnification(float value);

  // optional float def_magnification = 3;
  inline bool has_def_magnification() const;
  inline void clear_def_magnification();
  static const int kDefMagnificationFieldNumber = 3;
  inline float def_magnification() const;
  inline void set_def_magnification(float value);

  // @@protoc_insertion_point(class_scope:client.region_feature)
 private:
  inline void set_has_exp_magnification();
  inline void clear_has_exp_magnification();
  inline void set_has_atk_magnification();
  inline void clear_has_atk_magnification();
  inline void set_has_def_magnification();
  inline void clear_has_def_magnification();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float exp_magnification_;
  float atk_magnification_;
  float def_magnification_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eregion_2eproto();
  friend void protobuf_AssignDesc_client_2eregion_2eproto();
  friend void protobuf_ShutdownFile_client_2eregion_2eproto();

  void InitAsDefaultInstance();
  static region_feature* default_instance_;
};
// -------------------------------------------------------------------

class region_info : public ::google::protobuf::Message {
 public:
  region_info();
  virtual ~region_info();

  region_info(const region_info& from);

  inline region_info& operator=(const region_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const region_info& default_instance();

  void Swap(region_info* other);

  // implements Message ----------------------------------------------

  region_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const region_info& from);
  void MergeFrom(const region_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .client.raid_success_info feature = 2;
  inline bool has_feature() const;
  inline void clear_feature();
  static const int kFeatureFieldNumber = 2;
  inline const ::client::raid_success_info& feature() const;
  inline ::client::raid_success_info* mutable_feature();
  inline ::client::raid_success_info* release_feature();
  inline void set_allocated_feature(::client::raid_success_info* feature);

  // @@protoc_insertion_point(class_scope:client.region_info)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_feature();
  inline void clear_has_feature();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::raid_success_info* feature_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eregion_2eproto();
  friend void protobuf_AssignDesc_client_2eregion_2eproto();
  friend void protobuf_ShutdownFile_client_2eregion_2eproto();

  void InitAsDefaultInstance();
  static region_info* default_instance_;
};
// -------------------------------------------------------------------

class region_info_msg : public ::google::protobuf::Message {
 public:
  region_info_msg();
  virtual ~region_info_msg();

  region_info_msg(const region_info_msg& from);

  inline region_info_msg& operator=(const region_info_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const region_info_msg& default_instance();

  void Swap(region_info_msg* other);

  // implements Message ----------------------------------------------

  region_info_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const region_info_msg& from);
  void MergeFrom(const region_info_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.region_info infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::client::region_info& infos(int index) const;
  inline ::client::region_info* mutable_infos(int index);
  inline ::client::region_info* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::client::region_info >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::region_info >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:client.region_info_msg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::region_info > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eregion_2eproto();
  friend void protobuf_AssignDesc_client_2eregion_2eproto();
  friend void protobuf_ShutdownFile_client_2eregion_2eproto();

  void InitAsDefaultInstance();
  static region_info_msg* default_instance_;
};
// -------------------------------------------------------------------

class region_complete_msg : public ::google::protobuf::Message {
 public:
  region_complete_msg();
  virtual ~region_complete_msg();

  region_complete_msg(const region_complete_msg& from);

  inline region_complete_msg& operator=(const region_complete_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const region_complete_msg& default_instance();

  void Swap(region_complete_msg* other);

  // implements Message ----------------------------------------------

  region_complete_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const region_complete_msg& from);
  void MergeFrom(const region_complete_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.region_info infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::client::region_info& infos(int index) const;
  inline ::client::region_info* mutable_infos(int index);
  inline ::client::region_info* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::client::region_info >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::region_info >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:client.region_complete_msg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::region_info > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eregion_2eproto();
  friend void protobuf_AssignDesc_client_2eregion_2eproto();
  friend void protobuf_ShutdownFile_client_2eregion_2eproto();

  void InitAsDefaultInstance();
  static region_complete_msg* default_instance_;
};
// ===================================================================


// ===================================================================

// region_feature

// optional float exp_magnification = 1;
inline bool region_feature::has_exp_magnification() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void region_feature::set_has_exp_magnification() {
  _has_bits_[0] |= 0x00000001u;
}
inline void region_feature::clear_has_exp_magnification() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void region_feature::clear_exp_magnification() {
  exp_magnification_ = 0;
  clear_has_exp_magnification();
}
inline float region_feature::exp_magnification() const {
  return exp_magnification_;
}
inline void region_feature::set_exp_magnification(float value) {
  set_has_exp_magnification();
  exp_magnification_ = value;
}

// optional float atk_magnification = 2;
inline bool region_feature::has_atk_magnification() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void region_feature::set_has_atk_magnification() {
  _has_bits_[0] |= 0x00000002u;
}
inline void region_feature::clear_has_atk_magnification() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void region_feature::clear_atk_magnification() {
  atk_magnification_ = 0;
  clear_has_atk_magnification();
}
inline float region_feature::atk_magnification() const {
  return atk_magnification_;
}
inline void region_feature::set_atk_magnification(float value) {
  set_has_atk_magnification();
  atk_magnification_ = value;
}

// optional float def_magnification = 3;
inline bool region_feature::has_def_magnification() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void region_feature::set_has_def_magnification() {
  _has_bits_[0] |= 0x00000004u;
}
inline void region_feature::clear_has_def_magnification() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void region_feature::clear_def_magnification() {
  def_magnification_ = 0;
  clear_has_def_magnification();
}
inline float region_feature::def_magnification() const {
  return def_magnification_;
}
inline void region_feature::set_def_magnification(float value) {
  set_has_def_magnification();
  def_magnification_ = value;
}

// -------------------------------------------------------------------

// region_info

// required uint32 id = 1;
inline bool region_info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void region_info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void region_info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void region_info::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 region_info::id() const {
  return id_;
}
inline void region_info::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .client.raid_success_info feature = 2;
inline bool region_info::has_feature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void region_info::set_has_feature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void region_info::clear_has_feature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void region_info::clear_feature() {
  if (feature_ != NULL) feature_->::client::raid_success_info::Clear();
  clear_has_feature();
}
inline const ::client::raid_success_info& region_info::feature() const {
  return feature_ != NULL ? *feature_ : *default_instance_->feature_;
}
inline ::client::raid_success_info* region_info::mutable_feature() {
  set_has_feature();
  if (feature_ == NULL) feature_ = new ::client::raid_success_info;
  return feature_;
}
inline ::client::raid_success_info* region_info::release_feature() {
  clear_has_feature();
  ::client::raid_success_info* temp = feature_;
  feature_ = NULL;
  return temp;
}
inline void region_info::set_allocated_feature(::client::raid_success_info* feature) {
  delete feature_;
  feature_ = feature;
  if (feature) {
    set_has_feature();
  } else {
    clear_has_feature();
  }
}

// -------------------------------------------------------------------

// region_info_msg

// repeated .client.region_info infos = 1;
inline int region_info_msg::infos_size() const {
  return infos_.size();
}
inline void region_info_msg::clear_infos() {
  infos_.Clear();
}
inline const ::client::region_info& region_info_msg::infos(int index) const {
  return infos_.Get(index);
}
inline ::client::region_info* region_info_msg::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::client::region_info* region_info_msg::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::region_info >&
region_info_msg::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::region_info >*
region_info_msg::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// region_complete_msg

// repeated .client.region_info infos = 1;
inline int region_complete_msg::infos_size() const {
  return infos_.size();
}
inline void region_complete_msg::clear_infos() {
  infos_.Clear();
}
inline const ::client::region_info& region_complete_msg::infos(int index) const {
  return infos_.Get(index);
}
inline ::client::region_info* region_complete_msg::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::client::region_info* region_complete_msg::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::region_info >&
region_complete_msg::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::region_info >*
region_complete_msg::mutable_infos() {
  return &infos_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2eregion_2eproto__INCLUDED
