import "client.comm.proto";

package client;

message skill_data {
    required uint32 id            = 1; // 技能ID
    required uint32 cd            = 2; // 剩余CD时间，单位ms
    required uint32 mas           = 3; // 熟练度
    required uint32 serial        = 4; // 序列索引号
    required uint32 level         = 5; // 效果等级（升效果）
    required uint32 effect_id	  = 6; // 效果id
    //optional uint32 default_skill = 6; // 是否默认技能 没有或0不是 1是
}

message role_skill_effect_upgrade_req {
    required uint32      skill_id = 1;
    optional uint32		 pet_id	  = 2;
    optional server_head svr_head = 1000;
}

message role_skill_effect_upgrade_rsp {
    required uint32      result_type = 1;  // 0 成功 1失败 2 技能不存在或者未学习 3 找不到技能 4 配置表找不到改技能 5 技能点不足 6 找不到宠物 7 宠物等级限制 8 人物等级不够 9 钱不够
    optional skill_data	 old_skill   = 2;
    optional skill_data  new_skill   = 3;
}

message role_skill_msg {
    required role_data  rd = 1; // 角色基础数据
    repeated skill_data sk = 2; // 角色技能数据
}

message skills {
    repeated skill_data sk = 1;
}

// 升级技能请求（升星）
message role_skill_upgrade_req {
    required uint32      skill_id	= 1;
	optional uint32		 ser_index  = 2;
    optional server_head svr_head = 1000;
}

// 升级技能回复
message role_skill_upgrade_rsp {
    enum RET {
        SUCCESS      = 0; // 成功
        LIMIT_MONEY  = 1; // 金币不足 
        LIMIT_SKILL  = 2; // 技能错误
        LIMIT_MAX    = 3; // 已达最高级
        LIMIT_LVL    = 4; // 等级不足
        LIMIT_BOOK   = 5; // 没有技能书
        LIMIT_YUNLI  = 6; // 元力不足
        LIMIT_ITEM   = 7; // 材料不足
		LIMIT_CONF	 = 8; // 配置表错误
    }
    required RET        ret       = 1; 
    optional skill_data old_skill = 2;
    optional skill_data new_skill = 3;
}

// 设置默认技能
message set_default_skill_req {
    required uint32      skill_id = 1;
    optional server_head svr_head = 1000;
}

message set_default_skill_rsp {
    enum RET {
        SUCCESS      = 0; // 成功
        ERROR_SKILL  = 1; // 技能错误
        ERROR_RESET  = 2; // 重复设置
        ERROR_LIMIT  = 3; // 无法设置
    }
    
    required RET    ret      = 1;
    optional uint32 skill_id = 2;
}

message skill_point_time_req {
    required uint32       unixtime		= 1		;
    optional server_head  svr_head      = 1000  ;
}

message skill_point_time_rsp {
    required uint32 remain_time  = 1;
}

// 宝石技能学习
message gem_skill_study_req {
    required uint32      item_id	= 1;
	required uint32		 ser_index  = 2;
    optional server_head svr_head = 1000;
}

message gem_skill_study_rsp {
	required uint32 result_type		= 1;// 0 成功 1 失败 2 配置表错误 3 未开放当前技能框 4 技能框已满，不能再学 5 物品不够
	optional uint32 ser_index		= 2; // 格子序号
}

// 宝石技能替换
message gem_skill_replace_req {
	required uint32		 skill_id	= 1; // 所要替换的技能ID
	required uint32		 ser_index  = 2; // 编号
	required uint32		 item_id    = 3; // 替换用的技能书ID
	optional server_head svr_head   = 1000;
}
// 宝石技能替换返回
message gem_skill_replace_rsp{
	required uint32 result_type		= 1; // 0 成功 1失败 2 配置表错误 3 消耗不足
	optional skill_data old_skill	= 2;
	optional skill_data new_skill	= 3;
}

message bows_skill_studt_rsp{
	required uint32 result_type		= 1; // 0 成功 1失败 2 配置表错误 3 弓箭ID错误 4 没有开启技能格子
	optional skill_data old_skill	= 2;
	optional skill_data new_skill	= 3;
}