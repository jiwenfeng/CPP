// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.battle.proto

#ifndef PROTOBUF_client_2ebattle_2eproto__INCLUDED
#define PROTOBUF_client_2ebattle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2ebattle_2eproto();
void protobuf_AssignDesc_client_2ebattle_2eproto();
void protobuf_ShutdownFile_client_2ebattle_2eproto();

class battle_info_req;
class battle_info;
class battle_info_rsp;
class battle_score;
class battle_score_list;
class battle_camp_score;
class battle_camp_score_list;
class battle_enter_req;
class battle_enter_rsp;
class battle_leave_req;
class battle_leave_rsp;
class battle_honor_refund_req;
class battle_honor_refund_rsp;
class battle_personal_record;
class notify_battle_personal_record;
class battle_slmt_reward;
class battle_slmt_msg;
class battle_reward_info;
class battle_reward_via;
class battle_status_req;
class battle_status;
class battle_status_rsp;

enum BATTLE_OPERATE_RET_E {
  BORE_SUCCESS = 0,
  BORE_TIME_LIMIT = 1,
  BORE_ROLE_NUM_LIMIT = 2,
  BORE_BATTLE_LIMIT = 3,
  BORE_SYS_ERR = 999
};
bool BATTLE_OPERATE_RET_E_IsValid(int value);
const BATTLE_OPERATE_RET_E BATTLE_OPERATE_RET_E_MIN = BORE_SUCCESS;
const BATTLE_OPERATE_RET_E BATTLE_OPERATE_RET_E_MAX = BORE_SYS_ERR;
const int BATTLE_OPERATE_RET_E_ARRAYSIZE = BATTLE_OPERATE_RET_E_MAX + 1;

const ::google::protobuf::EnumDescriptor* BATTLE_OPERATE_RET_E_descriptor();
inline const ::std::string& BATTLE_OPERATE_RET_E_Name(BATTLE_OPERATE_RET_E value) {
  return ::google::protobuf::internal::NameOfEnum(
    BATTLE_OPERATE_RET_E_descriptor(), value);
}
inline bool BATTLE_OPERATE_RET_E_Parse(
    const ::std::string& name, BATTLE_OPERATE_RET_E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BATTLE_OPERATE_RET_E>(
    BATTLE_OPERATE_RET_E_descriptor(), name, value);
}
enum BATTLE_REWARD_VIA_TYPE {
  BRVT_BATTLE = 0,
  BRVT_DOMAIN = 1,
  BRVT_SIEGE = 2,
  BRVT_GEM = 3
};
bool BATTLE_REWARD_VIA_TYPE_IsValid(int value);
const BATTLE_REWARD_VIA_TYPE BATTLE_REWARD_VIA_TYPE_MIN = BRVT_BATTLE;
const BATTLE_REWARD_VIA_TYPE BATTLE_REWARD_VIA_TYPE_MAX = BRVT_GEM;
const int BATTLE_REWARD_VIA_TYPE_ARRAYSIZE = BATTLE_REWARD_VIA_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* BATTLE_REWARD_VIA_TYPE_descriptor();
inline const ::std::string& BATTLE_REWARD_VIA_TYPE_Name(BATTLE_REWARD_VIA_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    BATTLE_REWARD_VIA_TYPE_descriptor(), value);
}
inline bool BATTLE_REWARD_VIA_TYPE_Parse(
    const ::std::string& name, BATTLE_REWARD_VIA_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BATTLE_REWARD_VIA_TYPE>(
    BATTLE_REWARD_VIA_TYPE_descriptor(), name, value);
}
// ===================================================================

class battle_info_req : public ::google::protobuf::Message {
 public:
  battle_info_req();
  virtual ~battle_info_req();

  battle_info_req(const battle_info_req& from);

  inline battle_info_req& operator=(const battle_info_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_info_req& default_instance();

  void Swap(battle_info_req* other);

  // implements Message ----------------------------------------------

  battle_info_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_info_req& from);
  void MergeFrom(const battle_info_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.battle_info_req)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_info_req* default_instance_;
};
// -------------------------------------------------------------------

class battle_info : public ::google::protobuf::Message {
 public:
  battle_info();
  virtual ~battle_info();

  battle_info(const battle_info& from);

  inline battle_info& operator=(const battle_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_info& default_instance();

  void Swap(battle_info* other);

  // implements Message ----------------------------------------------

  battle_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_info& from);
  void MergeFrom(const battle_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required uint32 close_seconds = 2;
  inline bool has_close_seconds() const;
  inline void clear_close_seconds();
  static const int kCloseSecondsFieldNumber = 2;
  inline ::google::protobuf::uint32 close_seconds() const;
  inline void set_close_seconds(::google::protobuf::uint32 value);

  // required uint32 angel_num = 3;
  inline bool has_angel_num() const;
  inline void clear_angel_num();
  static const int kAngelNumFieldNumber = 3;
  inline ::google::protobuf::uint32 angel_num() const;
  inline void set_angel_num(::google::protobuf::uint32 value);

  // required uint32 witch_num = 4;
  inline bool has_witch_num() const;
  inline void clear_witch_num();
  static const int kWitchNumFieldNumber = 4;
  inline ::google::protobuf::uint32 witch_num() const;
  inline void set_witch_num(::google::protobuf::uint32 value);

  // required uint32 nether_num = 5;
  inline bool has_nether_num() const;
  inline void clear_nether_num();
  static const int kNetherNumFieldNumber = 5;
  inline ::google::protobuf::uint32 nether_num() const;
  inline void set_nether_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.battle_info)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_close_seconds();
  inline void clear_has_close_seconds();
  inline void set_has_angel_num();
  inline void clear_has_angel_num();
  inline void set_has_witch_num();
  inline void clear_has_witch_num();
  inline void set_has_nether_num();
  inline void clear_has_nether_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 close_seconds_;
  ::google::protobuf::uint32 angel_num_;
  ::google::protobuf::uint32 witch_num_;
  ::google::protobuf::uint32 nether_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_info* default_instance_;
};
// -------------------------------------------------------------------

class battle_info_rsp : public ::google::protobuf::Message {
 public:
  battle_info_rsp();
  virtual ~battle_info_rsp();

  battle_info_rsp(const battle_info_rsp& from);

  inline battle_info_rsp& operator=(const battle_info_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_info_rsp& default_instance();

  void Swap(battle_info_rsp* other);

  // implements Message ----------------------------------------------

  battle_info_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_info_rsp& from);
  void MergeFrom(const battle_info_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 open_seconds = 1;
  inline bool has_open_seconds() const;
  inline void clear_open_seconds();
  static const int kOpenSecondsFieldNumber = 1;
  inline ::google::protobuf::uint32 open_seconds() const;
  inline void set_open_seconds(::google::protobuf::uint32 value);

  // optional .client.battle_info bi = 2;
  inline bool has_bi() const;
  inline void clear_bi();
  static const int kBiFieldNumber = 2;
  inline const ::client::battle_info& bi() const;
  inline ::client::battle_info* mutable_bi();
  inline ::client::battle_info* release_bi();
  inline void set_allocated_bi(::client::battle_info* bi);

  // @@protoc_insertion_point(class_scope:client.battle_info_rsp)
 private:
  inline void set_has_open_seconds();
  inline void clear_has_open_seconds();
  inline void set_has_bi();
  inline void clear_has_bi();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::battle_info* bi_;
  ::google::protobuf::uint32 open_seconds_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_info_rsp* default_instance_;
};
// -------------------------------------------------------------------

class battle_score : public ::google::protobuf::Message {
 public:
  battle_score();
  virtual ~battle_score();

  battle_score(const battle_score& from);

  inline battle_score& operator=(const battle_score& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_score& default_instance();

  void Swap(battle_score* other);

  // implements Message ----------------------------------------------

  battle_score* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_score& from);
  void MergeFrom(const battle_score& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.battle_score)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_score* default_instance_;
};
// -------------------------------------------------------------------

class battle_score_list : public ::google::protobuf::Message {
 public:
  battle_score_list();
  virtual ~battle_score_list();

  battle_score_list(const battle_score_list& from);

  inline battle_score_list& operator=(const battle_score_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_score_list& default_instance();

  void Swap(battle_score_list* other);

  // implements Message ----------------------------------------------

  battle_score_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_score_list& from);
  void MergeFrom(const battle_score_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.battle_score bs = 1;
  inline int bs_size() const;
  inline void clear_bs();
  static const int kBsFieldNumber = 1;
  inline const ::client::battle_score& bs(int index) const;
  inline ::client::battle_score* mutable_bs(int index);
  inline ::client::battle_score* add_bs();
  inline const ::google::protobuf::RepeatedPtrField< ::client::battle_score >&
      bs() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::battle_score >*
      mutable_bs();

  // @@protoc_insertion_point(class_scope:client.battle_score_list)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::battle_score > bs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_score_list* default_instance_;
};
// -------------------------------------------------------------------

class battle_camp_score : public ::google::protobuf::Message {
 public:
  battle_camp_score();
  virtual ~battle_camp_score();

  battle_camp_score(const battle_camp_score& from);

  inline battle_camp_score& operator=(const battle_camp_score& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_camp_score& default_instance();

  void Swap(battle_camp_score* other);

  // implements Message ----------------------------------------------

  battle_camp_score* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_camp_score& from);
  void MergeFrom(const battle_camp_score& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 camp_id = 1;
  inline bool has_camp_id() const;
  inline void clear_camp_id();
  static const int kCampIdFieldNumber = 1;
  inline ::google::protobuf::uint32 camp_id() const;
  inline void set_camp_id(::google::protobuf::uint32 value);

  // required uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.battle_camp_score)
 private:
  inline void set_has_camp_id();
  inline void clear_has_camp_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 camp_id_;
  ::google::protobuf::uint32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_camp_score* default_instance_;
};
// -------------------------------------------------------------------

class battle_camp_score_list : public ::google::protobuf::Message {
 public:
  battle_camp_score_list();
  virtual ~battle_camp_score_list();

  battle_camp_score_list(const battle_camp_score_list& from);

  inline battle_camp_score_list& operator=(const battle_camp_score_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_camp_score_list& default_instance();

  void Swap(battle_camp_score_list* other);

  // implements Message ----------------------------------------------

  battle_camp_score_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_camp_score_list& from);
  void MergeFrom(const battle_camp_score_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.battle_camp_score bcs = 1;
  inline int bcs_size() const;
  inline void clear_bcs();
  static const int kBcsFieldNumber = 1;
  inline const ::client::battle_camp_score& bcs(int index) const;
  inline ::client::battle_camp_score* mutable_bcs(int index);
  inline ::client::battle_camp_score* add_bcs();
  inline const ::google::protobuf::RepeatedPtrField< ::client::battle_camp_score >&
      bcs() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::battle_camp_score >*
      mutable_bcs();

  // @@protoc_insertion_point(class_scope:client.battle_camp_score_list)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::battle_camp_score > bcs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_camp_score_list* default_instance_;
};
// -------------------------------------------------------------------

class battle_enter_req : public ::google::protobuf::Message {
 public:
  battle_enter_req();
  virtual ~battle_enter_req();

  battle_enter_req(const battle_enter_req& from);

  inline battle_enter_req& operator=(const battle_enter_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_enter_req& default_instance();

  void Swap(battle_enter_req* other);

  // implements Message ----------------------------------------------

  battle_enter_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_enter_req& from);
  void MergeFrom(const battle_enter_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.battle_enter_req)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 id_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_enter_req* default_instance_;
};
// -------------------------------------------------------------------

class battle_enter_rsp : public ::google::protobuf::Message {
 public:
  battle_enter_rsp();
  virtual ~battle_enter_rsp();

  battle_enter_rsp(const battle_enter_rsp& from);

  inline battle_enter_rsp& operator=(const battle_enter_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_enter_rsp& default_instance();

  void Swap(battle_enter_rsp* other);

  // implements Message ----------------------------------------------

  battle_enter_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_enter_rsp& from);
  void MergeFrom(const battle_enter_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client.BATTLE_OPERATE_RET_E ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::client::BATTLE_OPERATE_RET_E ret() const;
  inline void set_ret(::client::BATTLE_OPERATE_RET_E value);

  // @@protoc_insertion_point(class_scope:client.battle_enter_rsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_enter_rsp* default_instance_;
};
// -------------------------------------------------------------------

class battle_leave_req : public ::google::protobuf::Message {
 public:
  battle_leave_req();
  virtual ~battle_leave_req();

  battle_leave_req(const battle_leave_req& from);

  inline battle_leave_req& operator=(const battle_leave_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_leave_req& default_instance();

  void Swap(battle_leave_req* other);

  // implements Message ----------------------------------------------

  battle_leave_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_leave_req& from);
  void MergeFrom(const battle_leave_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.battle_leave_req)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_leave_req* default_instance_;
};
// -------------------------------------------------------------------

class battle_leave_rsp : public ::google::protobuf::Message {
 public:
  battle_leave_rsp();
  virtual ~battle_leave_rsp();

  battle_leave_rsp(const battle_leave_rsp& from);

  inline battle_leave_rsp& operator=(const battle_leave_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_leave_rsp& default_instance();

  void Swap(battle_leave_rsp* other);

  // implements Message ----------------------------------------------

  battle_leave_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_leave_rsp& from);
  void MergeFrom(const battle_leave_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client.BATTLE_OPERATE_RET_E ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::client::BATTLE_OPERATE_RET_E ret() const;
  inline void set_ret(::client::BATTLE_OPERATE_RET_E value);

  // @@protoc_insertion_point(class_scope:client.battle_leave_rsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_leave_rsp* default_instance_;
};
// -------------------------------------------------------------------

class battle_honor_refund_req : public ::google::protobuf::Message {
 public:
  battle_honor_refund_req();
  virtual ~battle_honor_refund_req();

  battle_honor_refund_req(const battle_honor_refund_req& from);

  inline battle_honor_refund_req& operator=(const battle_honor_refund_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_honor_refund_req& default_instance();

  void Swap(battle_honor_refund_req* other);

  // implements Message ----------------------------------------------

  battle_honor_refund_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_honor_refund_req& from);
  void MergeFrom(const battle_honor_refund_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unixtime = 1;
  inline bool has_unixtime() const;
  inline void clear_unixtime();
  static const int kUnixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 unixtime() const;
  inline void set_unixtime(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.battle_honor_refund_req)
 private:
  inline void set_has_unixtime();
  inline void clear_has_unixtime();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 unixtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_honor_refund_req* default_instance_;
};
// -------------------------------------------------------------------

class battle_honor_refund_rsp : public ::google::protobuf::Message {
 public:
  battle_honor_refund_rsp();
  virtual ~battle_honor_refund_rsp();

  battle_honor_refund_rsp(const battle_honor_refund_rsp& from);

  inline battle_honor_refund_rsp& operator=(const battle_honor_refund_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_honor_refund_rsp& default_instance();

  void Swap(battle_honor_refund_rsp* other);

  // implements Message ----------------------------------------------

  battle_honor_refund_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_honor_refund_rsp& from);
  void MergeFrom(const battle_honor_refund_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.battle_honor_refund_rsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_honor_refund_rsp* default_instance_;
};
// -------------------------------------------------------------------

class battle_personal_record : public ::google::protobuf::Message {
 public:
  battle_personal_record();
  virtual ~battle_personal_record();

  battle_personal_record(const battle_personal_record& from);

  inline battle_personal_record& operator=(const battle_personal_record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_personal_record& default_instance();

  void Swap(battle_personal_record* other);

  // implements Message ----------------------------------------------

  battle_personal_record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_personal_record& from);
  void MergeFrom(const battle_personal_record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1 [default = 0];
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 honor = 2 [default = 0];
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 2;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // required uint32 score = 3 [default = 0];
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // required uint32 kill = 4 [default = 0];
  inline bool has_kill() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 4;
  inline ::google::protobuf::uint32 kill() const;
  inline void set_kill(::google::protobuf::uint32 value);

  // required uint32 dead = 5 [default = 0];
  inline bool has_dead() const;
  inline void clear_dead();
  static const int kDeadFieldNumber = 5;
  inline ::google::protobuf::uint32 dead() const;
  inline void set_dead(::google::protobuf::uint32 value);

  // required uint32 max_combo = 6 [default = 0];
  inline bool has_max_combo() const;
  inline void clear_max_combo();
  static const int kMaxComboFieldNumber = 6;
  inline ::google::protobuf::uint32 max_combo() const;
  inline void set_max_combo(::google::protobuf::uint32 value);

  // required uint32 cur_combo = 7 [default = 0];
  inline bool has_cur_combo() const;
  inline void clear_cur_combo();
  static const int kCurComboFieldNumber = 7;
  inline ::google::protobuf::uint32 cur_combo() const;
  inline void set_cur_combo(::google::protobuf::uint32 value);

  // required uint32 rank = 8 [default = 0];
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 8;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 kill_time = 9 [default = 0];
  inline bool has_kill_time() const;
  inline void clear_kill_time();
  static const int kKillTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 kill_time() const;
  inline void set_kill_time(::google::protobuf::uint32 value);

  // required uint32 last_kill = 10 [default = 0];
  inline bool has_last_kill() const;
  inline void clear_last_kill();
  static const int kLastKillFieldNumber = 10;
  inline ::google::protobuf::uint32 last_kill() const;
  inline void set_last_kill(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.battle_personal_record)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_kill();
  inline void clear_has_kill();
  inline void set_has_dead();
  inline void clear_has_dead();
  inline void set_has_max_combo();
  inline void clear_has_max_combo();
  inline void set_has_cur_combo();
  inline void clear_has_cur_combo();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_kill_time();
  inline void clear_has_kill_time();
  inline void set_has_last_kill();
  inline void clear_has_last_kill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 kill_;
  ::google::protobuf::uint32 dead_;
  ::google::protobuf::uint32 max_combo_;
  ::google::protobuf::uint32 cur_combo_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 kill_time_;
  ::google::protobuf::uint32 last_kill_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_personal_record* default_instance_;
};
// -------------------------------------------------------------------

class notify_battle_personal_record : public ::google::protobuf::Message {
 public:
  notify_battle_personal_record();
  virtual ~notify_battle_personal_record();

  notify_battle_personal_record(const notify_battle_personal_record& from);

  inline notify_battle_personal_record& operator=(const notify_battle_personal_record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const notify_battle_personal_record& default_instance();

  void Swap(notify_battle_personal_record* other);

  // implements Message ----------------------------------------------

  notify_battle_personal_record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const notify_battle_personal_record& from);
  void MergeFrom(const notify_battle_personal_record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.battle_personal_record bpr = 1;
  inline int bpr_size() const;
  inline void clear_bpr();
  static const int kBprFieldNumber = 1;
  inline const ::client::battle_personal_record& bpr(int index) const;
  inline ::client::battle_personal_record* mutable_bpr(int index);
  inline ::client::battle_personal_record* add_bpr();
  inline const ::google::protobuf::RepeatedPtrField< ::client::battle_personal_record >&
      bpr() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::battle_personal_record >*
      mutable_bpr();

  // @@protoc_insertion_point(class_scope:client.notify_battle_personal_record)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::battle_personal_record > bpr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static notify_battle_personal_record* default_instance_;
};
// -------------------------------------------------------------------

class battle_slmt_reward : public ::google::protobuf::Message {
 public:
  battle_slmt_reward();
  virtual ~battle_slmt_reward();

  battle_slmt_reward(const battle_slmt_reward& from);

  inline battle_slmt_reward& operator=(const battle_slmt_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_slmt_reward& default_instance();

  void Swap(battle_slmt_reward* other);

  // implements Message ----------------------------------------------

  battle_slmt_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_slmt_reward& from);
  void MergeFrom(const battle_slmt_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bind_tael = 1 [default = 0];
  inline bool has_bind_tael() const;
  inline void clear_bind_tael();
  static const int kBindTaelFieldNumber = 1;
  inline ::google::protobuf::uint32 bind_tael() const;
  inline void set_bind_tael(::google::protobuf::uint32 value);

  // optional uint32 honor = 2 [default = 0];
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 2;
  inline ::google::protobuf::uint32 honor() const;
  inline void set_honor(::google::protobuf::uint32 value);

  // optional uint32 score = 3 [default = 0];
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 family_fam = 4 [default = 0];
  inline bool has_family_fam() const;
  inline void clear_family_fam();
  static const int kFamilyFamFieldNumber = 4;
  inline ::google::protobuf::uint32 family_fam() const;
  inline void set_family_fam(::google::protobuf::uint32 value);

  // repeated uint32 goods_id = 5;
  inline int goods_id_size() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 5;
  inline ::google::protobuf::uint32 goods_id(int index) const;
  inline void set_goods_id(int index, ::google::protobuf::uint32 value);
  inline void add_goods_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      goods_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_goods_id();

  // @@protoc_insertion_point(class_scope:client.battle_slmt_reward)
 private:
  inline void set_has_bind_tael();
  inline void clear_has_bind_tael();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_family_fam();
  inline void clear_has_family_fam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 bind_tael_;
  ::google::protobuf::uint32 honor_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 family_fam_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > goods_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_slmt_reward* default_instance_;
};
// -------------------------------------------------------------------

class battle_slmt_msg : public ::google::protobuf::Message {
 public:
  battle_slmt_msg();
  virtual ~battle_slmt_msg();

  battle_slmt_msg(const battle_slmt_msg& from);

  inline battle_slmt_msg& operator=(const battle_slmt_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_slmt_msg& default_instance();

  void Swap(battle_slmt_msg* other);

  // implements Message ----------------------------------------------

  battle_slmt_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_slmt_msg& from);
  void MergeFrom(const battle_slmt_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 battle_id = 1;
  inline bool has_battle_id() const;
  inline void clear_battle_id();
  static const int kBattleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 battle_id() const;
  inline void set_battle_id(::google::protobuf::uint32 value);

  // optional uint32 rank_id = 2;
  inline bool has_rank_id() const;
  inline void clear_rank_id();
  static const int kRankIdFieldNumber = 2;
  inline ::google::protobuf::uint32 rank_id() const;
  inline void set_rank_id(::google::protobuf::uint32 value);

  // optional uint32 win_family = 3;
  inline bool has_win_family() const;
  inline void clear_win_family();
  static const int kWinFamilyFieldNumber = 3;
  inline ::google::protobuf::uint32 win_family() const;
  inline void set_win_family(::google::protobuf::uint32 value);

  // optional .client.battle_slmt_reward bsr = 4;
  inline bool has_bsr() const;
  inline void clear_bsr();
  static const int kBsrFieldNumber = 4;
  inline const ::client::battle_slmt_reward& bsr() const;
  inline ::client::battle_slmt_reward* mutable_bsr();
  inline ::client::battle_slmt_reward* release_bsr();
  inline void set_allocated_bsr(::client::battle_slmt_reward* bsr);

  // @@protoc_insertion_point(class_scope:client.battle_slmt_msg)
 private:
  inline void set_has_battle_id();
  inline void clear_has_battle_id();
  inline void set_has_rank_id();
  inline void clear_has_rank_id();
  inline void set_has_win_family();
  inline void clear_has_win_family();
  inline void set_has_bsr();
  inline void clear_has_bsr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 battle_id_;
  ::google::protobuf::uint32 rank_id_;
  ::client::battle_slmt_reward* bsr_;
  ::google::protobuf::uint32 win_family_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_slmt_msg* default_instance_;
};
// -------------------------------------------------------------------

class battle_reward_info : public ::google::protobuf::Message {
 public:
  battle_reward_info();
  virtual ~battle_reward_info();

  battle_reward_info(const battle_reward_info& from);

  inline battle_reward_info& operator=(const battle_reward_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_reward_info& default_instance();

  void Swap(battle_reward_info* other);

  // implements Message ----------------------------------------------

  battle_reward_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_reward_info& from);
  void MergeFrom(const battle_reward_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // repeated uint32 reward_id = 2;
  inline int reward_id_size() const;
  inline void clear_reward_id();
  static const int kRewardIdFieldNumber = 2;
  inline ::google::protobuf::uint32 reward_id(int index) const;
  inline void set_reward_id(int index, ::google::protobuf::uint32 value);
  inline void add_reward_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reward_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reward_id();

  // @@protoc_insertion_point(class_scope:client.battle_reward_info)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reward_id_;
  ::google::protobuf::uint32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_reward_info* default_instance_;
};
// -------------------------------------------------------------------

class battle_reward_via : public ::google::protobuf::Message {
 public:
  battle_reward_via();
  virtual ~battle_reward_via();

  battle_reward_via(const battle_reward_via& from);

  inline battle_reward_via& operator=(const battle_reward_via& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_reward_via& default_instance();

  void Swap(battle_reward_via* other);

  // implements Message ----------------------------------------------

  battle_reward_via* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_reward_via& from);
  void MergeFrom(const battle_reward_via& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated .client.battle_reward_info bri = 2;
  inline int bri_size() const;
  inline void clear_bri();
  static const int kBriFieldNumber = 2;
  inline const ::client::battle_reward_info& bri(int index) const;
  inline ::client::battle_reward_info* mutable_bri(int index);
  inline ::client::battle_reward_info* add_bri();
  inline const ::google::protobuf::RepeatedPtrField< ::client::battle_reward_info >&
      bri() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::battle_reward_info >*
      mutable_bri();

  // @@protoc_insertion_point(class_scope:client.battle_reward_via)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::battle_reward_info > bri_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_reward_via* default_instance_;
};
// -------------------------------------------------------------------

class battle_status_req : public ::google::protobuf::Message {
 public:
  battle_status_req();
  virtual ~battle_status_req();

  battle_status_req(const battle_status_req& from);

  inline battle_status_req& operator=(const battle_status_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_status_req& default_instance();

  void Swap(battle_status_req* other);

  // implements Message ----------------------------------------------

  battle_status_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_status_req& from);
  void MergeFrom(const battle_status_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 battle_id = 1;
  inline int battle_id_size() const;
  inline void clear_battle_id();
  static const int kBattleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 battle_id(int index) const;
  inline void set_battle_id(int index, ::google::protobuf::uint32 value);
  inline void add_battle_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      battle_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_battle_id();

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.battle_status_req)
 private:
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > battle_id_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_status_req* default_instance_;
};
// -------------------------------------------------------------------

class battle_status : public ::google::protobuf::Message {
 public:
  battle_status();
  virtual ~battle_status();

  battle_status(const battle_status& from);

  inline battle_status& operator=(const battle_status& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_status& default_instance();

  void Swap(battle_status* other);

  // implements Message ----------------------------------------------

  battle_status* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_status& from);
  void MergeFrom(const battle_status& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 battle_id = 1;
  inline bool has_battle_id() const;
  inline void clear_battle_id();
  static const int kBattleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 battle_id() const;
  inline void set_battle_id(::google::protobuf::uint32 value);

  // optional uint32 cur_time = 2;
  inline bool has_cur_time() const;
  inline void clear_cur_time();
  static const int kCurTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 cur_time() const;
  inline void set_cur_time(::google::protobuf::uint32 value);

  // optional uint32 open_time = 3;
  inline bool has_open_time() const;
  inline void clear_open_time();
  static const int kOpenTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 open_time() const;
  inline void set_open_time(::google::protobuf::uint32 value);

  // optional uint32 close_time = 4;
  inline bool has_close_time() const;
  inline void clear_close_time();
  static const int kCloseTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 close_time() const;
  inline void set_close_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.battle_status)
 private:
  inline void set_has_battle_id();
  inline void clear_has_battle_id();
  inline void set_has_cur_time();
  inline void clear_has_cur_time();
  inline void set_has_open_time();
  inline void clear_has_open_time();
  inline void set_has_close_time();
  inline void clear_has_close_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 battle_id_;
  ::google::protobuf::uint32 cur_time_;
  ::google::protobuf::uint32 open_time_;
  ::google::protobuf::uint32 close_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_status* default_instance_;
};
// -------------------------------------------------------------------

class battle_status_rsp : public ::google::protobuf::Message {
 public:
  battle_status_rsp();
  virtual ~battle_status_rsp();

  battle_status_rsp(const battle_status_rsp& from);

  inline battle_status_rsp& operator=(const battle_status_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_status_rsp& default_instance();

  void Swap(battle_status_rsp* other);

  // implements Message ----------------------------------------------

  battle_status_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_status_rsp& from);
  void MergeFrom(const battle_status_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.battle_status bs = 1;
  inline int bs_size() const;
  inline void clear_bs();
  static const int kBsFieldNumber = 1;
  inline const ::client::battle_status& bs(int index) const;
  inline ::client::battle_status* mutable_bs(int index);
  inline ::client::battle_status* add_bs();
  inline const ::google::protobuf::RepeatedPtrField< ::client::battle_status >&
      bs() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::battle_status >*
      mutable_bs();

  // @@protoc_insertion_point(class_scope:client.battle_status_rsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::battle_status > bs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2ebattle_2eproto();
  friend void protobuf_AssignDesc_client_2ebattle_2eproto();
  friend void protobuf_ShutdownFile_client_2ebattle_2eproto();

  void InitAsDefaultInstance();
  static battle_status_rsp* default_instance_;
};
// ===================================================================


// ===================================================================

// battle_info_req

// required uint32 time = 1;
inline bool battle_info_req::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_info_req::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_info_req::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_info_req::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 battle_info_req::time() const {
  return time_;
}
inline void battle_info_req::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool battle_info_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_info_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_info_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_info_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& battle_info_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* battle_info_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* battle_info_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void battle_info_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// battle_info

// required uint32 index = 1;
inline bool battle_info::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_info::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_info::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_info::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 battle_info::index() const {
  return index_;
}
inline void battle_info::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required uint32 close_seconds = 2;
inline bool battle_info::has_close_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_info::set_has_close_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_info::clear_has_close_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_info::clear_close_seconds() {
  close_seconds_ = 0u;
  clear_has_close_seconds();
}
inline ::google::protobuf::uint32 battle_info::close_seconds() const {
  return close_seconds_;
}
inline void battle_info::set_close_seconds(::google::protobuf::uint32 value) {
  set_has_close_seconds();
  close_seconds_ = value;
}

// required uint32 angel_num = 3;
inline bool battle_info::has_angel_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void battle_info::set_has_angel_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void battle_info::clear_has_angel_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void battle_info::clear_angel_num() {
  angel_num_ = 0u;
  clear_has_angel_num();
}
inline ::google::protobuf::uint32 battle_info::angel_num() const {
  return angel_num_;
}
inline void battle_info::set_angel_num(::google::protobuf::uint32 value) {
  set_has_angel_num();
  angel_num_ = value;
}

// required uint32 witch_num = 4;
inline bool battle_info::has_witch_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void battle_info::set_has_witch_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void battle_info::clear_has_witch_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void battle_info::clear_witch_num() {
  witch_num_ = 0u;
  clear_has_witch_num();
}
inline ::google::protobuf::uint32 battle_info::witch_num() const {
  return witch_num_;
}
inline void battle_info::set_witch_num(::google::protobuf::uint32 value) {
  set_has_witch_num();
  witch_num_ = value;
}

// required uint32 nether_num = 5;
inline bool battle_info::has_nether_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void battle_info::set_has_nether_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void battle_info::clear_has_nether_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void battle_info::clear_nether_num() {
  nether_num_ = 0u;
  clear_has_nether_num();
}
inline ::google::protobuf::uint32 battle_info::nether_num() const {
  return nether_num_;
}
inline void battle_info::set_nether_num(::google::protobuf::uint32 value) {
  set_has_nether_num();
  nether_num_ = value;
}

// -------------------------------------------------------------------

// battle_info_rsp

// required uint32 open_seconds = 1;
inline bool battle_info_rsp::has_open_seconds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_info_rsp::set_has_open_seconds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_info_rsp::clear_has_open_seconds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_info_rsp::clear_open_seconds() {
  open_seconds_ = 0u;
  clear_has_open_seconds();
}
inline ::google::protobuf::uint32 battle_info_rsp::open_seconds() const {
  return open_seconds_;
}
inline void battle_info_rsp::set_open_seconds(::google::protobuf::uint32 value) {
  set_has_open_seconds();
  open_seconds_ = value;
}

// optional .client.battle_info bi = 2;
inline bool battle_info_rsp::has_bi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_info_rsp::set_has_bi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_info_rsp::clear_has_bi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_info_rsp::clear_bi() {
  if (bi_ != NULL) bi_->::client::battle_info::Clear();
  clear_has_bi();
}
inline const ::client::battle_info& battle_info_rsp::bi() const {
  return bi_ != NULL ? *bi_ : *default_instance_->bi_;
}
inline ::client::battle_info* battle_info_rsp::mutable_bi() {
  set_has_bi();
  if (bi_ == NULL) bi_ = new ::client::battle_info;
  return bi_;
}
inline ::client::battle_info* battle_info_rsp::release_bi() {
  clear_has_bi();
  ::client::battle_info* temp = bi_;
  bi_ = NULL;
  return temp;
}
inline void battle_info_rsp::set_allocated_bi(::client::battle_info* bi) {
  delete bi_;
  bi_ = bi;
  if (bi) {
    set_has_bi();
  } else {
    clear_has_bi();
  }
}

// -------------------------------------------------------------------

// battle_score

// required uint32 role_id = 1;
inline bool battle_score::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_score::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_score::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_score::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 battle_score::role_id() const {
  return role_id_;
}
inline void battle_score::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 score = 2;
inline bool battle_score::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_score::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_score::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_score::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 battle_score::score() const {
  return score_;
}
inline void battle_score::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// battle_score_list

// repeated .client.battle_score bs = 1;
inline int battle_score_list::bs_size() const {
  return bs_.size();
}
inline void battle_score_list::clear_bs() {
  bs_.Clear();
}
inline const ::client::battle_score& battle_score_list::bs(int index) const {
  return bs_.Get(index);
}
inline ::client::battle_score* battle_score_list::mutable_bs(int index) {
  return bs_.Mutable(index);
}
inline ::client::battle_score* battle_score_list::add_bs() {
  return bs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::battle_score >&
battle_score_list::bs() const {
  return bs_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::battle_score >*
battle_score_list::mutable_bs() {
  return &bs_;
}

// -------------------------------------------------------------------

// battle_camp_score

// required uint32 camp_id = 1;
inline bool battle_camp_score::has_camp_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_camp_score::set_has_camp_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_camp_score::clear_has_camp_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_camp_score::clear_camp_id() {
  camp_id_ = 0u;
  clear_has_camp_id();
}
inline ::google::protobuf::uint32 battle_camp_score::camp_id() const {
  return camp_id_;
}
inline void battle_camp_score::set_camp_id(::google::protobuf::uint32 value) {
  set_has_camp_id();
  camp_id_ = value;
}

// required uint32 score = 2;
inline bool battle_camp_score::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_camp_score::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_camp_score::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_camp_score::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 battle_camp_score::score() const {
  return score_;
}
inline void battle_camp_score::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// battle_camp_score_list

// repeated .client.battle_camp_score bcs = 1;
inline int battle_camp_score_list::bcs_size() const {
  return bcs_.size();
}
inline void battle_camp_score_list::clear_bcs() {
  bcs_.Clear();
}
inline const ::client::battle_camp_score& battle_camp_score_list::bcs(int index) const {
  return bcs_.Get(index);
}
inline ::client::battle_camp_score* battle_camp_score_list::mutable_bcs(int index) {
  return bcs_.Mutable(index);
}
inline ::client::battle_camp_score* battle_camp_score_list::add_bcs() {
  return bcs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::battle_camp_score >&
battle_camp_score_list::bcs() const {
  return bcs_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::battle_camp_score >*
battle_camp_score_list::mutable_bcs() {
  return &bcs_;
}

// -------------------------------------------------------------------

// battle_enter_req

// required uint32 time = 1;
inline bool battle_enter_req::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_enter_req::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_enter_req::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_enter_req::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 battle_enter_req::time() const {
  return time_;
}
inline void battle_enter_req::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// required uint32 id = 2;
inline bool battle_enter_req::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_enter_req::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_enter_req::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_enter_req::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 battle_enter_req::id() const {
  return id_;
}
inline void battle_enter_req::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool battle_enter_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void battle_enter_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000004u;
}
inline void battle_enter_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void battle_enter_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& battle_enter_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* battle_enter_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* battle_enter_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void battle_enter_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// battle_enter_rsp

// required .client.BATTLE_OPERATE_RET_E ret = 1;
inline bool battle_enter_rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_enter_rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_enter_rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_enter_rsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::client::BATTLE_OPERATE_RET_E battle_enter_rsp::ret() const {
  return static_cast< ::client::BATTLE_OPERATE_RET_E >(ret_);
}
inline void battle_enter_rsp::set_ret(::client::BATTLE_OPERATE_RET_E value) {
  assert(::client::BATTLE_OPERATE_RET_E_IsValid(value));
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// battle_leave_req

// required uint32 time = 1;
inline bool battle_leave_req::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_leave_req::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_leave_req::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_leave_req::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 battle_leave_req::time() const {
  return time_;
}
inline void battle_leave_req::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool battle_leave_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_leave_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_leave_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_leave_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& battle_leave_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* battle_leave_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* battle_leave_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void battle_leave_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// battle_leave_rsp

// required .client.BATTLE_OPERATE_RET_E ret = 1;
inline bool battle_leave_rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_leave_rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_leave_rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_leave_rsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::client::BATTLE_OPERATE_RET_E battle_leave_rsp::ret() const {
  return static_cast< ::client::BATTLE_OPERATE_RET_E >(ret_);
}
inline void battle_leave_rsp::set_ret(::client::BATTLE_OPERATE_RET_E value) {
  assert(::client::BATTLE_OPERATE_RET_E_IsValid(value));
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// battle_honor_refund_req

// required uint32 unixtime = 1;
inline bool battle_honor_refund_req::has_unixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_honor_refund_req::set_has_unixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_honor_refund_req::clear_has_unixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_honor_refund_req::clear_unixtime() {
  unixtime_ = 0u;
  clear_has_unixtime();
}
inline ::google::protobuf::uint32 battle_honor_refund_req::unixtime() const {
  return unixtime_;
}
inline void battle_honor_refund_req::set_unixtime(::google::protobuf::uint32 value) {
  set_has_unixtime();
  unixtime_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool battle_honor_refund_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_honor_refund_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_honor_refund_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_honor_refund_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& battle_honor_refund_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* battle_honor_refund_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* battle_honor_refund_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void battle_honor_refund_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// battle_honor_refund_rsp

// required uint32 ret = 1;
inline bool battle_honor_refund_rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_honor_refund_rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_honor_refund_rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_honor_refund_rsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 battle_honor_refund_rsp::ret() const {
  return ret_;
}
inline void battle_honor_refund_rsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// battle_personal_record

// required uint32 role_id = 1 [default = 0];
inline bool battle_personal_record::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_personal_record::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_personal_record::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_personal_record::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 battle_personal_record::role_id() const {
  return role_id_;
}
inline void battle_personal_record::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 honor = 2 [default = 0];
inline bool battle_personal_record::has_honor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_personal_record::set_has_honor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_personal_record::clear_has_honor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_personal_record::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 battle_personal_record::honor() const {
  return honor_;
}
inline void battle_personal_record::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
}

// required uint32 score = 3 [default = 0];
inline bool battle_personal_record::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void battle_personal_record::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void battle_personal_record::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void battle_personal_record::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 battle_personal_record::score() const {
  return score_;
}
inline void battle_personal_record::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// required uint32 kill = 4 [default = 0];
inline bool battle_personal_record::has_kill() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void battle_personal_record::set_has_kill() {
  _has_bits_[0] |= 0x00000008u;
}
inline void battle_personal_record::clear_has_kill() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void battle_personal_record::clear_kill() {
  kill_ = 0u;
  clear_has_kill();
}
inline ::google::protobuf::uint32 battle_personal_record::kill() const {
  return kill_;
}
inline void battle_personal_record::set_kill(::google::protobuf::uint32 value) {
  set_has_kill();
  kill_ = value;
}

// required uint32 dead = 5 [default = 0];
inline bool battle_personal_record::has_dead() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void battle_personal_record::set_has_dead() {
  _has_bits_[0] |= 0x00000010u;
}
inline void battle_personal_record::clear_has_dead() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void battle_personal_record::clear_dead() {
  dead_ = 0u;
  clear_has_dead();
}
inline ::google::protobuf::uint32 battle_personal_record::dead() const {
  return dead_;
}
inline void battle_personal_record::set_dead(::google::protobuf::uint32 value) {
  set_has_dead();
  dead_ = value;
}

// required uint32 max_combo = 6 [default = 0];
inline bool battle_personal_record::has_max_combo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void battle_personal_record::set_has_max_combo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void battle_personal_record::clear_has_max_combo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void battle_personal_record::clear_max_combo() {
  max_combo_ = 0u;
  clear_has_max_combo();
}
inline ::google::protobuf::uint32 battle_personal_record::max_combo() const {
  return max_combo_;
}
inline void battle_personal_record::set_max_combo(::google::protobuf::uint32 value) {
  set_has_max_combo();
  max_combo_ = value;
}

// required uint32 cur_combo = 7 [default = 0];
inline bool battle_personal_record::has_cur_combo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void battle_personal_record::set_has_cur_combo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void battle_personal_record::clear_has_cur_combo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void battle_personal_record::clear_cur_combo() {
  cur_combo_ = 0u;
  clear_has_cur_combo();
}
inline ::google::protobuf::uint32 battle_personal_record::cur_combo() const {
  return cur_combo_;
}
inline void battle_personal_record::set_cur_combo(::google::protobuf::uint32 value) {
  set_has_cur_combo();
  cur_combo_ = value;
}

// required uint32 rank = 8 [default = 0];
inline bool battle_personal_record::has_rank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void battle_personal_record::set_has_rank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void battle_personal_record::clear_has_rank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void battle_personal_record::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 battle_personal_record::rank() const {
  return rank_;
}
inline void battle_personal_record::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 kill_time = 9 [default = 0];
inline bool battle_personal_record::has_kill_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void battle_personal_record::set_has_kill_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void battle_personal_record::clear_has_kill_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void battle_personal_record::clear_kill_time() {
  kill_time_ = 0u;
  clear_has_kill_time();
}
inline ::google::protobuf::uint32 battle_personal_record::kill_time() const {
  return kill_time_;
}
inline void battle_personal_record::set_kill_time(::google::protobuf::uint32 value) {
  set_has_kill_time();
  kill_time_ = value;
}

// required uint32 last_kill = 10 [default = 0];
inline bool battle_personal_record::has_last_kill() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void battle_personal_record::set_has_last_kill() {
  _has_bits_[0] |= 0x00000200u;
}
inline void battle_personal_record::clear_has_last_kill() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void battle_personal_record::clear_last_kill() {
  last_kill_ = 0u;
  clear_has_last_kill();
}
inline ::google::protobuf::uint32 battle_personal_record::last_kill() const {
  return last_kill_;
}
inline void battle_personal_record::set_last_kill(::google::protobuf::uint32 value) {
  set_has_last_kill();
  last_kill_ = value;
}

// -------------------------------------------------------------------

// notify_battle_personal_record

// repeated .client.battle_personal_record bpr = 1;
inline int notify_battle_personal_record::bpr_size() const {
  return bpr_.size();
}
inline void notify_battle_personal_record::clear_bpr() {
  bpr_.Clear();
}
inline const ::client::battle_personal_record& notify_battle_personal_record::bpr(int index) const {
  return bpr_.Get(index);
}
inline ::client::battle_personal_record* notify_battle_personal_record::mutable_bpr(int index) {
  return bpr_.Mutable(index);
}
inline ::client::battle_personal_record* notify_battle_personal_record::add_bpr() {
  return bpr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::battle_personal_record >&
notify_battle_personal_record::bpr() const {
  return bpr_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::battle_personal_record >*
notify_battle_personal_record::mutable_bpr() {
  return &bpr_;
}

// -------------------------------------------------------------------

// battle_slmt_reward

// optional uint32 bind_tael = 1 [default = 0];
inline bool battle_slmt_reward::has_bind_tael() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_slmt_reward::set_has_bind_tael() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_slmt_reward::clear_has_bind_tael() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_slmt_reward::clear_bind_tael() {
  bind_tael_ = 0u;
  clear_has_bind_tael();
}
inline ::google::protobuf::uint32 battle_slmt_reward::bind_tael() const {
  return bind_tael_;
}
inline void battle_slmt_reward::set_bind_tael(::google::protobuf::uint32 value) {
  set_has_bind_tael();
  bind_tael_ = value;
}

// optional uint32 honor = 2 [default = 0];
inline bool battle_slmt_reward::has_honor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_slmt_reward::set_has_honor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_slmt_reward::clear_has_honor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_slmt_reward::clear_honor() {
  honor_ = 0u;
  clear_has_honor();
}
inline ::google::protobuf::uint32 battle_slmt_reward::honor() const {
  return honor_;
}
inline void battle_slmt_reward::set_honor(::google::protobuf::uint32 value) {
  set_has_honor();
  honor_ = value;
}

// optional uint32 score = 3 [default = 0];
inline bool battle_slmt_reward::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void battle_slmt_reward::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void battle_slmt_reward::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void battle_slmt_reward::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 battle_slmt_reward::score() const {
  return score_;
}
inline void battle_slmt_reward::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 family_fam = 4 [default = 0];
inline bool battle_slmt_reward::has_family_fam() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void battle_slmt_reward::set_has_family_fam() {
  _has_bits_[0] |= 0x00000008u;
}
inline void battle_slmt_reward::clear_has_family_fam() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void battle_slmt_reward::clear_family_fam() {
  family_fam_ = 0u;
  clear_has_family_fam();
}
inline ::google::protobuf::uint32 battle_slmt_reward::family_fam() const {
  return family_fam_;
}
inline void battle_slmt_reward::set_family_fam(::google::protobuf::uint32 value) {
  set_has_family_fam();
  family_fam_ = value;
}

// repeated uint32 goods_id = 5;
inline int battle_slmt_reward::goods_id_size() const {
  return goods_id_.size();
}
inline void battle_slmt_reward::clear_goods_id() {
  goods_id_.Clear();
}
inline ::google::protobuf::uint32 battle_slmt_reward::goods_id(int index) const {
  return goods_id_.Get(index);
}
inline void battle_slmt_reward::set_goods_id(int index, ::google::protobuf::uint32 value) {
  goods_id_.Set(index, value);
}
inline void battle_slmt_reward::add_goods_id(::google::protobuf::uint32 value) {
  goods_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
battle_slmt_reward::goods_id() const {
  return goods_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
battle_slmt_reward::mutable_goods_id() {
  return &goods_id_;
}

// -------------------------------------------------------------------

// battle_slmt_msg

// required uint32 battle_id = 1;
inline bool battle_slmt_msg::has_battle_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_slmt_msg::set_has_battle_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_slmt_msg::clear_has_battle_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_slmt_msg::clear_battle_id() {
  battle_id_ = 0u;
  clear_has_battle_id();
}
inline ::google::protobuf::uint32 battle_slmt_msg::battle_id() const {
  return battle_id_;
}
inline void battle_slmt_msg::set_battle_id(::google::protobuf::uint32 value) {
  set_has_battle_id();
  battle_id_ = value;
}

// optional uint32 rank_id = 2;
inline bool battle_slmt_msg::has_rank_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_slmt_msg::set_has_rank_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_slmt_msg::clear_has_rank_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_slmt_msg::clear_rank_id() {
  rank_id_ = 0u;
  clear_has_rank_id();
}
inline ::google::protobuf::uint32 battle_slmt_msg::rank_id() const {
  return rank_id_;
}
inline void battle_slmt_msg::set_rank_id(::google::protobuf::uint32 value) {
  set_has_rank_id();
  rank_id_ = value;
}

// optional uint32 win_family = 3;
inline bool battle_slmt_msg::has_win_family() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void battle_slmt_msg::set_has_win_family() {
  _has_bits_[0] |= 0x00000004u;
}
inline void battle_slmt_msg::clear_has_win_family() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void battle_slmt_msg::clear_win_family() {
  win_family_ = 0u;
  clear_has_win_family();
}
inline ::google::protobuf::uint32 battle_slmt_msg::win_family() const {
  return win_family_;
}
inline void battle_slmt_msg::set_win_family(::google::protobuf::uint32 value) {
  set_has_win_family();
  win_family_ = value;
}

// optional .client.battle_slmt_reward bsr = 4;
inline bool battle_slmt_msg::has_bsr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void battle_slmt_msg::set_has_bsr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void battle_slmt_msg::clear_has_bsr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void battle_slmt_msg::clear_bsr() {
  if (bsr_ != NULL) bsr_->::client::battle_slmt_reward::Clear();
  clear_has_bsr();
}
inline const ::client::battle_slmt_reward& battle_slmt_msg::bsr() const {
  return bsr_ != NULL ? *bsr_ : *default_instance_->bsr_;
}
inline ::client::battle_slmt_reward* battle_slmt_msg::mutable_bsr() {
  set_has_bsr();
  if (bsr_ == NULL) bsr_ = new ::client::battle_slmt_reward;
  return bsr_;
}
inline ::client::battle_slmt_reward* battle_slmt_msg::release_bsr() {
  clear_has_bsr();
  ::client::battle_slmt_reward* temp = bsr_;
  bsr_ = NULL;
  return temp;
}
inline void battle_slmt_msg::set_allocated_bsr(::client::battle_slmt_reward* bsr) {
  delete bsr_;
  bsr_ = bsr;
  if (bsr) {
    set_has_bsr();
  } else {
    clear_has_bsr();
  }
}

// -------------------------------------------------------------------

// battle_reward_info

// required uint32 role_id = 1;
inline bool battle_reward_info::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_reward_info::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_reward_info::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_reward_info::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 battle_reward_info::role_id() const {
  return role_id_;
}
inline void battle_reward_info::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// repeated uint32 reward_id = 2;
inline int battle_reward_info::reward_id_size() const {
  return reward_id_.size();
}
inline void battle_reward_info::clear_reward_id() {
  reward_id_.Clear();
}
inline ::google::protobuf::uint32 battle_reward_info::reward_id(int index) const {
  return reward_id_.Get(index);
}
inline void battle_reward_info::set_reward_id(int index, ::google::protobuf::uint32 value) {
  reward_id_.Set(index, value);
}
inline void battle_reward_info::add_reward_id(::google::protobuf::uint32 value) {
  reward_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
battle_reward_info::reward_id() const {
  return reward_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
battle_reward_info::mutable_reward_id() {
  return &reward_id_;
}

// -------------------------------------------------------------------

// battle_reward_via

// required uint32 type = 1;
inline bool battle_reward_via::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_reward_via::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_reward_via::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_reward_via::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 battle_reward_via::type() const {
  return type_;
}
inline void battle_reward_via::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// repeated .client.battle_reward_info bri = 2;
inline int battle_reward_via::bri_size() const {
  return bri_.size();
}
inline void battle_reward_via::clear_bri() {
  bri_.Clear();
}
inline const ::client::battle_reward_info& battle_reward_via::bri(int index) const {
  return bri_.Get(index);
}
inline ::client::battle_reward_info* battle_reward_via::mutable_bri(int index) {
  return bri_.Mutable(index);
}
inline ::client::battle_reward_info* battle_reward_via::add_bri() {
  return bri_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::battle_reward_info >&
battle_reward_via::bri() const {
  return bri_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::battle_reward_info >*
battle_reward_via::mutable_bri() {
  return &bri_;
}

// -------------------------------------------------------------------

// battle_status_req

// repeated uint32 battle_id = 1;
inline int battle_status_req::battle_id_size() const {
  return battle_id_.size();
}
inline void battle_status_req::clear_battle_id() {
  battle_id_.Clear();
}
inline ::google::protobuf::uint32 battle_status_req::battle_id(int index) const {
  return battle_id_.Get(index);
}
inline void battle_status_req::set_battle_id(int index, ::google::protobuf::uint32 value) {
  battle_id_.Set(index, value);
}
inline void battle_status_req::add_battle_id(::google::protobuf::uint32 value) {
  battle_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
battle_status_req::battle_id() const {
  return battle_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
battle_status_req::mutable_battle_id() {
  return &battle_id_;
}

// optional .client.server_head svr_head = 1000;
inline bool battle_status_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_status_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_status_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_status_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& battle_status_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* battle_status_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* battle_status_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void battle_status_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// battle_status

// required uint32 battle_id = 1;
inline bool battle_status::has_battle_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_status::set_has_battle_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_status::clear_has_battle_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_status::clear_battle_id() {
  battle_id_ = 0u;
  clear_has_battle_id();
}
inline ::google::protobuf::uint32 battle_status::battle_id() const {
  return battle_id_;
}
inline void battle_status::set_battle_id(::google::protobuf::uint32 value) {
  set_has_battle_id();
  battle_id_ = value;
}

// optional uint32 cur_time = 2;
inline bool battle_status::has_cur_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void battle_status::set_has_cur_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void battle_status::clear_has_cur_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void battle_status::clear_cur_time() {
  cur_time_ = 0u;
  clear_has_cur_time();
}
inline ::google::protobuf::uint32 battle_status::cur_time() const {
  return cur_time_;
}
inline void battle_status::set_cur_time(::google::protobuf::uint32 value) {
  set_has_cur_time();
  cur_time_ = value;
}

// optional uint32 open_time = 3;
inline bool battle_status::has_open_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void battle_status::set_has_open_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void battle_status::clear_has_open_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void battle_status::clear_open_time() {
  open_time_ = 0u;
  clear_has_open_time();
}
inline ::google::protobuf::uint32 battle_status::open_time() const {
  return open_time_;
}
inline void battle_status::set_open_time(::google::protobuf::uint32 value) {
  set_has_open_time();
  open_time_ = value;
}

// optional uint32 close_time = 4;
inline bool battle_status::has_close_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void battle_status::set_has_close_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void battle_status::clear_has_close_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void battle_status::clear_close_time() {
  close_time_ = 0u;
  clear_has_close_time();
}
inline ::google::protobuf::uint32 battle_status::close_time() const {
  return close_time_;
}
inline void battle_status::set_close_time(::google::protobuf::uint32 value) {
  set_has_close_time();
  close_time_ = value;
}

// -------------------------------------------------------------------

// battle_status_rsp

// repeated .client.battle_status bs = 1;
inline int battle_status_rsp::bs_size() const {
  return bs_.size();
}
inline void battle_status_rsp::clear_bs() {
  bs_.Clear();
}
inline const ::client::battle_status& battle_status_rsp::bs(int index) const {
  return bs_.Get(index);
}
inline ::client::battle_status* battle_status_rsp::mutable_bs(int index) {
  return bs_.Mutable(index);
}
inline ::client::battle_status* battle_status_rsp::add_bs() {
  return bs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::battle_status >&
battle_status_rsp::bs() const {
  return bs_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::battle_status >*
battle_status_rsp::mutable_bs() {
  return &bs_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::BATTLE_OPERATE_RET_E>() {
  return ::client::BATTLE_OPERATE_RET_E_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::BATTLE_REWARD_VIA_TYPE>() {
  return ::client::BATTLE_REWARD_VIA_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2ebattle_2eproto__INCLUDED
