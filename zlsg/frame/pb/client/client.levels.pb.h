// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.levels.proto

#ifndef PROTOBUF_client_2elevels_2eproto__INCLUDED
#define PROTOBUF_client_2elevels_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2elevels_2eproto();
void protobuf_AssignDesc_client_2elevels_2eproto();
void protobuf_ShutdownFile_client_2elevels_2eproto();

class level_hero_info;
class level_info;
class levels_list_req;
class levels_list_rsp;
class levels_reset_req;
class levels_reset_rsp;

// ===================================================================

class level_hero_info : public ::google::protobuf::Message {
 public:
  level_hero_info();
  virtual ~level_hero_info();

  level_hero_info(const level_hero_info& from);

  inline level_hero_info& operator=(const level_hero_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const level_hero_info& default_instance();

  void Swap(level_hero_info* other);

  // implements Message ----------------------------------------------

  level_hero_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const level_hero_info& from);
  void MergeFrom(const level_hero_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 power = 3;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 3;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.level_hero_info)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_power();
  inline void clear_has_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 power_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2elevels_2eproto();
  friend void protobuf_AssignDesc_client_2elevels_2eproto();
  friend void protobuf_ShutdownFile_client_2elevels_2eproto();

  void InitAsDefaultInstance();
  static level_hero_info* default_instance_;
};
// -------------------------------------------------------------------

class level_info : public ::google::protobuf::Message {
 public:
  level_info();
  virtual ~level_info();

  level_info(const level_info& from);

  inline level_info& operator=(const level_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const level_info& default_instance();

  void Swap(level_info* other);

  // implements Message ----------------------------------------------

  level_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const level_info& from);
  void MergeFrom(const level_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .client.level_hero_info lhi = 2;
  inline int lhi_size() const;
  inline void clear_lhi();
  static const int kLhiFieldNumber = 2;
  inline const ::client::level_hero_info& lhi(int index) const;
  inline ::client::level_hero_info* mutable_lhi(int index);
  inline ::client::level_hero_info* add_lhi();
  inline const ::google::protobuf::RepeatedPtrField< ::client::level_hero_info >&
      lhi() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::level_hero_info >*
      mutable_lhi();

  // @@protoc_insertion_point(class_scope:client.level_info)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::level_hero_info > lhi_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2elevels_2eproto();
  friend void protobuf_AssignDesc_client_2elevels_2eproto();
  friend void protobuf_ShutdownFile_client_2elevels_2eproto();

  void InitAsDefaultInstance();
  static level_info* default_instance_;
};
// -------------------------------------------------------------------

class levels_list_req : public ::google::protobuf::Message {
 public:
  levels_list_req();
  virtual ~levels_list_req();

  levels_list_req(const levels_list_req& from);

  inline levels_list_req& operator=(const levels_list_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const levels_list_req& default_instance();

  void Swap(levels_list_req* other);

  // implements Message ----------------------------------------------

  levels_list_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const levels_list_req& from);
  void MergeFrom(const levels_list_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.levels_list_req)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2elevels_2eproto();
  friend void protobuf_AssignDesc_client_2elevels_2eproto();
  friend void protobuf_ShutdownFile_client_2elevels_2eproto();

  void InitAsDefaultInstance();
  static levels_list_req* default_instance_;
};
// -------------------------------------------------------------------

class levels_list_rsp : public ::google::protobuf::Message {
 public:
  levels_list_rsp();
  virtual ~levels_list_rsp();

  levels_list_rsp(const levels_list_rsp& from);

  inline levels_list_rsp& operator=(const levels_list_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const levels_list_rsp& default_instance();

  void Swap(levels_list_rsp* other);

  // implements Message ----------------------------------------------

  levels_list_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const levels_list_rsp& from);
  void MergeFrom(const levels_list_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.level_info li = 1;
  inline int li_size() const;
  inline void clear_li();
  static const int kLiFieldNumber = 1;
  inline const ::client::level_info& li(int index) const;
  inline ::client::level_info* mutable_li(int index);
  inline ::client::level_info* add_li();
  inline const ::google::protobuf::RepeatedPtrField< ::client::level_info >&
      li() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::level_info >*
      mutable_li();

  // required uint32 cur = 2;
  inline bool has_cur() const;
  inline void clear_cur();
  static const int kCurFieldNumber = 2;
  inline ::google::protobuf::uint32 cur() const;
  inline void set_cur(::google::protobuf::uint32 value);

  // required uint32 tail = 3;
  inline bool has_tail() const;
  inline void clear_tail();
  static const int kTailFieldNumber = 3;
  inline ::google::protobuf::uint32 tail() const;
  inline void set_tail(::google::protobuf::uint32 value);

  // required uint32 max_level = 4;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 max_level() const;
  inline void set_max_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.levels_list_rsp)
 private:
  inline void set_has_cur();
  inline void clear_has_cur();
  inline void set_has_tail();
  inline void clear_has_tail();
  inline void set_has_max_level();
  inline void clear_has_max_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::level_info > li_;
  ::google::protobuf::uint32 cur_;
  ::google::protobuf::uint32 tail_;
  ::google::protobuf::uint32 max_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2elevels_2eproto();
  friend void protobuf_AssignDesc_client_2elevels_2eproto();
  friend void protobuf_ShutdownFile_client_2elevels_2eproto();

  void InitAsDefaultInstance();
  static levels_list_rsp* default_instance_;
};
// -------------------------------------------------------------------

class levels_reset_req : public ::google::protobuf::Message {
 public:
  levels_reset_req();
  virtual ~levels_reset_req();

  levels_reset_req(const levels_reset_req& from);

  inline levels_reset_req& operator=(const levels_reset_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const levels_reset_req& default_instance();

  void Swap(levels_reset_req* other);

  // implements Message ----------------------------------------------

  levels_reset_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const levels_reset_req& from);
  void MergeFrom(const levels_reset_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.levels_reset_req)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2elevels_2eproto();
  friend void protobuf_AssignDesc_client_2elevels_2eproto();
  friend void protobuf_ShutdownFile_client_2elevels_2eproto();

  void InitAsDefaultInstance();
  static levels_reset_req* default_instance_;
};
// -------------------------------------------------------------------

class levels_reset_rsp : public ::google::protobuf::Message {
 public:
  levels_reset_rsp();
  virtual ~levels_reset_rsp();

  levels_reset_rsp(const levels_reset_rsp& from);

  inline levels_reset_rsp& operator=(const levels_reset_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const levels_reset_rsp& default_instance();

  void Swap(levels_reset_rsp* other);

  // implements Message ----------------------------------------------

  levels_reset_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const levels_reset_rsp& from);
  void MergeFrom(const levels_reset_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.levels_reset_rsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2elevels_2eproto();
  friend void protobuf_AssignDesc_client_2elevels_2eproto();
  friend void protobuf_ShutdownFile_client_2elevels_2eproto();

  void InitAsDefaultInstance();
  static levels_reset_rsp* default_instance_;
};
// ===================================================================


// ===================================================================

// level_hero_info

// required uint32 id = 1;
inline bool level_hero_info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void level_hero_info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void level_hero_info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void level_hero_info::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 level_hero_info::id() const {
  return id_;
}
inline void level_hero_info::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool level_hero_info::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void level_hero_info::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void level_hero_info::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void level_hero_info::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 level_hero_info::level() const {
  return level_;
}
inline void level_hero_info::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 power = 3;
inline bool level_hero_info::has_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void level_hero_info::set_has_power() {
  _has_bits_[0] |= 0x00000004u;
}
inline void level_hero_info::clear_has_power() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void level_hero_info::clear_power() {
  power_ = 0u;
  clear_has_power();
}
inline ::google::protobuf::uint32 level_hero_info::power() const {
  return power_;
}
inline void level_hero_info::set_power(::google::protobuf::uint32 value) {
  set_has_power();
  power_ = value;
}

// -------------------------------------------------------------------

// level_info

// required uint32 id = 1;
inline bool level_info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void level_info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void level_info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void level_info::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 level_info::id() const {
  return id_;
}
inline void level_info::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated .client.level_hero_info lhi = 2;
inline int level_info::lhi_size() const {
  return lhi_.size();
}
inline void level_info::clear_lhi() {
  lhi_.Clear();
}
inline const ::client::level_hero_info& level_info::lhi(int index) const {
  return lhi_.Get(index);
}
inline ::client::level_hero_info* level_info::mutable_lhi(int index) {
  return lhi_.Mutable(index);
}
inline ::client::level_hero_info* level_info::add_lhi() {
  return lhi_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::level_hero_info >&
level_info::lhi() const {
  return lhi_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::level_hero_info >*
level_info::mutable_lhi() {
  return &lhi_;
}

// -------------------------------------------------------------------

// levels_list_req

// required uint32 time = 1;
inline bool levels_list_req::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void levels_list_req::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void levels_list_req::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void levels_list_req::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 levels_list_req::time() const {
  return time_;
}
inline void levels_list_req::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool levels_list_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void levels_list_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void levels_list_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void levels_list_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& levels_list_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* levels_list_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* levels_list_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void levels_list_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// levels_list_rsp

// repeated .client.level_info li = 1;
inline int levels_list_rsp::li_size() const {
  return li_.size();
}
inline void levels_list_rsp::clear_li() {
  li_.Clear();
}
inline const ::client::level_info& levels_list_rsp::li(int index) const {
  return li_.Get(index);
}
inline ::client::level_info* levels_list_rsp::mutable_li(int index) {
  return li_.Mutable(index);
}
inline ::client::level_info* levels_list_rsp::add_li() {
  return li_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::level_info >&
levels_list_rsp::li() const {
  return li_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::level_info >*
levels_list_rsp::mutable_li() {
  return &li_;
}

// required uint32 cur = 2;
inline bool levels_list_rsp::has_cur() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void levels_list_rsp::set_has_cur() {
  _has_bits_[0] |= 0x00000002u;
}
inline void levels_list_rsp::clear_has_cur() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void levels_list_rsp::clear_cur() {
  cur_ = 0u;
  clear_has_cur();
}
inline ::google::protobuf::uint32 levels_list_rsp::cur() const {
  return cur_;
}
inline void levels_list_rsp::set_cur(::google::protobuf::uint32 value) {
  set_has_cur();
  cur_ = value;
}

// required uint32 tail = 3;
inline bool levels_list_rsp::has_tail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void levels_list_rsp::set_has_tail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void levels_list_rsp::clear_has_tail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void levels_list_rsp::clear_tail() {
  tail_ = 0u;
  clear_has_tail();
}
inline ::google::protobuf::uint32 levels_list_rsp::tail() const {
  return tail_;
}
inline void levels_list_rsp::set_tail(::google::protobuf::uint32 value) {
  set_has_tail();
  tail_ = value;
}

// required uint32 max_level = 4;
inline bool levels_list_rsp::has_max_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void levels_list_rsp::set_has_max_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void levels_list_rsp::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void levels_list_rsp::clear_max_level() {
  max_level_ = 0u;
  clear_has_max_level();
}
inline ::google::protobuf::uint32 levels_list_rsp::max_level() const {
  return max_level_;
}
inline void levels_list_rsp::set_max_level(::google::protobuf::uint32 value) {
  set_has_max_level();
  max_level_ = value;
}

// -------------------------------------------------------------------

// levels_reset_req

// required uint32 time = 1;
inline bool levels_reset_req::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void levels_reset_req::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void levels_reset_req::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void levels_reset_req::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 levels_reset_req::time() const {
  return time_;
}
inline void levels_reset_req::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool levels_reset_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void levels_reset_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void levels_reset_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void levels_reset_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& levels_reset_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* levels_reset_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* levels_reset_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void levels_reset_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// levels_reset_rsp

// required uint32 ret = 1;
inline bool levels_reset_rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void levels_reset_rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void levels_reset_rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void levels_reset_rsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 levels_reset_rsp::ret() const {
  return ret_;
}
inline void levels_reset_rsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2elevels_2eproto__INCLUDED
