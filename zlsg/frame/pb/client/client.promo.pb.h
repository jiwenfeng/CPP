// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.promo.proto

#ifndef PROTOBUF_client_2epromo_2eproto__INCLUDED
#define PROTOBUF_client_2epromo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2epromo_2eproto();
void protobuf_AssignDesc_client_2epromo_2eproto();
void protobuf_ShutdownFile_client_2epromo_2eproto();

class promo_list_of_names_req;
class promo_list_of_names;
class promo_list_of_names_rsp;
class open_server_time_req;
class open_server_time_rsp;
class check_list_of_names_req;
class check_list_of_names_rsp;

// ===================================================================

class promo_list_of_names_req : public ::google::protobuf::Message {
 public:
  promo_list_of_names_req();
  virtual ~promo_list_of_names_req();

  promo_list_of_names_req(const promo_list_of_names_req& from);

  inline promo_list_of_names_req& operator=(const promo_list_of_names_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const promo_list_of_names_req& default_instance();

  void Swap(promo_list_of_names_req* other);

  // implements Message ----------------------------------------------

  promo_list_of_names_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const promo_list_of_names_req& from);
  void MergeFrom(const promo_list_of_names_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.promo_list_of_names_req)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epromo_2eproto();
  friend void protobuf_AssignDesc_client_2epromo_2eproto();
  friend void protobuf_ShutdownFile_client_2epromo_2eproto();

  void InitAsDefaultInstance();
  static promo_list_of_names_req* default_instance_;
};
// -------------------------------------------------------------------

class promo_list_of_names : public ::google::protobuf::Message {
 public:
  promo_list_of_names();
  virtual ~promo_list_of_names();

  promo_list_of_names(const promo_list_of_names& from);

  inline promo_list_of_names& operator=(const promo_list_of_names& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const promo_list_of_names& default_instance();

  void Swap(promo_list_of_names* other);

  // implements Message ----------------------------------------------

  promo_list_of_names* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const promo_list_of_names& from);
  void MergeFrom(const promo_list_of_names& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline ::google::protobuf::uint32 reward() const;
  inline void set_reward(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.promo_list_of_names)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epromo_2eproto();
  friend void protobuf_AssignDesc_client_2epromo_2eproto();
  friend void protobuf_ShutdownFile_client_2epromo_2eproto();

  void InitAsDefaultInstance();
  static promo_list_of_names* default_instance_;
};
// -------------------------------------------------------------------

class promo_list_of_names_rsp : public ::google::protobuf::Message {
 public:
  promo_list_of_names_rsp();
  virtual ~promo_list_of_names_rsp();

  promo_list_of_names_rsp(const promo_list_of_names_rsp& from);

  inline promo_list_of_names_rsp& operator=(const promo_list_of_names_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const promo_list_of_names_rsp& default_instance();

  void Swap(promo_list_of_names_rsp* other);

  // implements Message ----------------------------------------------

  promo_list_of_names_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const promo_list_of_names_rsp& from);
  void MergeFrom(const promo_list_of_names_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated .client.promo_list_of_names roles = 2;
  inline int roles_size() const;
  inline void clear_roles();
  static const int kRolesFieldNumber = 2;
  inline const ::client::promo_list_of_names& roles(int index) const;
  inline ::client::promo_list_of_names* mutable_roles(int index);
  inline ::client::promo_list_of_names* add_roles();
  inline const ::google::protobuf::RepeatedPtrField< ::client::promo_list_of_names >&
      roles() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::promo_list_of_names >*
      mutable_roles();

  // @@protoc_insertion_point(class_scope:client.promo_list_of_names_rsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::promo_list_of_names > roles_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epromo_2eproto();
  friend void protobuf_AssignDesc_client_2epromo_2eproto();
  friend void protobuf_ShutdownFile_client_2epromo_2eproto();

  void InitAsDefaultInstance();
  static promo_list_of_names_rsp* default_instance_;
};
// -------------------------------------------------------------------

class open_server_time_req : public ::google::protobuf::Message {
 public:
  open_server_time_req();
  virtual ~open_server_time_req();

  open_server_time_req(const open_server_time_req& from);

  inline open_server_time_req& operator=(const open_server_time_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_server_time_req& default_instance();

  void Swap(open_server_time_req* other);

  // implements Message ----------------------------------------------

  open_server_time_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const open_server_time_req& from);
  void MergeFrom(const open_server_time_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unixtime = 1;
  inline bool has_unixtime() const;
  inline void clear_unixtime();
  static const int kUnixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 unixtime() const;
  inline void set_unixtime(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.open_server_time_req)
 private:
  inline void set_has_unixtime();
  inline void clear_has_unixtime();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 unixtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epromo_2eproto();
  friend void protobuf_AssignDesc_client_2epromo_2eproto();
  friend void protobuf_ShutdownFile_client_2epromo_2eproto();

  void InitAsDefaultInstance();
  static open_server_time_req* default_instance_;
};
// -------------------------------------------------------------------

class open_server_time_rsp : public ::google::protobuf::Message {
 public:
  open_server_time_rsp();
  virtual ~open_server_time_rsp();

  open_server_time_rsp(const open_server_time_rsp& from);

  inline open_server_time_rsp& operator=(const open_server_time_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_server_time_rsp& default_instance();

  void Swap(open_server_time_rsp* other);

  // implements Message ----------------------------------------------

  open_server_time_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const open_server_time_rsp& from);
  void MergeFrom(const open_server_time_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unixtime = 1;
  inline bool has_unixtime() const;
  inline void clear_unixtime();
  static const int kUnixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 unixtime() const;
  inline void set_unixtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.open_server_time_rsp)
 private:
  inline void set_has_unixtime();
  inline void clear_has_unixtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unixtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epromo_2eproto();
  friend void protobuf_AssignDesc_client_2epromo_2eproto();
  friend void protobuf_ShutdownFile_client_2epromo_2eproto();

  void InitAsDefaultInstance();
  static open_server_time_rsp* default_instance_;
};
// -------------------------------------------------------------------

class check_list_of_names_req : public ::google::protobuf::Message {
 public:
  check_list_of_names_req();
  virtual ~check_list_of_names_req();

  check_list_of_names_req(const check_list_of_names_req& from);

  inline check_list_of_names_req& operator=(const check_list_of_names_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const check_list_of_names_req& default_instance();

  void Swap(check_list_of_names_req* other);

  // implements Message ----------------------------------------------

  check_list_of_names_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const check_list_of_names_req& from);
  void MergeFrom(const check_list_of_names_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline ::google::protobuf::uint32 reward() const;
  inline void set_reward(::google::protobuf::uint32 value);

  // optional uint32 family_id = 5;
  inline bool has_family_id() const;
  inline void clear_family_id();
  static const int kFamilyIdFieldNumber = 5;
  inline ::google::protobuf::uint32 family_id() const;
  inline void set_family_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.check_list_of_names_req)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_family_id();
  inline void clear_has_family_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 reward_;
  ::google::protobuf::uint32 family_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epromo_2eproto();
  friend void protobuf_AssignDesc_client_2epromo_2eproto();
  friend void protobuf_ShutdownFile_client_2epromo_2eproto();

  void InitAsDefaultInstance();
  static check_list_of_names_req* default_instance_;
};
// -------------------------------------------------------------------

class check_list_of_names_rsp : public ::google::protobuf::Message {
 public:
  check_list_of_names_rsp();
  virtual ~check_list_of_names_rsp();

  check_list_of_names_rsp(const check_list_of_names_rsp& from);

  inline check_list_of_names_rsp& operator=(const check_list_of_names_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const check_list_of_names_rsp& default_instance();

  void Swap(check_list_of_names_rsp* other);

  // implements Message ----------------------------------------------

  check_list_of_names_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const check_list_of_names_rsp& from);
  void MergeFrom(const check_list_of_names_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required uint32 reward = 4;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 4;
  inline ::google::protobuf::uint32 reward() const;
  inline void set_reward(::google::protobuf::uint32 value);

  // required bool check = 5;
  inline bool has_check() const;
  inline void clear_check();
  static const int kCheckFieldNumber = 5;
  inline bool check() const;
  inline void set_check(bool value);

  // @@protoc_insertion_point(class_scope:client.check_list_of_names_rsp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_check();
  inline void clear_has_check();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 reward_;
  bool check_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epromo_2eproto();
  friend void protobuf_AssignDesc_client_2epromo_2eproto();
  friend void protobuf_ShutdownFile_client_2epromo_2eproto();

  void InitAsDefaultInstance();
  static check_list_of_names_rsp* default_instance_;
};
// ===================================================================


// ===================================================================

// promo_list_of_names_req

// required uint32 type = 1;
inline bool promo_list_of_names_req::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void promo_list_of_names_req::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void promo_list_of_names_req::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void promo_list_of_names_req::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 promo_list_of_names_req::type() const {
  return type_;
}
inline void promo_list_of_names_req::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool promo_list_of_names_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void promo_list_of_names_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void promo_list_of_names_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void promo_list_of_names_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& promo_list_of_names_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* promo_list_of_names_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* promo_list_of_names_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void promo_list_of_names_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// promo_list_of_names

// required uint32 role_id = 1;
inline bool promo_list_of_names::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void promo_list_of_names::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void promo_list_of_names::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void promo_list_of_names::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 promo_list_of_names::role_id() const {
  return role_id_;
}
inline void promo_list_of_names::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 reward = 2;
inline bool promo_list_of_names::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void promo_list_of_names::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void promo_list_of_names::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void promo_list_of_names::clear_reward() {
  reward_ = 0u;
  clear_has_reward();
}
inline ::google::protobuf::uint32 promo_list_of_names::reward() const {
  return reward_;
}
inline void promo_list_of_names::set_reward(::google::protobuf::uint32 value) {
  set_has_reward();
  reward_ = value;
}

// -------------------------------------------------------------------

// promo_list_of_names_rsp

// required uint32 type = 1;
inline bool promo_list_of_names_rsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void promo_list_of_names_rsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void promo_list_of_names_rsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void promo_list_of_names_rsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 promo_list_of_names_rsp::type() const {
  return type_;
}
inline void promo_list_of_names_rsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// repeated .client.promo_list_of_names roles = 2;
inline int promo_list_of_names_rsp::roles_size() const {
  return roles_.size();
}
inline void promo_list_of_names_rsp::clear_roles() {
  roles_.Clear();
}
inline const ::client::promo_list_of_names& promo_list_of_names_rsp::roles(int index) const {
  return roles_.Get(index);
}
inline ::client::promo_list_of_names* promo_list_of_names_rsp::mutable_roles(int index) {
  return roles_.Mutable(index);
}
inline ::client::promo_list_of_names* promo_list_of_names_rsp::add_roles() {
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::promo_list_of_names >&
promo_list_of_names_rsp::roles() const {
  return roles_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::promo_list_of_names >*
promo_list_of_names_rsp::mutable_roles() {
  return &roles_;
}

// -------------------------------------------------------------------

// open_server_time_req

// required uint32 unixtime = 1;
inline bool open_server_time_req::has_unixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_server_time_req::set_has_unixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_server_time_req::clear_has_unixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_server_time_req::clear_unixtime() {
  unixtime_ = 0u;
  clear_has_unixtime();
}
inline ::google::protobuf::uint32 open_server_time_req::unixtime() const {
  return unixtime_;
}
inline void open_server_time_req::set_unixtime(::google::protobuf::uint32 value) {
  set_has_unixtime();
  unixtime_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool open_server_time_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void open_server_time_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void open_server_time_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void open_server_time_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& open_server_time_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* open_server_time_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* open_server_time_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void open_server_time_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// open_server_time_rsp

// required uint32 unixtime = 1;
inline bool open_server_time_rsp::has_unixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_server_time_rsp::set_has_unixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_server_time_rsp::clear_has_unixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_server_time_rsp::clear_unixtime() {
  unixtime_ = 0u;
  clear_has_unixtime();
}
inline ::google::protobuf::uint32 open_server_time_rsp::unixtime() const {
  return unixtime_;
}
inline void open_server_time_rsp::set_unixtime(::google::protobuf::uint32 value) {
  set_has_unixtime();
  unixtime_ = value;
}

// -------------------------------------------------------------------

// check_list_of_names_req

// required uint32 type = 1;
inline bool check_list_of_names_req::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void check_list_of_names_req::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void check_list_of_names_req::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void check_list_of_names_req::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 check_list_of_names_req::type() const {
  return type_;
}
inline void check_list_of_names_req::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 role_id = 2;
inline bool check_list_of_names_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void check_list_of_names_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void check_list_of_names_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void check_list_of_names_req::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 check_list_of_names_req::role_id() const {
  return role_id_;
}
inline void check_list_of_names_req::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 rank = 3;
inline bool check_list_of_names_req::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void check_list_of_names_req::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void check_list_of_names_req::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void check_list_of_names_req::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 check_list_of_names_req::rank() const {
  return rank_;
}
inline void check_list_of_names_req::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 reward = 4;
inline bool check_list_of_names_req::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void check_list_of_names_req::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void check_list_of_names_req::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void check_list_of_names_req::clear_reward() {
  reward_ = 0u;
  clear_has_reward();
}
inline ::google::protobuf::uint32 check_list_of_names_req::reward() const {
  return reward_;
}
inline void check_list_of_names_req::set_reward(::google::protobuf::uint32 value) {
  set_has_reward();
  reward_ = value;
}

// optional uint32 family_id = 5;
inline bool check_list_of_names_req::has_family_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void check_list_of_names_req::set_has_family_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void check_list_of_names_req::clear_has_family_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void check_list_of_names_req::clear_family_id() {
  family_id_ = 0u;
  clear_has_family_id();
}
inline ::google::protobuf::uint32 check_list_of_names_req::family_id() const {
  return family_id_;
}
inline void check_list_of_names_req::set_family_id(::google::protobuf::uint32 value) {
  set_has_family_id();
  family_id_ = value;
}

// -------------------------------------------------------------------

// check_list_of_names_rsp

// required uint32 type = 1;
inline bool check_list_of_names_rsp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void check_list_of_names_rsp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void check_list_of_names_rsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void check_list_of_names_rsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 check_list_of_names_rsp::type() const {
  return type_;
}
inline void check_list_of_names_rsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 role_id = 2;
inline bool check_list_of_names_rsp::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void check_list_of_names_rsp::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void check_list_of_names_rsp::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void check_list_of_names_rsp::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 check_list_of_names_rsp::role_id() const {
  return role_id_;
}
inline void check_list_of_names_rsp::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 rank = 3;
inline bool check_list_of_names_rsp::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void check_list_of_names_rsp::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void check_list_of_names_rsp::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void check_list_of_names_rsp::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 check_list_of_names_rsp::rank() const {
  return rank_;
}
inline void check_list_of_names_rsp::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required uint32 reward = 4;
inline bool check_list_of_names_rsp::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void check_list_of_names_rsp::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void check_list_of_names_rsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void check_list_of_names_rsp::clear_reward() {
  reward_ = 0u;
  clear_has_reward();
}
inline ::google::protobuf::uint32 check_list_of_names_rsp::reward() const {
  return reward_;
}
inline void check_list_of_names_rsp::set_reward(::google::protobuf::uint32 value) {
  set_has_reward();
  reward_ = value;
}

// required bool check = 5;
inline bool check_list_of_names_rsp::has_check() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void check_list_of_names_rsp::set_has_check() {
  _has_bits_[0] |= 0x00000010u;
}
inline void check_list_of_names_rsp::clear_has_check() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void check_list_of_names_rsp::clear_check() {
  check_ = false;
  clear_has_check();
}
inline bool check_list_of_names_rsp::check() const {
  return check_;
}
inline void check_list_of_names_rsp::set_check(bool value) {
  set_has_check();
  check_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2epromo_2eproto__INCLUDED
