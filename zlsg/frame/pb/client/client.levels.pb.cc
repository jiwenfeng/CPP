// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.levels.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client.levels.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace client {

namespace {

const ::google::protobuf::Descriptor* level_hero_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  level_hero_info_reflection_ = NULL;
const ::google::protobuf::Descriptor* level_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  level_info_reflection_ = NULL;
const ::google::protobuf::Descriptor* levels_list_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  levels_list_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* levels_list_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  levels_list_rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* levels_reset_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  levels_reset_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* levels_reset_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  levels_reset_rsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_client_2elevels_2eproto() {
  protobuf_AddDesc_client_2elevels_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "client.levels.proto");
  GOOGLE_CHECK(file != NULL);
  level_hero_info_descriptor_ = file->message_type(0);
  static const int level_hero_info_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(level_hero_info, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(level_hero_info, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(level_hero_info, power_),
  };
  level_hero_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      level_hero_info_descriptor_,
      level_hero_info::default_instance_,
      level_hero_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(level_hero_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(level_hero_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(level_hero_info));
  level_info_descriptor_ = file->message_type(1);
  static const int level_info_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(level_info, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(level_info, lhi_),
  };
  level_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      level_info_descriptor_,
      level_info::default_instance_,
      level_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(level_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(level_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(level_info));
  levels_list_req_descriptor_ = file->message_type(2);
  static const int levels_list_req_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_req, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_req, svr_head_),
  };
  levels_list_req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      levels_list_req_descriptor_,
      levels_list_req::default_instance_,
      levels_list_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(levels_list_req));
  levels_list_rsp_descriptor_ = file->message_type(3);
  static const int levels_list_rsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_rsp, li_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_rsp, cur_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_rsp, tail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_rsp, max_level_),
  };
  levels_list_rsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      levels_list_rsp_descriptor_,
      levels_list_rsp::default_instance_,
      levels_list_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_rsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_list_rsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(levels_list_rsp));
  levels_reset_req_descriptor_ = file->message_type(4);
  static const int levels_reset_req_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_reset_req, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_reset_req, svr_head_),
  };
  levels_reset_req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      levels_reset_req_descriptor_,
      levels_reset_req::default_instance_,
      levels_reset_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_reset_req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_reset_req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(levels_reset_req));
  levels_reset_rsp_descriptor_ = file->message_type(5);
  static const int levels_reset_rsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_reset_rsp, ret_),
  };
  levels_reset_rsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      levels_reset_rsp_descriptor_,
      levels_reset_rsp::default_instance_,
      levels_reset_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_reset_rsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(levels_reset_rsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(levels_reset_rsp));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_client_2elevels_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    level_hero_info_descriptor_, &level_hero_info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    level_info_descriptor_, &level_info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    levels_list_req_descriptor_, &levels_list_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    levels_list_rsp_descriptor_, &levels_list_rsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    levels_reset_req_descriptor_, &levels_reset_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    levels_reset_rsp_descriptor_, &levels_reset_rsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_client_2elevels_2eproto() {
  delete level_hero_info::default_instance_;
  delete level_hero_info_reflection_;
  delete level_info::default_instance_;
  delete level_info_reflection_;
  delete levels_list_req::default_instance_;
  delete levels_list_req_reflection_;
  delete levels_list_rsp::default_instance_;
  delete levels_list_rsp_reflection_;
  delete levels_reset_req::default_instance_;
  delete levels_reset_req_reflection_;
  delete levels_reset_rsp::default_instance_;
  delete levels_reset_rsp_reflection_;
}

void protobuf_AddDesc_client_2elevels_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::client::protobuf_AddDesc_client_2ecomm_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023client.levels.proto\022\006client\032\021client.co"
    "mm.proto\";\n\017level_hero_info\022\n\n\002id\030\001 \002(\r\022"
    "\r\n\005level\030\002 \002(\r\022\r\n\005power\030\003 \002(\r\">\n\nlevel_i"
    "nfo\022\n\n\002id\030\001 \002(\r\022$\n\003lhi\030\002 \003(\0132\027.client.le"
    "vel_hero_info\"G\n\017levels_list_req\022\014\n\004time"
    "\030\001 \002(\r\022&\n\010svr_head\030\350\007 \001(\0132\023.client.serve"
    "r_head\"_\n\017levels_list_rsp\022\036\n\002li\030\001 \003(\0132\022."
    "client.level_info\022\013\n\003cur\030\002 \002(\r\022\014\n\004tail\030\003"
    " \002(\r\022\021\n\tmax_level\030\004 \002(\r\"H\n\020levels_reset_"
    "req\022\014\n\004time\030\001 \002(\r\022&\n\010svr_head\030\350\007 \001(\0132\023.c"
    "lient.server_head\"\037\n\020levels_reset_rsp\022\013\n"
    "\003ret\030\001 \002(\r", 450);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client.levels.proto", &protobuf_RegisterTypes);
  level_hero_info::default_instance_ = new level_hero_info();
  level_info::default_instance_ = new level_info();
  levels_list_req::default_instance_ = new levels_list_req();
  levels_list_rsp::default_instance_ = new levels_list_rsp();
  levels_reset_req::default_instance_ = new levels_reset_req();
  levels_reset_rsp::default_instance_ = new levels_reset_rsp();
  level_hero_info::default_instance_->InitAsDefaultInstance();
  level_info::default_instance_->InitAsDefaultInstance();
  levels_list_req::default_instance_->InitAsDefaultInstance();
  levels_list_rsp::default_instance_->InitAsDefaultInstance();
  levels_reset_req::default_instance_->InitAsDefaultInstance();
  levels_reset_rsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client_2elevels_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client_2elevels_2eproto {
  StaticDescriptorInitializer_client_2elevels_2eproto() {
    protobuf_AddDesc_client_2elevels_2eproto();
  }
} static_descriptor_initializer_client_2elevels_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int level_hero_info::kIdFieldNumber;
const int level_hero_info::kLevelFieldNumber;
const int level_hero_info::kPowerFieldNumber;
#endif  // !_MSC_VER

level_hero_info::level_hero_info()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void level_hero_info::InitAsDefaultInstance() {
}

level_hero_info::level_hero_info(const level_hero_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void level_hero_info::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  level_ = 0u;
  power_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

level_hero_info::~level_hero_info() {
  SharedDtor();
}

void level_hero_info::SharedDtor() {
  if (this != default_instance_) {
  }
}

void level_hero_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* level_hero_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return level_hero_info_descriptor_;
}

const level_hero_info& level_hero_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_2elevels_2eproto();
  return *default_instance_;
}

level_hero_info* level_hero_info::default_instance_ = NULL;

level_hero_info* level_hero_info::New() const {
  return new level_hero_info;
}

void level_hero_info::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    level_ = 0u;
    power_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool level_hero_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required uint32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_power;
        break;
      }

      // required uint32 power = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &power_)));
          set_has_power();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void level_hero_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // required uint32 power = 3;
  if (has_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->power(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* level_hero_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // required uint32 power = 3;
  if (has_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->power(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int level_hero_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 power = 3;
    if (has_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->power());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void level_hero_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const level_hero_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const level_hero_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void level_hero_info::MergeFrom(const level_hero_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_power()) {
      set_power(from.power());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void level_hero_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void level_hero_info::CopyFrom(const level_hero_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool level_hero_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void level_hero_info::Swap(level_hero_info* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(power_, other->power_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata level_hero_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = level_hero_info_descriptor_;
  metadata.reflection = level_hero_info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int level_info::kIdFieldNumber;
const int level_info::kLhiFieldNumber;
#endif  // !_MSC_VER

level_info::level_info()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void level_info::InitAsDefaultInstance() {
}

level_info::level_info(const level_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void level_info::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

level_info::~level_info() {
  SharedDtor();
}

void level_info::SharedDtor() {
  if (this != default_instance_) {
  }
}

void level_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* level_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return level_info_descriptor_;
}

const level_info& level_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_2elevels_2eproto();
  return *default_instance_;
}

level_info* level_info::default_instance_ = NULL;

level_info* level_info::New() const {
  return new level_info;
}

void level_info::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
  }
  lhi_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool level_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_lhi;
        break;
      }

      // repeated .client.level_hero_info lhi = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lhi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lhi()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_lhi;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void level_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .client.level_hero_info lhi = 2;
  for (int i = 0; i < this->lhi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lhi(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* level_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .client.level_hero_info lhi = 2;
  for (int i = 0; i < this->lhi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->lhi(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int level_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  // repeated .client.level_hero_info lhi = 2;
  total_size += 1 * this->lhi_size();
  for (int i = 0; i < this->lhi_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lhi(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void level_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const level_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const level_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void level_info::MergeFrom(const level_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  lhi_.MergeFrom(from.lhi_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void level_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void level_info::CopyFrom(const level_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool level_info::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < lhi_size(); i++) {
    if (!this->lhi(i).IsInitialized()) return false;
  }
  return true;
}

void level_info::Swap(level_info* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    lhi_.Swap(&other->lhi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata level_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = level_info_descriptor_;
  metadata.reflection = level_info_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int levels_list_req::kTimeFieldNumber;
const int levels_list_req::kSvrHeadFieldNumber;
#endif  // !_MSC_VER

levels_list_req::levels_list_req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void levels_list_req::InitAsDefaultInstance() {
  svr_head_ = const_cast< ::client::server_head*>(&::client::server_head::default_instance());
}

levels_list_req::levels_list_req(const levels_list_req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void levels_list_req::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0u;
  svr_head_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

levels_list_req::~levels_list_req() {
  SharedDtor();
}

void levels_list_req::SharedDtor() {
  if (this != default_instance_) {
    delete svr_head_;
  }
}

void levels_list_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* levels_list_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return levels_list_req_descriptor_;
}

const levels_list_req& levels_list_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_2elevels_2eproto();
  return *default_instance_;
}

levels_list_req* levels_list_req::default_instance_ = NULL;

levels_list_req* levels_list_req::New() const {
  return new levels_list_req;
}

void levels_list_req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    time_ = 0u;
    if (has_svr_head()) {
      if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool levels_list_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8002)) goto parse_svr_head;
        break;
      }

      // optional .client.server_head svr_head = 1000;
      case 1000: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_svr_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_svr_head()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void levels_list_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->time(), output);
  }

  // optional .client.server_head svr_head = 1000;
  if (has_svr_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, this->svr_head(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* levels_list_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->time(), target);
  }

  // optional .client.server_head svr_head = 1000;
  if (has_svr_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1000, this->svr_head(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int levels_list_req::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional .client.server_head svr_head = 1000;
    if (has_svr_head()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->svr_head());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void levels_list_req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const levels_list_req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const levels_list_req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void levels_list_req::MergeFrom(const levels_list_req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_svr_head()) {
      mutable_svr_head()->::client::server_head::MergeFrom(from.svr_head());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void levels_list_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void levels_list_req::CopyFrom(const levels_list_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool levels_list_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void levels_list_req::Swap(levels_list_req* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(svr_head_, other->svr_head_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata levels_list_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = levels_list_req_descriptor_;
  metadata.reflection = levels_list_req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int levels_list_rsp::kLiFieldNumber;
const int levels_list_rsp::kCurFieldNumber;
const int levels_list_rsp::kTailFieldNumber;
const int levels_list_rsp::kMaxLevelFieldNumber;
#endif  // !_MSC_VER

levels_list_rsp::levels_list_rsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void levels_list_rsp::InitAsDefaultInstance() {
}

levels_list_rsp::levels_list_rsp(const levels_list_rsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void levels_list_rsp::SharedCtor() {
  _cached_size_ = 0;
  cur_ = 0u;
  tail_ = 0u;
  max_level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

levels_list_rsp::~levels_list_rsp() {
  SharedDtor();
}

void levels_list_rsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void levels_list_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* levels_list_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return levels_list_rsp_descriptor_;
}

const levels_list_rsp& levels_list_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_2elevels_2eproto();
  return *default_instance_;
}

levels_list_rsp* levels_list_rsp::default_instance_ = NULL;

levels_list_rsp* levels_list_rsp::New() const {
  return new levels_list_rsp;
}

void levels_list_rsp::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    cur_ = 0u;
    tail_ = 0u;
    max_level_ = 0u;
  }
  li_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool levels_list_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .client.level_info li = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_li:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_li()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_li;
        if (input->ExpectTag(16)) goto parse_cur;
        break;
      }

      // required uint32 cur = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_)));
          set_has_cur();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_tail;
        break;
      }

      // required uint32 tail = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tail_)));
          set_has_tail();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_max_level;
        break;
      }

      // required uint32 max_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_level_)));
          set_has_max_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void levels_list_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .client.level_info li = 1;
  for (int i = 0; i < this->li_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->li(i), output);
  }

  // required uint32 cur = 2;
  if (has_cur()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cur(), output);
  }

  // required uint32 tail = 3;
  if (has_tail()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tail(), output);
  }

  // required uint32 max_level = 4;
  if (has_max_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->max_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* levels_list_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .client.level_info li = 1;
  for (int i = 0; i < this->li_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->li(i), target);
  }

  // required uint32 cur = 2;
  if (has_cur()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cur(), target);
  }

  // required uint32 tail = 3;
  if (has_tail()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tail(), target);
  }

  // required uint32 max_level = 4;
  if (has_max_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->max_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int levels_list_rsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required uint32 cur = 2;
    if (has_cur()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cur());
    }

    // required uint32 tail = 3;
    if (has_tail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tail());
    }

    // required uint32 max_level = 4;
    if (has_max_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_level());
    }

  }
  // repeated .client.level_info li = 1;
  total_size += 1 * this->li_size();
  for (int i = 0; i < this->li_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->li(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void levels_list_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const levels_list_rsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const levels_list_rsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void levels_list_rsp::MergeFrom(const levels_list_rsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  li_.MergeFrom(from.li_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_cur()) {
      set_cur(from.cur());
    }
    if (from.has_tail()) {
      set_tail(from.tail());
    }
    if (from.has_max_level()) {
      set_max_level(from.max_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void levels_list_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void levels_list_rsp::CopyFrom(const levels_list_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool levels_list_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < li_size(); i++) {
    if (!this->li(i).IsInitialized()) return false;
  }
  return true;
}

void levels_list_rsp::Swap(levels_list_rsp* other) {
  if (other != this) {
    li_.Swap(&other->li_);
    std::swap(cur_, other->cur_);
    std::swap(tail_, other->tail_);
    std::swap(max_level_, other->max_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata levels_list_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = levels_list_rsp_descriptor_;
  metadata.reflection = levels_list_rsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int levels_reset_req::kTimeFieldNumber;
const int levels_reset_req::kSvrHeadFieldNumber;
#endif  // !_MSC_VER

levels_reset_req::levels_reset_req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void levels_reset_req::InitAsDefaultInstance() {
  svr_head_ = const_cast< ::client::server_head*>(&::client::server_head::default_instance());
}

levels_reset_req::levels_reset_req(const levels_reset_req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void levels_reset_req::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0u;
  svr_head_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

levels_reset_req::~levels_reset_req() {
  SharedDtor();
}

void levels_reset_req::SharedDtor() {
  if (this != default_instance_) {
    delete svr_head_;
  }
}

void levels_reset_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* levels_reset_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return levels_reset_req_descriptor_;
}

const levels_reset_req& levels_reset_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_2elevels_2eproto();
  return *default_instance_;
}

levels_reset_req* levels_reset_req::default_instance_ = NULL;

levels_reset_req* levels_reset_req::New() const {
  return new levels_reset_req;
}

void levels_reset_req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    time_ = 0u;
    if (has_svr_head()) {
      if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool levels_reset_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8002)) goto parse_svr_head;
        break;
      }

      // optional .client.server_head svr_head = 1000;
      case 1000: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_svr_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_svr_head()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void levels_reset_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->time(), output);
  }

  // optional .client.server_head svr_head = 1000;
  if (has_svr_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, this->svr_head(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* levels_reset_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->time(), target);
  }

  // optional .client.server_head svr_head = 1000;
  if (has_svr_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1000, this->svr_head(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int levels_reset_req::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional .client.server_head svr_head = 1000;
    if (has_svr_head()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->svr_head());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void levels_reset_req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const levels_reset_req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const levels_reset_req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void levels_reset_req::MergeFrom(const levels_reset_req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_svr_head()) {
      mutable_svr_head()->::client::server_head::MergeFrom(from.svr_head());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void levels_reset_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void levels_reset_req::CopyFrom(const levels_reset_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool levels_reset_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void levels_reset_req::Swap(levels_reset_req* other) {
  if (other != this) {
    std::swap(time_, other->time_);
    std::swap(svr_head_, other->svr_head_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata levels_reset_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = levels_reset_req_descriptor_;
  metadata.reflection = levels_reset_req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int levels_reset_rsp::kRetFieldNumber;
#endif  // !_MSC_VER

levels_reset_rsp::levels_reset_rsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void levels_reset_rsp::InitAsDefaultInstance() {
}

levels_reset_rsp::levels_reset_rsp(const levels_reset_rsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void levels_reset_rsp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

levels_reset_rsp::~levels_reset_rsp() {
  SharedDtor();
}

void levels_reset_rsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void levels_reset_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* levels_reset_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return levels_reset_rsp_descriptor_;
}

const levels_reset_rsp& levels_reset_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client_2elevels_2eproto();
  return *default_instance_;
}

levels_reset_rsp* levels_reset_rsp::default_instance_ = NULL;

levels_reset_rsp* levels_reset_rsp::New() const {
  return new levels_reset_rsp;
}

void levels_reset_rsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool levels_reset_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void levels_reset_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* levels_reset_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int levels_reset_rsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void levels_reset_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const levels_reset_rsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const levels_reset_rsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void levels_reset_rsp::MergeFrom(const levels_reset_rsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void levels_reset_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void levels_reset_rsp::CopyFrom(const levels_reset_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool levels_reset_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void levels_reset_rsp::Swap(levels_reset_rsp* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata levels_reset_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = levels_reset_rsp_descriptor_;
  metadata.reflection = levels_reset_rsp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

// @@protoc_insertion_point(global_scope)
