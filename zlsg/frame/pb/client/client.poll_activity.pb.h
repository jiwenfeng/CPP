// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.poll_activity.proto

#ifndef PROTOBUF_client_2epoll_5factivity_2eproto__INCLUDED
#define PROTOBUF_client_2epoll_5factivity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
#include "client.role_props.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

class item_info;
class value_info;
class reward_flag;
class act_db_info;
class act_open_info;
class poll_activity_rsp;
class activity_info_req;
class activity_info_rsp;
class activity_shop_req;
class activity_shop_c2g;
class activity_shop_g2c;
class activity_shop_rsp;
class activity_reward_req;
class activity_reward_c2g;
class activity_reward_g2c;
class activity_reward_rsp;
class load_activity_list_center;
class activity_base;
class activity_list_rsp;
class activity_his_record_c2g;
class activity_his_record_g2c;
class update_activity_record_g2c;

enum ACTIVITY_OPEN_TYPE_E {
  ACTIVITY_OPEN_TYPE_OPEN = 1,
  ACTIVITY_OPEN_TYPE_DATE = 3,
  ACTIVITY_OPEN_TYPE_CIR = 4
};
bool ACTIVITY_OPEN_TYPE_E_IsValid(int value);
const ACTIVITY_OPEN_TYPE_E ACTIVITY_OPEN_TYPE_E_MIN = ACTIVITY_OPEN_TYPE_OPEN;
const ACTIVITY_OPEN_TYPE_E ACTIVITY_OPEN_TYPE_E_MAX = ACTIVITY_OPEN_TYPE_CIR;
const int ACTIVITY_OPEN_TYPE_E_ARRAYSIZE = ACTIVITY_OPEN_TYPE_E_MAX + 1;

const ::google::protobuf::EnumDescriptor* ACTIVITY_OPEN_TYPE_E_descriptor();
inline const ::std::string& ACTIVITY_OPEN_TYPE_E_Name(ACTIVITY_OPEN_TYPE_E value) {
  return ::google::protobuf::internal::NameOfEnum(
    ACTIVITY_OPEN_TYPE_E_descriptor(), value);
}
inline bool ACTIVITY_OPEN_TYPE_E_Parse(
    const ::std::string& name, ACTIVITY_OPEN_TYPE_E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ACTIVITY_OPEN_TYPE_E>(
    ACTIVITY_OPEN_TYPE_E_descriptor(), name, value);
}
enum BACKGROUND_ACTIVITY_OPEN_TYPE {
  BACKGROUND_ACTIVITY_OPEN_TYPE_NONE = 0,
  BACKGROUND_ACTIVITY_OPEN_TYPE_OPEN = 1,
  BACKGROUND_ACTIVITY_OPEN_TYPE_CLOSE = 2,
  BACKGROUND_ACTIVITY_OPEN_TYPE_ALREADY = 3,
  BACKGROUND_ACTIVITY_OPEN_TYPE_STOP = 4
};
bool BACKGROUND_ACTIVITY_OPEN_TYPE_IsValid(int value);
const BACKGROUND_ACTIVITY_OPEN_TYPE BACKGROUND_ACTIVITY_OPEN_TYPE_MIN = BACKGROUND_ACTIVITY_OPEN_TYPE_NONE;
const BACKGROUND_ACTIVITY_OPEN_TYPE BACKGROUND_ACTIVITY_OPEN_TYPE_MAX = BACKGROUND_ACTIVITY_OPEN_TYPE_STOP;
const int BACKGROUND_ACTIVITY_OPEN_TYPE_ARRAYSIZE = BACKGROUND_ACTIVITY_OPEN_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* BACKGROUND_ACTIVITY_OPEN_TYPE_descriptor();
inline const ::std::string& BACKGROUND_ACTIVITY_OPEN_TYPE_Name(BACKGROUND_ACTIVITY_OPEN_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    BACKGROUND_ACTIVITY_OPEN_TYPE_descriptor(), value);
}
inline bool BACKGROUND_ACTIVITY_OPEN_TYPE_Parse(
    const ::std::string& name, BACKGROUND_ACTIVITY_OPEN_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BACKGROUND_ACTIVITY_OPEN_TYPE>(
    BACKGROUND_ACTIVITY_OPEN_TYPE_descriptor(), name, value);
}
enum REWARD_TYPE {
  REWARD_TYPE_LEVEL = 1,
  REWARD_TYPE_KING = 2,
  REWARD_TYPE_DOUBLE_INGOT = 3,
  REWARD_TYPE_VIP_LEVEL = 4,
  REWARD_TYPE_POWER = 5,
  REWARD_TYPE_MOUNT = 7,
  REWARD_TYPE_GEM_LEVEL = 9,
  REWARD_TYPE_BOW = 11
};
bool REWARD_TYPE_IsValid(int value);
const REWARD_TYPE REWARD_TYPE_MIN = REWARD_TYPE_LEVEL;
const REWARD_TYPE REWARD_TYPE_MAX = REWARD_TYPE_BOW;
const int REWARD_TYPE_ARRAYSIZE = REWARD_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* REWARD_TYPE_descriptor();
inline const ::std::string& REWARD_TYPE_Name(REWARD_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    REWARD_TYPE_descriptor(), value);
}
inline bool REWARD_TYPE_Parse(
    const ::std::string& name, REWARD_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<REWARD_TYPE>(
    REWARD_TYPE_descriptor(), name, value);
}
// ===================================================================

class item_info : public ::google::protobuf::Message {
 public:
  item_info();
  virtual ~item_info();

  item_info(const item_info& from);

  inline item_info& operator=(const item_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const item_info& default_instance();

  void Swap(item_info* other);

  // implements Message ----------------------------------------------

  item_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const item_info& from);
  void MergeFrom(const item_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_count = 1;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 1;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);

  // optional uint32 activity_type = 2;
  inline bool has_activity_type() const;
  inline void clear_activity_type();
  static const int kActivityTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 activity_type() const;
  inline void set_activity_type(::google::protobuf::uint32 value);

  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.item_info)
 private:
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_activity_type();
  inline void clear_has_activity_type();
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 item_count_;
  ::google::protobuf::uint32 activity_type_;
  ::google::protobuf::uint32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static item_info* default_instance_;
};
// -------------------------------------------------------------------

class value_info : public ::google::protobuf::Message {
 public:
  value_info();
  virtual ~value_info();

  value_info(const value_info& from);

  inline value_info& operator=(const value_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const value_info& default_instance();

  void Swap(value_info* other);

  // implements Message ----------------------------------------------

  value_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const value_info& from);
  void MergeFrom(const value_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // optional uint32 old_value = 2;
  inline bool has_old_value() const;
  inline void clear_old_value();
  static const int kOldValueFieldNumber = 2;
  inline ::google::protobuf::uint32 old_value() const;
  inline void set_old_value(::google::protobuf::uint32 value);

  // optional uint32 new_value = 3;
  inline bool has_new_value() const;
  inline void clear_new_value();
  static const int kNewValueFieldNumber = 3;
  inline ::google::protobuf::uint32 new_value() const;
  inline void set_new_value(::google::protobuf::uint32 value);

  // optional uint32 limit_type = 4;
  inline bool has_limit_type() const;
  inline void clear_limit_type();
  static const int kLimitTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 limit_type() const;
  inline void set_limit_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.value_info)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_old_value();
  inline void clear_has_old_value();
  inline void set_has_new_value();
  inline void clear_has_new_value();
  inline void set_has_limit_type();
  inline void clear_has_limit_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 old_value_;
  ::google::protobuf::uint32 new_value_;
  ::google::protobuf::uint32 limit_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static value_info* default_instance_;
};
// -------------------------------------------------------------------

class reward_flag : public ::google::protobuf::Message {
 public:
  reward_flag();
  virtual ~reward_flag();

  reward_flag(const reward_flag& from);

  inline reward_flag& operator=(const reward_flag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const reward_flag& default_instance();

  void Swap(reward_flag* other);

  // implements Message ----------------------------------------------

  reward_flag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const reward_flag& from);
  void MergeFrom(const reward_flag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // optional uint32 rflag = 2;
  inline bool has_rflag() const;
  inline void clear_rflag();
  static const int kRflagFieldNumber = 2;
  inline ::google::protobuf::uint32 rflag() const;
  inline void set_rflag(::google::protobuf::uint32 value);

  // optional uint32 activity_type = 3;
  inline bool has_activity_type() const;
  inline void clear_activity_type();
  static const int kActivityTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 activity_type() const;
  inline void set_activity_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.reward_flag)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_rflag();
  inline void clear_has_rflag();
  inline void set_has_activity_type();
  inline void clear_has_activity_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 rflag_;
  ::google::protobuf::uint32 activity_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static reward_flag* default_instance_;
};
// -------------------------------------------------------------------

class act_db_info : public ::google::protobuf::Message {
 public:
  act_db_info();
  virtual ~act_db_info();

  act_db_info(const act_db_info& from);

  inline act_db_info& operator=(const act_db_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const act_db_info& default_instance();

  void Swap(act_db_info* other);

  // implements Message ----------------------------------------------

  act_db_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const act_db_info& from);
  void MergeFrom(const act_db_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.item_info center_item = 1;
  inline int center_item_size() const;
  inline void clear_center_item();
  static const int kCenterItemFieldNumber = 1;
  inline const ::client::item_info& center_item(int index) const;
  inline ::client::item_info* mutable_center_item(int index);
  inline ::client::item_info* add_center_item();
  inline const ::google::protobuf::RepeatedPtrField< ::client::item_info >&
      center_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::item_info >*
      mutable_center_item();

  // repeated .client.reward_flag flag_info = 2;
  inline int flag_info_size() const;
  inline void clear_flag_info();
  static const int kFlagInfoFieldNumber = 2;
  inline const ::client::reward_flag& flag_info(int index) const;
  inline ::client::reward_flag* mutable_flag_info(int index);
  inline ::client::reward_flag* add_flag_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::reward_flag >&
      flag_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::reward_flag >*
      mutable_flag_info();

  // repeated .client.item_info person_item = 3;
  inline int person_item_size() const;
  inline void clear_person_item();
  static const int kPersonItemFieldNumber = 3;
  inline const ::client::item_info& person_item(int index) const;
  inline ::client::item_info* mutable_person_item(int index);
  inline ::client::item_info* add_person_item();
  inline const ::google::protobuf::RepeatedPtrField< ::client::item_info >&
      person_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::item_info >*
      mutable_person_item();

  // repeated .client.value_info values_info = 4;
  inline int values_info_size() const;
  inline void clear_values_info();
  static const int kValuesInfoFieldNumber = 4;
  inline const ::client::value_info& values_info(int index) const;
  inline ::client::value_info* mutable_values_info(int index);
  inline ::client::value_info* add_values_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::value_info >&
      values_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::value_info >*
      mutable_values_info();

  // optional uint32 reward_flag = 5;
  inline bool has_reward_flag() const;
  inline void clear_reward_flag();
  static const int kRewardFlagFieldNumber = 5;
  inline ::google::protobuf::uint32 reward_flag() const;
  inline void set_reward_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.act_db_info)
 private:
  inline void set_has_reward_flag();
  inline void clear_has_reward_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::item_info > center_item_;
  ::google::protobuf::RepeatedPtrField< ::client::reward_flag > flag_info_;
  ::google::protobuf::RepeatedPtrField< ::client::item_info > person_item_;
  ::google::protobuf::RepeatedPtrField< ::client::value_info > values_info_;
  ::google::protobuf::uint32 reward_flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static act_db_info* default_instance_;
};
// -------------------------------------------------------------------

class act_open_info : public ::google::protobuf::Message {
 public:
  act_open_info();
  virtual ~act_open_info();

  act_open_info(const act_open_info& from);

  inline act_open_info& operator=(const act_open_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const act_open_info& default_instance();

  void Swap(act_open_info* other);

  // implements Message ----------------------------------------------

  act_open_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const act_open_info& from);
  void MergeFrom(const act_open_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required bool is_activity = 2;
  inline bool has_is_activity() const;
  inline void clear_is_activity();
  static const int kIsActivityFieldNumber = 2;
  inline bool is_activity() const;
  inline void set_is_activity(bool value);

  // optional uint32 remain_time = 3;
  inline bool has_remain_time() const;
  inline void clear_remain_time();
  static const int kRemainTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 remain_time() const;
  inline void set_remain_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.act_open_info)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_is_activity();
  inline void clear_has_is_activity();
  inline void set_has_remain_time();
  inline void clear_has_remain_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  bool is_activity_;
  ::google::protobuf::uint32 remain_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static act_open_info* default_instance_;
};
// -------------------------------------------------------------------

class poll_activity_rsp : public ::google::protobuf::Message {
 public:
  poll_activity_rsp();
  virtual ~poll_activity_rsp();

  poll_activity_rsp(const poll_activity_rsp& from);

  inline poll_activity_rsp& operator=(const poll_activity_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const poll_activity_rsp& default_instance();

  void Swap(poll_activity_rsp* other);

  // implements Message ----------------------------------------------

  poll_activity_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const poll_activity_rsp& from);
  void MergeFrom(const poll_activity_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uixtime = 1;
  inline bool has_uixtime() const;
  inline void clear_uixtime();
  static const int kUixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 uixtime() const;
  inline void set_uixtime(::google::protobuf::uint32 value);

  // repeated .client.act_open_info info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::client::act_open_info& info(int index) const;
  inline ::client::act_open_info* mutable_info(int index);
  inline ::client::act_open_info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::act_open_info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::act_open_info >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:client.poll_activity_rsp)
 private:
  inline void set_has_uixtime();
  inline void clear_has_uixtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::act_open_info > info_;
  ::google::protobuf::uint32 uixtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static poll_activity_rsp* default_instance_;
};
// -------------------------------------------------------------------

class activity_info_req : public ::google::protobuf::Message {
 public:
  activity_info_req();
  virtual ~activity_info_req();

  activity_info_req(const activity_info_req& from);

  inline activity_info_req& operator=(const activity_info_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_info_req& default_instance();

  void Swap(activity_info_req* other);

  // implements Message ----------------------------------------------

  activity_info_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_info_req& from);
  void MergeFrom(const activity_info_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.activity_info_req)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 activity_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_info_req* default_instance_;
};
// -------------------------------------------------------------------

class activity_info_rsp : public ::google::protobuf::Message {
 public:
  activity_info_rsp();
  virtual ~activity_info_rsp();

  activity_info_rsp(const activity_info_rsp& from);

  inline activity_info_rsp& operator=(const activity_info_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_info_rsp& default_instance();

  void Swap(activity_info_rsp* other);

  // implements Message ----------------------------------------------

  activity_info_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_info_rsp& from);
  void MergeFrom(const activity_info_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // repeated .client.act_open_info info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::client::act_open_info& info(int index) const;
  inline ::client::act_open_info* mutable_info(int index);
  inline ::client::act_open_info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::act_open_info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::act_open_info >*
      mutable_info();

  // repeated .client.act_db_info db_info = 3;
  inline int db_info_size() const;
  inline void clear_db_info();
  static const int kDbInfoFieldNumber = 3;
  inline const ::client::act_db_info& db_info(int index) const;
  inline ::client::act_db_info* mutable_db_info(int index);
  inline ::client::act_db_info* add_db_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::act_db_info >&
      db_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::act_db_info >*
      mutable_db_info();

  // @@protoc_insertion_point(class_scope:client.activity_info_rsp)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::act_open_info > info_;
  ::google::protobuf::RepeatedPtrField< ::client::act_db_info > db_info_;
  ::google::protobuf::uint32 activity_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_info_rsp* default_instance_;
};
// -------------------------------------------------------------------

class activity_shop_req : public ::google::protobuf::Message {
 public:
  activity_shop_req();
  virtual ~activity_shop_req();

  activity_shop_req(const activity_shop_req& from);

  inline activity_shop_req& operator=(const activity_shop_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_shop_req& default_instance();

  void Swap(activity_shop_req* other);

  // implements Message ----------------------------------------------

  activity_shop_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_shop_req& from);
  void MergeFrom(const activity_shop_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // required uint32 item_count = 3;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.activity_shop_req)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 item_id_;
  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 item_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_shop_req* default_instance_;
};
// -------------------------------------------------------------------

class activity_shop_c2g : public ::google::protobuf::Message {
 public:
  activity_shop_c2g();
  virtual ~activity_shop_c2g();

  activity_shop_c2g(const activity_shop_c2g& from);

  inline activity_shop_c2g& operator=(const activity_shop_c2g& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_shop_c2g& default_instance();

  void Swap(activity_shop_c2g* other);

  // implements Message ----------------------------------------------

  activity_shop_c2g* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_shop_c2g& from);
  void MergeFrom(const activity_shop_c2g& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required uint32 activity_type = 2;
  inline bool has_activity_type() const;
  inline void clear_activity_type();
  static const int kActivityTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 activity_type() const;
  inline void set_activity_type(::google::protobuf::uint32 value);

  // required uint32 item_count = 3;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);

  // required uint32 role_id = 4;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 close_time = 5;
  inline bool has_close_time() const;
  inline void clear_close_time();
  static const int kCloseTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 close_time() const;
  inline void set_close_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.activity_shop_c2g)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_activity_type();
  inline void clear_has_activity_type();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_close_time();
  inline void clear_has_close_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 activity_type_;
  ::google::protobuf::uint32 item_count_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 close_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_shop_c2g* default_instance_;
};
// -------------------------------------------------------------------

class activity_shop_g2c : public ::google::protobuf::Message {
 public:
  activity_shop_g2c();
  virtual ~activity_shop_g2c();

  activity_shop_g2c(const activity_shop_g2c& from);

  inline activity_shop_g2c& operator=(const activity_shop_g2c& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_shop_g2c& default_instance();

  void Swap(activity_shop_g2c* other);

  // implements Message ----------------------------------------------

  activity_shop_g2c* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_shop_g2c& from);
  void MergeFrom(const activity_shop_g2c& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required uint32 activity_type = 2;
  inline bool has_activity_type() const;
  inline void clear_activity_type();
  static const int kActivityTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 activity_type() const;
  inline void set_activity_type(::google::protobuf::uint32 value);

  // required uint32 item_count = 3;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);

  // required uint32 role_id = 4;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required bool is_sucess = 5;
  inline bool has_is_sucess() const;
  inline void clear_is_sucess();
  static const int kIsSucessFieldNumber = 5;
  inline bool is_sucess() const;
  inline void set_is_sucess(bool value);

  // repeated .client.props_info pro_info = 6;
  inline int pro_info_size() const;
  inline void clear_pro_info();
  static const int kProInfoFieldNumber = 6;
  inline const ::client::props_info& pro_info(int index) const;
  inline ::client::props_info* mutable_pro_info(int index);
  inline ::client::props_info* add_pro_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::props_info >&
      pro_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::props_info >*
      mutable_pro_info();

  // @@protoc_insertion_point(class_scope:client.activity_shop_g2c)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_activity_type();
  inline void clear_has_activity_type();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_is_sucess();
  inline void clear_has_is_sucess();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 activity_type_;
  ::google::protobuf::uint32 item_count_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::RepeatedPtrField< ::client::props_info > pro_info_;
  bool is_sucess_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_shop_g2c* default_instance_;
};
// -------------------------------------------------------------------

class activity_shop_rsp : public ::google::protobuf::Message {
 public:
  activity_shop_rsp();
  virtual ~activity_shop_rsp();

  activity_shop_rsp(const activity_shop_rsp& from);

  inline activity_shop_rsp& operator=(const activity_shop_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_shop_rsp& default_instance();

  void Swap(activity_shop_rsp* other);

  // implements Message ----------------------------------------------

  activity_shop_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_shop_rsp& from);
  void MergeFrom(const activity_shop_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result_type = 1;
  inline bool has_result_type() const;
  inline void clear_result_type();
  static const int kResultTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 result_type() const;
  inline void set_result_type(::google::protobuf::uint32 value);

  // repeated .client.act_db_info db_info = 2;
  inline int db_info_size() const;
  inline void clear_db_info();
  static const int kDbInfoFieldNumber = 2;
  inline const ::client::act_db_info& db_info(int index) const;
  inline ::client::act_db_info* mutable_db_info(int index);
  inline ::client::act_db_info* add_db_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::act_db_info >&
      db_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::act_db_info >*
      mutable_db_info();

  // repeated .client.props_info pro_info = 3;
  inline int pro_info_size() const;
  inline void clear_pro_info();
  static const int kProInfoFieldNumber = 3;
  inline const ::client::props_info& pro_info(int index) const;
  inline ::client::props_info* mutable_pro_info(int index);
  inline ::client::props_info* add_pro_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::props_info >&
      pro_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::props_info >*
      mutable_pro_info();

  // @@protoc_insertion_point(class_scope:client.activity_shop_rsp)
 private:
  inline void set_has_result_type();
  inline void clear_has_result_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::act_db_info > db_info_;
  ::google::protobuf::RepeatedPtrField< ::client::props_info > pro_info_;
  ::google::protobuf::uint32 result_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_shop_rsp* default_instance_;
};
// -------------------------------------------------------------------

class activity_reward_req : public ::google::protobuf::Message {
 public:
  activity_reward_req();
  virtual ~activity_reward_req();

  activity_reward_req(const activity_reward_req& from);

  inline activity_reward_req& operator=(const activity_reward_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_reward_req& default_instance();

  void Swap(activity_reward_req* other);

  // implements Message ----------------------------------------------

  activity_reward_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_reward_req& from);
  void MergeFrom(const activity_reward_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required uint32 activity_type = 2;
  inline bool has_activity_type() const;
  inline void clear_activity_type();
  static const int kActivityTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 activity_type() const;
  inline void set_activity_type(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.activity_reward_req)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_activity_type();
  inline void clear_has_activity_type();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 activity_type_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_reward_req* default_instance_;
};
// -------------------------------------------------------------------

class activity_reward_c2g : public ::google::protobuf::Message {
 public:
  activity_reward_c2g();
  virtual ~activity_reward_c2g();

  activity_reward_c2g(const activity_reward_c2g& from);

  inline activity_reward_c2g& operator=(const activity_reward_c2g& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_reward_c2g& default_instance();

  void Swap(activity_reward_c2g* other);

  // implements Message ----------------------------------------------

  activity_reward_c2g* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_reward_c2g& from);
  void MergeFrom(const activity_reward_c2g& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required uint32 activity_type = 2;
  inline bool has_activity_type() const;
  inline void clear_activity_type();
  static const int kActivityTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 activity_type() const;
  inline void set_activity_type(::google::protobuf::uint32 value);

  // required uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 close_time = 4;
  inline bool has_close_time() const;
  inline void clear_close_time();
  static const int kCloseTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 close_time() const;
  inline void set_close_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.activity_reward_c2g)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_activity_type();
  inline void clear_has_activity_type();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_close_time();
  inline void clear_has_close_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 activity_type_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 close_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_reward_c2g* default_instance_;
};
// -------------------------------------------------------------------

class activity_reward_g2c : public ::google::protobuf::Message {
 public:
  activity_reward_g2c();
  virtual ~activity_reward_g2c();

  activity_reward_g2c(const activity_reward_g2c& from);

  inline activity_reward_g2c& operator=(const activity_reward_g2c& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_reward_g2c& default_instance();

  void Swap(activity_reward_g2c* other);

  // implements Message ----------------------------------------------

  activity_reward_g2c* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_reward_g2c& from);
  void MergeFrom(const activity_reward_g2c& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required uint32 activity_type = 2;
  inline bool has_activity_type() const;
  inline void clear_activity_type();
  static const int kActivityTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 activity_type() const;
  inline void set_activity_type(::google::protobuf::uint32 value);

  // required uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required bool is_success = 4;
  inline bool has_is_success() const;
  inline void clear_is_success();
  static const int kIsSuccessFieldNumber = 4;
  inline bool is_success() const;
  inline void set_is_success(bool value);

  // repeated .client.props_info pro_info = 5;
  inline int pro_info_size() const;
  inline void clear_pro_info();
  static const int kProInfoFieldNumber = 5;
  inline const ::client::props_info& pro_info(int index) const;
  inline ::client::props_info* mutable_pro_info(int index);
  inline ::client::props_info* add_pro_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::props_info >&
      pro_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::props_info >*
      mutable_pro_info();

  // @@protoc_insertion_point(class_scope:client.activity_reward_g2c)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_activity_type();
  inline void clear_has_activity_type();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_is_success();
  inline void clear_has_is_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 activity_type_;
  ::google::protobuf::uint32 role_id_;
  bool is_success_;
  ::google::protobuf::RepeatedPtrField< ::client::props_info > pro_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_reward_g2c* default_instance_;
};
// -------------------------------------------------------------------

class activity_reward_rsp : public ::google::protobuf::Message {
 public:
  activity_reward_rsp();
  virtual ~activity_reward_rsp();

  activity_reward_rsp(const activity_reward_rsp& from);

  inline activity_reward_rsp& operator=(const activity_reward_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_reward_rsp& default_instance();

  void Swap(activity_reward_rsp* other);

  // implements Message ----------------------------------------------

  activity_reward_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_reward_rsp& from);
  void MergeFrom(const activity_reward_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required uint32 result_type = 2;
  inline bool has_result_type() const;
  inline void clear_result_type();
  static const int kResultTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 result_type() const;
  inline void set_result_type(::google::protobuf::uint32 value);

  // required uint32 activity_type = 3;
  inline bool has_activity_type() const;
  inline void clear_activity_type();
  static const int kActivityTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 activity_type() const;
  inline void set_activity_type(::google::protobuf::uint32 value);

  // repeated .client.props_info pro_info = 4;
  inline int pro_info_size() const;
  inline void clear_pro_info();
  static const int kProInfoFieldNumber = 4;
  inline const ::client::props_info& pro_info(int index) const;
  inline ::client::props_info* mutable_pro_info(int index);
  inline ::client::props_info* add_pro_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::props_info >&
      pro_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::props_info >*
      mutable_pro_info();

  // @@protoc_insertion_point(class_scope:client.activity_reward_rsp)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_result_type();
  inline void clear_has_result_type();
  inline void set_has_activity_type();
  inline void clear_has_activity_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 result_type_;
  ::google::protobuf::RepeatedPtrField< ::client::props_info > pro_info_;
  ::google::protobuf::uint32 activity_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_reward_rsp* default_instance_;
};
// -------------------------------------------------------------------

class load_activity_list_center : public ::google::protobuf::Message {
 public:
  load_activity_list_center();
  virtual ~load_activity_list_center();

  load_activity_list_center(const load_activity_list_center& from);

  inline load_activity_list_center& operator=(const load_activity_list_center& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const load_activity_list_center& default_instance();

  void Swap(load_activity_list_center* other);

  // implements Message ----------------------------------------------

  load_activity_list_center* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const load_activity_list_center& from);
  void MergeFrom(const load_activity_list_center& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.load_activity_list_center)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static load_activity_list_center* default_instance_;
};
// -------------------------------------------------------------------

class activity_base : public ::google::protobuf::Message {
 public:
  activity_base();
  virtual ~activity_base();

  activity_base(const activity_base& from);

  inline activity_base& operator=(const activity_base& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_base& default_instance();

  void Swap(activity_base* other);

  // implements Message ----------------------------------------------

  activity_base* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_base& from);
  void MergeFrom(const activity_base& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required bool activity_status = 2;
  inline bool has_activity_status() const;
  inline void clear_activity_status();
  static const int kActivityStatusFieldNumber = 2;
  inline bool activity_status() const;
  inline void set_activity_status(bool value);

  // @@protoc_insertion_point(class_scope:client.activity_base)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_activity_status();
  inline void clear_has_activity_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  bool activity_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_base* default_instance_;
};
// -------------------------------------------------------------------

class activity_list_rsp : public ::google::protobuf::Message {
 public:
  activity_list_rsp();
  virtual ~activity_list_rsp();

  activity_list_rsp(const activity_list_rsp& from);

  inline activity_list_rsp& operator=(const activity_list_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_list_rsp& default_instance();

  void Swap(activity_list_rsp* other);

  // implements Message ----------------------------------------------

  activity_list_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_list_rsp& from);
  void MergeFrom(const activity_list_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // repeated .client.activity_base info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::client::activity_base& info(int index) const;
  inline ::client::activity_base* mutable_info(int index);
  inline ::client::activity_base* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::activity_base >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::activity_base >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:client.activity_list_rsp)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::activity_base > info_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_list_rsp* default_instance_;
};
// -------------------------------------------------------------------

class activity_his_record_c2g : public ::google::protobuf::Message {
 public:
  activity_his_record_c2g();
  virtual ~activity_his_record_c2g();

  activity_his_record_c2g(const activity_his_record_c2g& from);

  inline activity_his_record_c2g& operator=(const activity_his_record_c2g& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_his_record_c2g& default_instance();

  void Swap(activity_his_record_c2g* other);

  // implements Message ----------------------------------------------

  activity_his_record_c2g* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_his_record_c2g& from);
  void MergeFrom(const activity_his_record_c2g& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required uint32 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 limit_type = 3;
  inline bool has_limit_type() const;
  inline void clear_limit_type();
  static const int kLimitTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 limit_type() const;
  inline void set_limit_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.activity_his_record_c2g)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_limit_type();
  inline void clear_has_limit_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 limit_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_his_record_c2g* default_instance_;
};
// -------------------------------------------------------------------

class activity_his_record_g2c : public ::google::protobuf::Message {
 public:
  activity_his_record_g2c();
  virtual ~activity_his_record_g2c();

  activity_his_record_g2c(const activity_his_record_g2c& from);

  inline activity_his_record_g2c& operator=(const activity_his_record_g2c& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_his_record_g2c& default_instance();

  void Swap(activity_his_record_g2c* other);

  // implements Message ----------------------------------------------

  activity_his_record_g2c* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_his_record_g2c& from);
  void MergeFrom(const activity_his_record_g2c& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);

  // required uint32 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 limit_type = 3;
  inline bool has_limit_type() const;
  inline void clear_limit_type();
  static const int kLimitTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 limit_type() const;
  inline void set_limit_type(::google::protobuf::uint32 value);

  // optional uint32 old_value = 4;
  inline bool has_old_value() const;
  inline void clear_old_value();
  static const int kOldValueFieldNumber = 4;
  inline ::google::protobuf::uint32 old_value() const;
  inline void set_old_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.activity_his_record_g2c)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_limit_type();
  inline void clear_has_limit_type();
  inline void set_has_old_value();
  inline void clear_has_old_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 limit_type_;
  ::google::protobuf::uint32 old_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static activity_his_record_g2c* default_instance_;
};
// -------------------------------------------------------------------

class update_activity_record_g2c : public ::google::protobuf::Message {
 public:
  update_activity_record_g2c();
  virtual ~update_activity_record_g2c();

  update_activity_record_g2c(const update_activity_record_g2c& from);

  inline update_activity_record_g2c& operator=(const update_activity_record_g2c& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const update_activity_record_g2c& default_instance();

  void Swap(update_activity_record_g2c* other);

  // implements Message ----------------------------------------------

  update_activity_record_g2c* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const update_activity_record_g2c& from);
  void MergeFrom(const update_activity_record_g2c& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 limit_type = 1;
  inline bool has_limit_type() const;
  inline void clear_limit_type();
  static const int kLimitTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 limit_type() const;
  inline void set_limit_type(::google::protobuf::uint32 value);

  // required uint32 value_count = 2;
  inline bool has_value_count() const;
  inline void clear_value_count();
  static const int kValueCountFieldNumber = 2;
  inline ::google::protobuf::uint32 value_count() const;
  inline void set_value_count(::google::protobuf::uint32 value);

  // required uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.update_activity_record_g2c)
 private:
  inline void set_has_limit_type();
  inline void clear_has_limit_type();
  inline void set_has_value_count();
  inline void clear_has_value_count();
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 limit_type_;
  ::google::protobuf::uint32 value_count_;
  ::google::protobuf::uint32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_AssignDesc_client_2epoll_5factivity_2eproto();
  friend void protobuf_ShutdownFile_client_2epoll_5factivity_2eproto();

  void InitAsDefaultInstance();
  static update_activity_record_g2c* default_instance_;
};
// ===================================================================


// ===================================================================

// item_info

// optional uint32 item_count = 1;
inline bool item_info::has_item_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void item_info::set_has_item_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void item_info::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void item_info::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 item_info::item_count() const {
  return item_count_;
}
inline void item_info::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// optional uint32 activity_type = 2;
inline bool item_info::has_activity_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void item_info::set_has_activity_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void item_info::clear_has_activity_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void item_info::clear_activity_type() {
  activity_type_ = 0u;
  clear_has_activity_type();
}
inline ::google::protobuf::uint32 item_info::activity_type() const {
  return activity_type_;
}
inline void item_info::set_activity_type(::google::protobuf::uint32 value) {
  set_has_activity_type();
  activity_type_ = value;
}

// optional uint32 role_id = 3;
inline bool item_info::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void item_info::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void item_info::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void item_info::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 item_info::role_id() const {
  return role_id_;
}
inline void item_info::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// -------------------------------------------------------------------

// value_info

// optional uint32 role_id = 1;
inline bool value_info::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void value_info::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void value_info::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void value_info::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 value_info::role_id() const {
  return role_id_;
}
inline void value_info::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint32 old_value = 2;
inline bool value_info::has_old_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void value_info::set_has_old_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void value_info::clear_has_old_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void value_info::clear_old_value() {
  old_value_ = 0u;
  clear_has_old_value();
}
inline ::google::protobuf::uint32 value_info::old_value() const {
  return old_value_;
}
inline void value_info::set_old_value(::google::protobuf::uint32 value) {
  set_has_old_value();
  old_value_ = value;
}

// optional uint32 new_value = 3;
inline bool value_info::has_new_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void value_info::set_has_new_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void value_info::clear_has_new_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void value_info::clear_new_value() {
  new_value_ = 0u;
  clear_has_new_value();
}
inline ::google::protobuf::uint32 value_info::new_value() const {
  return new_value_;
}
inline void value_info::set_new_value(::google::protobuf::uint32 value) {
  set_has_new_value();
  new_value_ = value;
}

// optional uint32 limit_type = 4;
inline bool value_info::has_limit_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void value_info::set_has_limit_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void value_info::clear_has_limit_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void value_info::clear_limit_type() {
  limit_type_ = 0u;
  clear_has_limit_type();
}
inline ::google::protobuf::uint32 value_info::limit_type() const {
  return limit_type_;
}
inline void value_info::set_limit_type(::google::protobuf::uint32 value) {
  set_has_limit_type();
  limit_type_ = value;
}

// -------------------------------------------------------------------

// reward_flag

// optional uint32 role_id = 1;
inline bool reward_flag::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void reward_flag::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void reward_flag::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void reward_flag::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 reward_flag::role_id() const {
  return role_id_;
}
inline void reward_flag::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional uint32 rflag = 2;
inline bool reward_flag::has_rflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void reward_flag::set_has_rflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void reward_flag::clear_has_rflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void reward_flag::clear_rflag() {
  rflag_ = 0u;
  clear_has_rflag();
}
inline ::google::protobuf::uint32 reward_flag::rflag() const {
  return rflag_;
}
inline void reward_flag::set_rflag(::google::protobuf::uint32 value) {
  set_has_rflag();
  rflag_ = value;
}

// optional uint32 activity_type = 3;
inline bool reward_flag::has_activity_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void reward_flag::set_has_activity_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void reward_flag::clear_has_activity_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void reward_flag::clear_activity_type() {
  activity_type_ = 0u;
  clear_has_activity_type();
}
inline ::google::protobuf::uint32 reward_flag::activity_type() const {
  return activity_type_;
}
inline void reward_flag::set_activity_type(::google::protobuf::uint32 value) {
  set_has_activity_type();
  activity_type_ = value;
}

// -------------------------------------------------------------------

// act_db_info

// repeated .client.item_info center_item = 1;
inline int act_db_info::center_item_size() const {
  return center_item_.size();
}
inline void act_db_info::clear_center_item() {
  center_item_.Clear();
}
inline const ::client::item_info& act_db_info::center_item(int index) const {
  return center_item_.Get(index);
}
inline ::client::item_info* act_db_info::mutable_center_item(int index) {
  return center_item_.Mutable(index);
}
inline ::client::item_info* act_db_info::add_center_item() {
  return center_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::item_info >&
act_db_info::center_item() const {
  return center_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::item_info >*
act_db_info::mutable_center_item() {
  return &center_item_;
}

// repeated .client.reward_flag flag_info = 2;
inline int act_db_info::flag_info_size() const {
  return flag_info_.size();
}
inline void act_db_info::clear_flag_info() {
  flag_info_.Clear();
}
inline const ::client::reward_flag& act_db_info::flag_info(int index) const {
  return flag_info_.Get(index);
}
inline ::client::reward_flag* act_db_info::mutable_flag_info(int index) {
  return flag_info_.Mutable(index);
}
inline ::client::reward_flag* act_db_info::add_flag_info() {
  return flag_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::reward_flag >&
act_db_info::flag_info() const {
  return flag_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::reward_flag >*
act_db_info::mutable_flag_info() {
  return &flag_info_;
}

// repeated .client.item_info person_item = 3;
inline int act_db_info::person_item_size() const {
  return person_item_.size();
}
inline void act_db_info::clear_person_item() {
  person_item_.Clear();
}
inline const ::client::item_info& act_db_info::person_item(int index) const {
  return person_item_.Get(index);
}
inline ::client::item_info* act_db_info::mutable_person_item(int index) {
  return person_item_.Mutable(index);
}
inline ::client::item_info* act_db_info::add_person_item() {
  return person_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::item_info >&
act_db_info::person_item() const {
  return person_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::item_info >*
act_db_info::mutable_person_item() {
  return &person_item_;
}

// repeated .client.value_info values_info = 4;
inline int act_db_info::values_info_size() const {
  return values_info_.size();
}
inline void act_db_info::clear_values_info() {
  values_info_.Clear();
}
inline const ::client::value_info& act_db_info::values_info(int index) const {
  return values_info_.Get(index);
}
inline ::client::value_info* act_db_info::mutable_values_info(int index) {
  return values_info_.Mutable(index);
}
inline ::client::value_info* act_db_info::add_values_info() {
  return values_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::value_info >&
act_db_info::values_info() const {
  return values_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::value_info >*
act_db_info::mutable_values_info() {
  return &values_info_;
}

// optional uint32 reward_flag = 5;
inline bool act_db_info::has_reward_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void act_db_info::set_has_reward_flag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void act_db_info::clear_has_reward_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void act_db_info::clear_reward_flag() {
  reward_flag_ = 0u;
  clear_has_reward_flag();
}
inline ::google::protobuf::uint32 act_db_info::reward_flag() const {
  return reward_flag_;
}
inline void act_db_info::set_reward_flag(::google::protobuf::uint32 value) {
  set_has_reward_flag();
  reward_flag_ = value;
}

// -------------------------------------------------------------------

// act_open_info

// required uint32 activity_id = 1;
inline bool act_open_info::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void act_open_info::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void act_open_info::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void act_open_info::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 act_open_info::activity_id() const {
  return activity_id_;
}
inline void act_open_info::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required bool is_activity = 2;
inline bool act_open_info::has_is_activity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void act_open_info::set_has_is_activity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void act_open_info::clear_has_is_activity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void act_open_info::clear_is_activity() {
  is_activity_ = false;
  clear_has_is_activity();
}
inline bool act_open_info::is_activity() const {
  return is_activity_;
}
inline void act_open_info::set_is_activity(bool value) {
  set_has_is_activity();
  is_activity_ = value;
}

// optional uint32 remain_time = 3;
inline bool act_open_info::has_remain_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void act_open_info::set_has_remain_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void act_open_info::clear_has_remain_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void act_open_info::clear_remain_time() {
  remain_time_ = 0u;
  clear_has_remain_time();
}
inline ::google::protobuf::uint32 act_open_info::remain_time() const {
  return remain_time_;
}
inline void act_open_info::set_remain_time(::google::protobuf::uint32 value) {
  set_has_remain_time();
  remain_time_ = value;
}

// -------------------------------------------------------------------

// poll_activity_rsp

// required uint32 uixtime = 1;
inline bool poll_activity_rsp::has_uixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void poll_activity_rsp::set_has_uixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void poll_activity_rsp::clear_has_uixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void poll_activity_rsp::clear_uixtime() {
  uixtime_ = 0u;
  clear_has_uixtime();
}
inline ::google::protobuf::uint32 poll_activity_rsp::uixtime() const {
  return uixtime_;
}
inline void poll_activity_rsp::set_uixtime(::google::protobuf::uint32 value) {
  set_has_uixtime();
  uixtime_ = value;
}

// repeated .client.act_open_info info = 2;
inline int poll_activity_rsp::info_size() const {
  return info_.size();
}
inline void poll_activity_rsp::clear_info() {
  info_.Clear();
}
inline const ::client::act_open_info& poll_activity_rsp::info(int index) const {
  return info_.Get(index);
}
inline ::client::act_open_info* poll_activity_rsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::client::act_open_info* poll_activity_rsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::act_open_info >&
poll_activity_rsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::act_open_info >*
poll_activity_rsp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// activity_info_req

// required uint32 activity_id = 1;
inline bool activity_info_req::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_info_req::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_info_req::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_info_req::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_info_req::activity_id() const {
  return activity_id_;
}
inline void activity_info_req::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool activity_info_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_info_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_info_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_info_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& activity_info_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* activity_info_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* activity_info_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void activity_info_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// activity_info_rsp

// required uint32 activity_id = 1;
inline bool activity_info_rsp::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_info_rsp::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_info_rsp::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_info_rsp::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_info_rsp::activity_id() const {
  return activity_id_;
}
inline void activity_info_rsp::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// repeated .client.act_open_info info = 2;
inline int activity_info_rsp::info_size() const {
  return info_.size();
}
inline void activity_info_rsp::clear_info() {
  info_.Clear();
}
inline const ::client::act_open_info& activity_info_rsp::info(int index) const {
  return info_.Get(index);
}
inline ::client::act_open_info* activity_info_rsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::client::act_open_info* activity_info_rsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::act_open_info >&
activity_info_rsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::act_open_info >*
activity_info_rsp::mutable_info() {
  return &info_;
}

// repeated .client.act_db_info db_info = 3;
inline int activity_info_rsp::db_info_size() const {
  return db_info_.size();
}
inline void activity_info_rsp::clear_db_info() {
  db_info_.Clear();
}
inline const ::client::act_db_info& activity_info_rsp::db_info(int index) const {
  return db_info_.Get(index);
}
inline ::client::act_db_info* activity_info_rsp::mutable_db_info(int index) {
  return db_info_.Mutable(index);
}
inline ::client::act_db_info* activity_info_rsp::add_db_info() {
  return db_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::act_db_info >&
activity_info_rsp::db_info() const {
  return db_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::act_db_info >*
activity_info_rsp::mutable_db_info() {
  return &db_info_;
}

// -------------------------------------------------------------------

// activity_shop_req

// required uint32 activity_id = 1;
inline bool activity_shop_req::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_shop_req::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_shop_req::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_shop_req::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_shop_req::activity_id() const {
  return activity_id_;
}
inline void activity_shop_req::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 item_id = 2;
inline bool activity_shop_req::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_shop_req::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_shop_req::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_shop_req::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 activity_shop_req::item_id() const {
  return item_id_;
}
inline void activity_shop_req::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_count = 3;
inline bool activity_shop_req::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_shop_req::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_shop_req::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_shop_req::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 activity_shop_req::item_count() const {
  return item_count_;
}
inline void activity_shop_req::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool activity_shop_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_shop_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_shop_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_shop_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& activity_shop_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* activity_shop_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* activity_shop_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void activity_shop_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// activity_shop_c2g

// required uint32 activity_id = 1;
inline bool activity_shop_c2g::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_shop_c2g::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_shop_c2g::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_shop_c2g::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_shop_c2g::activity_id() const {
  return activity_id_;
}
inline void activity_shop_c2g::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 activity_type = 2;
inline bool activity_shop_c2g::has_activity_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_shop_c2g::set_has_activity_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_shop_c2g::clear_has_activity_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_shop_c2g::clear_activity_type() {
  activity_type_ = 0u;
  clear_has_activity_type();
}
inline ::google::protobuf::uint32 activity_shop_c2g::activity_type() const {
  return activity_type_;
}
inline void activity_shop_c2g::set_activity_type(::google::protobuf::uint32 value) {
  set_has_activity_type();
  activity_type_ = value;
}

// required uint32 item_count = 3;
inline bool activity_shop_c2g::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_shop_c2g::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_shop_c2g::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_shop_c2g::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 activity_shop_c2g::item_count() const {
  return item_count_;
}
inline void activity_shop_c2g::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// required uint32 role_id = 4;
inline bool activity_shop_c2g::has_role_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_shop_c2g::set_has_role_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_shop_c2g::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_shop_c2g::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 activity_shop_c2g::role_id() const {
  return role_id_;
}
inline void activity_shop_c2g::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 close_time = 5;
inline bool activity_shop_c2g::has_close_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void activity_shop_c2g::set_has_close_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void activity_shop_c2g::clear_has_close_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void activity_shop_c2g::clear_close_time() {
  close_time_ = 0u;
  clear_has_close_time();
}
inline ::google::protobuf::uint32 activity_shop_c2g::close_time() const {
  return close_time_;
}
inline void activity_shop_c2g::set_close_time(::google::protobuf::uint32 value) {
  set_has_close_time();
  close_time_ = value;
}

// -------------------------------------------------------------------

// activity_shop_g2c

// required uint32 activity_id = 1;
inline bool activity_shop_g2c::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_shop_g2c::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_shop_g2c::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_shop_g2c::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_shop_g2c::activity_id() const {
  return activity_id_;
}
inline void activity_shop_g2c::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 activity_type = 2;
inline bool activity_shop_g2c::has_activity_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_shop_g2c::set_has_activity_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_shop_g2c::clear_has_activity_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_shop_g2c::clear_activity_type() {
  activity_type_ = 0u;
  clear_has_activity_type();
}
inline ::google::protobuf::uint32 activity_shop_g2c::activity_type() const {
  return activity_type_;
}
inline void activity_shop_g2c::set_activity_type(::google::protobuf::uint32 value) {
  set_has_activity_type();
  activity_type_ = value;
}

// required uint32 item_count = 3;
inline bool activity_shop_g2c::has_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_shop_g2c::set_has_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_shop_g2c::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_shop_g2c::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 activity_shop_g2c::item_count() const {
  return item_count_;
}
inline void activity_shop_g2c::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
}

// required uint32 role_id = 4;
inline bool activity_shop_g2c::has_role_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_shop_g2c::set_has_role_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_shop_g2c::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_shop_g2c::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 activity_shop_g2c::role_id() const {
  return role_id_;
}
inline void activity_shop_g2c::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required bool is_sucess = 5;
inline bool activity_shop_g2c::has_is_sucess() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void activity_shop_g2c::set_has_is_sucess() {
  _has_bits_[0] |= 0x00000010u;
}
inline void activity_shop_g2c::clear_has_is_sucess() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void activity_shop_g2c::clear_is_sucess() {
  is_sucess_ = false;
  clear_has_is_sucess();
}
inline bool activity_shop_g2c::is_sucess() const {
  return is_sucess_;
}
inline void activity_shop_g2c::set_is_sucess(bool value) {
  set_has_is_sucess();
  is_sucess_ = value;
}

// repeated .client.props_info pro_info = 6;
inline int activity_shop_g2c::pro_info_size() const {
  return pro_info_.size();
}
inline void activity_shop_g2c::clear_pro_info() {
  pro_info_.Clear();
}
inline const ::client::props_info& activity_shop_g2c::pro_info(int index) const {
  return pro_info_.Get(index);
}
inline ::client::props_info* activity_shop_g2c::mutable_pro_info(int index) {
  return pro_info_.Mutable(index);
}
inline ::client::props_info* activity_shop_g2c::add_pro_info() {
  return pro_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::props_info >&
activity_shop_g2c::pro_info() const {
  return pro_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::props_info >*
activity_shop_g2c::mutable_pro_info() {
  return &pro_info_;
}

// -------------------------------------------------------------------

// activity_shop_rsp

// required uint32 result_type = 1;
inline bool activity_shop_rsp::has_result_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_shop_rsp::set_has_result_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_shop_rsp::clear_has_result_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_shop_rsp::clear_result_type() {
  result_type_ = 0u;
  clear_has_result_type();
}
inline ::google::protobuf::uint32 activity_shop_rsp::result_type() const {
  return result_type_;
}
inline void activity_shop_rsp::set_result_type(::google::protobuf::uint32 value) {
  set_has_result_type();
  result_type_ = value;
}

// repeated .client.act_db_info db_info = 2;
inline int activity_shop_rsp::db_info_size() const {
  return db_info_.size();
}
inline void activity_shop_rsp::clear_db_info() {
  db_info_.Clear();
}
inline const ::client::act_db_info& activity_shop_rsp::db_info(int index) const {
  return db_info_.Get(index);
}
inline ::client::act_db_info* activity_shop_rsp::mutable_db_info(int index) {
  return db_info_.Mutable(index);
}
inline ::client::act_db_info* activity_shop_rsp::add_db_info() {
  return db_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::act_db_info >&
activity_shop_rsp::db_info() const {
  return db_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::act_db_info >*
activity_shop_rsp::mutable_db_info() {
  return &db_info_;
}

// repeated .client.props_info pro_info = 3;
inline int activity_shop_rsp::pro_info_size() const {
  return pro_info_.size();
}
inline void activity_shop_rsp::clear_pro_info() {
  pro_info_.Clear();
}
inline const ::client::props_info& activity_shop_rsp::pro_info(int index) const {
  return pro_info_.Get(index);
}
inline ::client::props_info* activity_shop_rsp::mutable_pro_info(int index) {
  return pro_info_.Mutable(index);
}
inline ::client::props_info* activity_shop_rsp::add_pro_info() {
  return pro_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::props_info >&
activity_shop_rsp::pro_info() const {
  return pro_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::props_info >*
activity_shop_rsp::mutable_pro_info() {
  return &pro_info_;
}

// -------------------------------------------------------------------

// activity_reward_req

// required uint32 activity_id = 1;
inline bool activity_reward_req::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_reward_req::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_reward_req::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_reward_req::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_reward_req::activity_id() const {
  return activity_id_;
}
inline void activity_reward_req::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 activity_type = 2;
inline bool activity_reward_req::has_activity_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_reward_req::set_has_activity_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_reward_req::clear_has_activity_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_reward_req::clear_activity_type() {
  activity_type_ = 0u;
  clear_has_activity_type();
}
inline ::google::protobuf::uint32 activity_reward_req::activity_type() const {
  return activity_type_;
}
inline void activity_reward_req::set_activity_type(::google::protobuf::uint32 value) {
  set_has_activity_type();
  activity_type_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool activity_reward_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_reward_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_reward_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_reward_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& activity_reward_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* activity_reward_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* activity_reward_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void activity_reward_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// activity_reward_c2g

// required uint32 activity_id = 1;
inline bool activity_reward_c2g::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_reward_c2g::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_reward_c2g::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_reward_c2g::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_reward_c2g::activity_id() const {
  return activity_id_;
}
inline void activity_reward_c2g::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 activity_type = 2;
inline bool activity_reward_c2g::has_activity_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_reward_c2g::set_has_activity_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_reward_c2g::clear_has_activity_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_reward_c2g::clear_activity_type() {
  activity_type_ = 0u;
  clear_has_activity_type();
}
inline ::google::protobuf::uint32 activity_reward_c2g::activity_type() const {
  return activity_type_;
}
inline void activity_reward_c2g::set_activity_type(::google::protobuf::uint32 value) {
  set_has_activity_type();
  activity_type_ = value;
}

// required uint32 role_id = 3;
inline bool activity_reward_c2g::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_reward_c2g::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_reward_c2g::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_reward_c2g::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 activity_reward_c2g::role_id() const {
  return role_id_;
}
inline void activity_reward_c2g::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 close_time = 4;
inline bool activity_reward_c2g::has_close_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_reward_c2g::set_has_close_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_reward_c2g::clear_has_close_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_reward_c2g::clear_close_time() {
  close_time_ = 0u;
  clear_has_close_time();
}
inline ::google::protobuf::uint32 activity_reward_c2g::close_time() const {
  return close_time_;
}
inline void activity_reward_c2g::set_close_time(::google::protobuf::uint32 value) {
  set_has_close_time();
  close_time_ = value;
}

// -------------------------------------------------------------------

// activity_reward_g2c

// required uint32 activity_id = 1;
inline bool activity_reward_g2c::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_reward_g2c::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_reward_g2c::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_reward_g2c::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_reward_g2c::activity_id() const {
  return activity_id_;
}
inline void activity_reward_g2c::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 activity_type = 2;
inline bool activity_reward_g2c::has_activity_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_reward_g2c::set_has_activity_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_reward_g2c::clear_has_activity_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_reward_g2c::clear_activity_type() {
  activity_type_ = 0u;
  clear_has_activity_type();
}
inline ::google::protobuf::uint32 activity_reward_g2c::activity_type() const {
  return activity_type_;
}
inline void activity_reward_g2c::set_activity_type(::google::protobuf::uint32 value) {
  set_has_activity_type();
  activity_type_ = value;
}

// required uint32 role_id = 3;
inline bool activity_reward_g2c::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_reward_g2c::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_reward_g2c::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_reward_g2c::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 activity_reward_g2c::role_id() const {
  return role_id_;
}
inline void activity_reward_g2c::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required bool is_success = 4;
inline bool activity_reward_g2c::has_is_success() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_reward_g2c::set_has_is_success() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_reward_g2c::clear_has_is_success() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_reward_g2c::clear_is_success() {
  is_success_ = false;
  clear_has_is_success();
}
inline bool activity_reward_g2c::is_success() const {
  return is_success_;
}
inline void activity_reward_g2c::set_is_success(bool value) {
  set_has_is_success();
  is_success_ = value;
}

// repeated .client.props_info pro_info = 5;
inline int activity_reward_g2c::pro_info_size() const {
  return pro_info_.size();
}
inline void activity_reward_g2c::clear_pro_info() {
  pro_info_.Clear();
}
inline const ::client::props_info& activity_reward_g2c::pro_info(int index) const {
  return pro_info_.Get(index);
}
inline ::client::props_info* activity_reward_g2c::mutable_pro_info(int index) {
  return pro_info_.Mutable(index);
}
inline ::client::props_info* activity_reward_g2c::add_pro_info() {
  return pro_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::props_info >&
activity_reward_g2c::pro_info() const {
  return pro_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::props_info >*
activity_reward_g2c::mutable_pro_info() {
  return &pro_info_;
}

// -------------------------------------------------------------------

// activity_reward_rsp

// required uint32 activity_id = 1;
inline bool activity_reward_rsp::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_reward_rsp::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_reward_rsp::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_reward_rsp::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_reward_rsp::activity_id() const {
  return activity_id_;
}
inline void activity_reward_rsp::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 result_type = 2;
inline bool activity_reward_rsp::has_result_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_reward_rsp::set_has_result_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_reward_rsp::clear_has_result_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_reward_rsp::clear_result_type() {
  result_type_ = 0u;
  clear_has_result_type();
}
inline ::google::protobuf::uint32 activity_reward_rsp::result_type() const {
  return result_type_;
}
inline void activity_reward_rsp::set_result_type(::google::protobuf::uint32 value) {
  set_has_result_type();
  result_type_ = value;
}

// required uint32 activity_type = 3;
inline bool activity_reward_rsp::has_activity_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_reward_rsp::set_has_activity_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_reward_rsp::clear_has_activity_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_reward_rsp::clear_activity_type() {
  activity_type_ = 0u;
  clear_has_activity_type();
}
inline ::google::protobuf::uint32 activity_reward_rsp::activity_type() const {
  return activity_type_;
}
inline void activity_reward_rsp::set_activity_type(::google::protobuf::uint32 value) {
  set_has_activity_type();
  activity_type_ = value;
}

// repeated .client.props_info pro_info = 4;
inline int activity_reward_rsp::pro_info_size() const {
  return pro_info_.size();
}
inline void activity_reward_rsp::clear_pro_info() {
  pro_info_.Clear();
}
inline const ::client::props_info& activity_reward_rsp::pro_info(int index) const {
  return pro_info_.Get(index);
}
inline ::client::props_info* activity_reward_rsp::mutable_pro_info(int index) {
  return pro_info_.Mutable(index);
}
inline ::client::props_info* activity_reward_rsp::add_pro_info() {
  return pro_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::props_info >&
activity_reward_rsp::pro_info() const {
  return pro_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::props_info >*
activity_reward_rsp::mutable_pro_info() {
  return &pro_info_;
}

// -------------------------------------------------------------------

// load_activity_list_center

// required uint32 role_id = 1;
inline bool load_activity_list_center::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void load_activity_list_center::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void load_activity_list_center::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void load_activity_list_center::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 load_activity_list_center::role_id() const {
  return role_id_;
}
inline void load_activity_list_center::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// -------------------------------------------------------------------

// activity_base

// required uint32 activity_id = 1;
inline bool activity_base::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_base::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_base::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_base::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_base::activity_id() const {
  return activity_id_;
}
inline void activity_base::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required bool activity_status = 2;
inline bool activity_base::has_activity_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_base::set_has_activity_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_base::clear_has_activity_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_base::clear_activity_status() {
  activity_status_ = false;
  clear_has_activity_status();
}
inline bool activity_base::activity_status() const {
  return activity_status_;
}
inline void activity_base::set_activity_status(bool value) {
  set_has_activity_status();
  activity_status_ = value;
}

// -------------------------------------------------------------------

// activity_list_rsp

// required uint32 time = 1;
inline bool activity_list_rsp::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_list_rsp::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_list_rsp::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_list_rsp::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 activity_list_rsp::time() const {
  return time_;
}
inline void activity_list_rsp::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// repeated .client.activity_base info = 2;
inline int activity_list_rsp::info_size() const {
  return info_.size();
}
inline void activity_list_rsp::clear_info() {
  info_.Clear();
}
inline const ::client::activity_base& activity_list_rsp::info(int index) const {
  return info_.Get(index);
}
inline ::client::activity_base* activity_list_rsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::client::activity_base* activity_list_rsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::activity_base >&
activity_list_rsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::activity_base >*
activity_list_rsp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// activity_his_record_c2g

// required uint32 activity_id = 1;
inline bool activity_his_record_c2g::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_his_record_c2g::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_his_record_c2g::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_his_record_c2g::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_his_record_c2g::activity_id() const {
  return activity_id_;
}
inline void activity_his_record_c2g::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 role_id = 2;
inline bool activity_his_record_c2g::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_his_record_c2g::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_his_record_c2g::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_his_record_c2g::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 activity_his_record_c2g::role_id() const {
  return role_id_;
}
inline void activity_his_record_c2g::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 limit_type = 3;
inline bool activity_his_record_c2g::has_limit_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_his_record_c2g::set_has_limit_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_his_record_c2g::clear_has_limit_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_his_record_c2g::clear_limit_type() {
  limit_type_ = 0u;
  clear_has_limit_type();
}
inline ::google::protobuf::uint32 activity_his_record_c2g::limit_type() const {
  return limit_type_;
}
inline void activity_his_record_c2g::set_limit_type(::google::protobuf::uint32 value) {
  set_has_limit_type();
  limit_type_ = value;
}

// -------------------------------------------------------------------

// activity_his_record_g2c

// required uint32 activity_id = 1;
inline bool activity_his_record_g2c::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_his_record_g2c::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_his_record_g2c::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_his_record_g2c::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 activity_his_record_g2c::activity_id() const {
  return activity_id_;
}
inline void activity_his_record_g2c::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required uint32 role_id = 2;
inline bool activity_his_record_g2c::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_his_record_g2c::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_his_record_g2c::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_his_record_g2c::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 activity_his_record_g2c::role_id() const {
  return role_id_;
}
inline void activity_his_record_g2c::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 limit_type = 3;
inline bool activity_his_record_g2c::has_limit_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_his_record_g2c::set_has_limit_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_his_record_g2c::clear_has_limit_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_his_record_g2c::clear_limit_type() {
  limit_type_ = 0u;
  clear_has_limit_type();
}
inline ::google::protobuf::uint32 activity_his_record_g2c::limit_type() const {
  return limit_type_;
}
inline void activity_his_record_g2c::set_limit_type(::google::protobuf::uint32 value) {
  set_has_limit_type();
  limit_type_ = value;
}

// optional uint32 old_value = 4;
inline bool activity_his_record_g2c::has_old_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_his_record_g2c::set_has_old_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_his_record_g2c::clear_has_old_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_his_record_g2c::clear_old_value() {
  old_value_ = 0u;
  clear_has_old_value();
}
inline ::google::protobuf::uint32 activity_his_record_g2c::old_value() const {
  return old_value_;
}
inline void activity_his_record_g2c::set_old_value(::google::protobuf::uint32 value) {
  set_has_old_value();
  old_value_ = value;
}

// -------------------------------------------------------------------

// update_activity_record_g2c

// required uint32 limit_type = 1;
inline bool update_activity_record_g2c::has_limit_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void update_activity_record_g2c::set_has_limit_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void update_activity_record_g2c::clear_has_limit_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void update_activity_record_g2c::clear_limit_type() {
  limit_type_ = 0u;
  clear_has_limit_type();
}
inline ::google::protobuf::uint32 update_activity_record_g2c::limit_type() const {
  return limit_type_;
}
inline void update_activity_record_g2c::set_limit_type(::google::protobuf::uint32 value) {
  set_has_limit_type();
  limit_type_ = value;
}

// required uint32 value_count = 2;
inline bool update_activity_record_g2c::has_value_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void update_activity_record_g2c::set_has_value_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void update_activity_record_g2c::clear_has_value_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void update_activity_record_g2c::clear_value_count() {
  value_count_ = 0u;
  clear_has_value_count();
}
inline ::google::protobuf::uint32 update_activity_record_g2c::value_count() const {
  return value_count_;
}
inline void update_activity_record_g2c::set_value_count(::google::protobuf::uint32 value) {
  set_has_value_count();
  value_count_ = value;
}

// required uint32 role_id = 3;
inline bool update_activity_record_g2c::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void update_activity_record_g2c::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void update_activity_record_g2c::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void update_activity_record_g2c::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 update_activity_record_g2c::role_id() const {
  return role_id_;
}
inline void update_activity_record_g2c::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::ACTIVITY_OPEN_TYPE_E>() {
  return ::client::ACTIVITY_OPEN_TYPE_E_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::BACKGROUND_ACTIVITY_OPEN_TYPE>() {
  return ::client::BACKGROUND_ACTIVITY_OPEN_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::REWARD_TYPE>() {
  return ::client::REWARD_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2epoll_5factivity_2eproto__INCLUDED
