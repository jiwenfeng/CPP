// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.open.proto

#ifndef PROTOBUF_client_2eopen_2eproto__INCLUDED
#define PROTOBUF_client_2eopen_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2eopen_2eproto();
void protobuf_AssignDesc_client_2eopen_2eproto();
void protobuf_ShutdownFile_client_2eopen_2eproto();

class open_info;
class open_msg;
class open_func_req;

enum open_msg_type {
  open_msg_type_now = 1,
  open_msg_type_add = 2
};
bool open_msg_type_IsValid(int value);
const open_msg_type open_msg_type_type_MIN = open_msg_type_now;
const open_msg_type open_msg_type_type_MAX = open_msg_type_add;
const int open_msg_type_type_ARRAYSIZE = open_msg_type_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* open_msg_type_descriptor();
inline const ::std::string& open_msg_type_Name(open_msg_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    open_msg_type_descriptor(), value);
}
inline bool open_msg_type_Parse(
    const ::std::string& name, open_msg_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<open_msg_type>(
    open_msg_type_descriptor(), name, value);
}
// ===================================================================

class open_info : public ::google::protobuf::Message {
 public:
  open_info();
  virtual ~open_info();

  open_info(const open_info& from);

  inline open_info& operator=(const open_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_info& default_instance();

  void Swap(open_info* other);

  // implements Message ----------------------------------------------

  open_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const open_info& from);
  void MergeFrom(const open_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.open_info)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eopen_2eproto();
  friend void protobuf_AssignDesc_client_2eopen_2eproto();
  friend void protobuf_ShutdownFile_client_2eopen_2eproto();

  void InitAsDefaultInstance();
  static open_info* default_instance_;
};
// -------------------------------------------------------------------

class open_msg : public ::google::protobuf::Message {
 public:
  open_msg();
  virtual ~open_msg();

  open_msg(const open_msg& from);

  inline open_msg& operator=(const open_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_msg& default_instance();

  void Swap(open_msg* other);

  // implements Message ----------------------------------------------

  open_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const open_msg& from);
  void MergeFrom(const open_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef open_msg_type type;
  static const type now = open_msg_type_now;
  static const type add = open_msg_type_add;
  static inline bool type_IsValid(int value) {
    return open_msg_type_IsValid(value);
  }
  static const type type_MIN =
    open_msg_type_type_MIN;
  static const type type_MAX =
    open_msg_type_type_MAX;
  static const int type_ARRAYSIZE =
    open_msg_type_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  type_descriptor() {
    return open_msg_type_descriptor();
  }
  static inline const ::std::string& type_Name(type value) {
    return open_msg_type_Name(value);
  }
  static inline bool type_Parse(const ::std::string& name,
      type* value) {
    return open_msg_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client.open_msg.type t = 1;
  inline bool has_t() const;
  inline void clear_t();
  static const int kTFieldNumber = 1;
  inline ::client::open_msg_type t() const;
  inline void set_t(::client::open_msg_type value);

  // repeated .client.open_info id = 2;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::client::open_info& id(int index) const;
  inline ::client::open_info* mutable_id(int index);
  inline ::client::open_info* add_id();
  inline const ::google::protobuf::RepeatedPtrField< ::client::open_info >&
      id() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::open_info >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:client.open_msg)
 private:
  inline void set_has_t();
  inline void clear_has_t();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::open_info > id_;
  int t_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eopen_2eproto();
  friend void protobuf_AssignDesc_client_2eopen_2eproto();
  friend void protobuf_ShutdownFile_client_2eopen_2eproto();

  void InitAsDefaultInstance();
  static open_msg* default_instance_;
};
// -------------------------------------------------------------------

class open_func_req : public ::google::protobuf::Message {
 public:
  open_func_req();
  virtual ~open_func_req();

  open_func_req(const open_func_req& from);

  inline open_func_req& operator=(const open_func_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_func_req& default_instance();

  void Swap(open_func_req* other);

  // implements Message ----------------------------------------------

  open_func_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const open_func_req& from);
  void MergeFrom(const open_func_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // repeated .client.open_info id = 2;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::client::open_info& id(int index) const;
  inline ::client::open_info* mutable_id(int index);
  inline ::client::open_info* add_id();
  inline const ::google::protobuf::RepeatedPtrField< ::client::open_info >&
      id() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::open_info >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:client.open_func_req)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::open_info > id_;
  ::google::protobuf::uint32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eopen_2eproto();
  friend void protobuf_AssignDesc_client_2eopen_2eproto();
  friend void protobuf_ShutdownFile_client_2eopen_2eproto();

  void InitAsDefaultInstance();
  static open_func_req* default_instance_;
};
// ===================================================================


// ===================================================================

// open_info

// required uint32 id = 1;
inline bool open_info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_info::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 open_info::id() const {
  return id_;
}
inline void open_info::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// open_msg

// required .client.open_msg.type t = 1;
inline bool open_msg::has_t() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_msg::set_has_t() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_msg::clear_has_t() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_msg::clear_t() {
  t_ = 1;
  clear_has_t();
}
inline ::client::open_msg_type open_msg::t() const {
  return static_cast< ::client::open_msg_type >(t_);
}
inline void open_msg::set_t(::client::open_msg_type value) {
  assert(::client::open_msg_type_IsValid(value));
  set_has_t();
  t_ = value;
}

// repeated .client.open_info id = 2;
inline int open_msg::id_size() const {
  return id_.size();
}
inline void open_msg::clear_id() {
  id_.Clear();
}
inline const ::client::open_info& open_msg::id(int index) const {
  return id_.Get(index);
}
inline ::client::open_info* open_msg::mutable_id(int index) {
  return id_.Mutable(index);
}
inline ::client::open_info* open_msg::add_id() {
  return id_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::open_info >&
open_msg::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::open_info >*
open_msg::mutable_id() {
  return &id_;
}

// -------------------------------------------------------------------

// open_func_req

// required uint32 role_id = 1;
inline bool open_func_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_func_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_func_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_func_req::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 open_func_req::role_id() const {
  return role_id_;
}
inline void open_func_req::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// repeated .client.open_info id = 2;
inline int open_func_req::id_size() const {
  return id_.size();
}
inline void open_func_req::clear_id() {
  id_.Clear();
}
inline const ::client::open_info& open_func_req::id(int index) const {
  return id_.Get(index);
}
inline ::client::open_info* open_func_req::mutable_id(int index) {
  return id_.Mutable(index);
}
inline ::client::open_info* open_func_req::add_id() {
  return id_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::open_info >&
open_func_req::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::open_info >*
open_func_req::mutable_id() {
  return &id_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::open_msg_type>() {
  return ::client::open_msg_type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2eopen_2eproto__INCLUDED
