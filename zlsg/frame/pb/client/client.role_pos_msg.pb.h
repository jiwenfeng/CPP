// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.role_pos_msg.proto

#ifndef PROTOBUF_client_2erole_5fpos_5fmsg_2eproto__INCLUDED
#define PROTOBUF_client_2erole_5fpos_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2erole_5fpos_5fmsg_2eproto();
void protobuf_AssignDesc_client_2erole_5fpos_5fmsg_2eproto();
void protobuf_ShutdownFile_client_2erole_5fpos_5fmsg_2eproto();

class role_pos_msg;

// ===================================================================

class role_pos_msg : public ::google::protobuf::Message {
 public:
  role_pos_msg();
  virtual ~role_pos_msg();

  role_pos_msg(const role_pos_msg& from);

  inline role_pos_msg& operator=(const role_pos_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const role_pos_msg& default_instance();

  void Swap(role_pos_msg* other);

  // implements Message ----------------------------------------------

  role_pos_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const role_pos_msg& from);
  void MergeFrom(const role_pos_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);

  // required uint32 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // repeated .client.role_data rds = 3;
  inline int rds_size() const;
  inline void clear_rds();
  static const int kRdsFieldNumber = 3;
  inline const ::client::role_data& rds(int index) const;
  inline ::client::role_data* mutable_rds(int index);
  inline ::client::role_data* add_rds();
  inline const ::google::protobuf::RepeatedPtrField< ::client::role_data >&
      rds() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::role_data >*
      mutable_rds();

  // repeated .client.client_map_pos mps = 4;
  inline int mps_size() const;
  inline void clear_mps();
  static const int kMpsFieldNumber = 4;
  inline const ::client::client_map_pos& mps(int index) const;
  inline ::client::client_map_pos* mutable_mps(int index);
  inline ::client::client_map_pos* add_mps();
  inline const ::google::protobuf::RepeatedPtrField< ::client::client_map_pos >&
      mps() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::client_map_pos >*
      mutable_mps();

  // optional uint32 inst_id = 5 [default = 0];
  inline bool has_inst_id() const;
  inline void clear_inst_id();
  static const int kInstIdFieldNumber = 5;
  inline ::google::protobuf::uint32 inst_id() const;
  inline void set_inst_id(::google::protobuf::uint32 value);

  // optional uint32 type = 6 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.role_pos_msg)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_inst_id();
  inline void clear_has_inst_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 map_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::RepeatedPtrField< ::client::role_data > rds_;
  ::google::protobuf::RepeatedPtrField< ::client::client_map_pos > mps_;
  ::google::protobuf::uint32 inst_id_;
  ::google::protobuf::uint32 type_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_client_2erole_5fpos_5fmsg_2eproto();
  friend void protobuf_AssignDesc_client_2erole_5fpos_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_client_2erole_5fpos_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static role_pos_msg* default_instance_;
};
// ===================================================================


// ===================================================================

// role_pos_msg

// required uint32 map_id = 1;
inline bool role_pos_msg::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void role_pos_msg::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void role_pos_msg::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void role_pos_msg::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 role_pos_msg::map_id() const {
  return map_id_;
}
inline void role_pos_msg::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// required uint32 scene_id = 2;
inline bool role_pos_msg::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void role_pos_msg::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void role_pos_msg::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void role_pos_msg::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 role_pos_msg::scene_id() const {
  return scene_id_;
}
inline void role_pos_msg::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// repeated .client.role_data rds = 3;
inline int role_pos_msg::rds_size() const {
  return rds_.size();
}
inline void role_pos_msg::clear_rds() {
  rds_.Clear();
}
inline const ::client::role_data& role_pos_msg::rds(int index) const {
  return rds_.Get(index);
}
inline ::client::role_data* role_pos_msg::mutable_rds(int index) {
  return rds_.Mutable(index);
}
inline ::client::role_data* role_pos_msg::add_rds() {
  return rds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::role_data >&
role_pos_msg::rds() const {
  return rds_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::role_data >*
role_pos_msg::mutable_rds() {
  return &rds_;
}

// repeated .client.client_map_pos mps = 4;
inline int role_pos_msg::mps_size() const {
  return mps_.size();
}
inline void role_pos_msg::clear_mps() {
  mps_.Clear();
}
inline const ::client::client_map_pos& role_pos_msg::mps(int index) const {
  return mps_.Get(index);
}
inline ::client::client_map_pos* role_pos_msg::mutable_mps(int index) {
  return mps_.Mutable(index);
}
inline ::client::client_map_pos* role_pos_msg::add_mps() {
  return mps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::client_map_pos >&
role_pos_msg::mps() const {
  return mps_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::client_map_pos >*
role_pos_msg::mutable_mps() {
  return &mps_;
}

// optional uint32 inst_id = 5 [default = 0];
inline bool role_pos_msg::has_inst_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void role_pos_msg::set_has_inst_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void role_pos_msg::clear_has_inst_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void role_pos_msg::clear_inst_id() {
  inst_id_ = 0u;
  clear_has_inst_id();
}
inline ::google::protobuf::uint32 role_pos_msg::inst_id() const {
  return inst_id_;
}
inline void role_pos_msg::set_inst_id(::google::protobuf::uint32 value) {
  set_has_inst_id();
  inst_id_ = value;
}

// optional uint32 type = 6 [default = 0];
inline bool role_pos_msg::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void role_pos_msg::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void role_pos_msg::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void role_pos_msg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 role_pos_msg::type() const {
  return type_;
}
inline void role_pos_msg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool role_pos_msg::has_svr_head() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void role_pos_msg::set_has_svr_head() {
  _has_bits_[0] |= 0x00000040u;
}
inline void role_pos_msg::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void role_pos_msg::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& role_pos_msg::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* role_pos_msg::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* role_pos_msg::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void role_pos_msg::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2erole_5fpos_5fmsg_2eproto__INCLUDED
