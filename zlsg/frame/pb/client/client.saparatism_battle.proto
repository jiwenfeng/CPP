import "client.comm.proto";
package client;

enum SA_BATTLE_OPERATE_RET_E{
    SBORE_SUCCESS            = 0;   // 战场操作成功
	SBORE_TIME_LIMIT         = 1;   // 战场时间限制
	SBORE_ROLE_NUM_LIMIT     = 2;   // 人数上限
	SBORE_BATTLE_LIMIT       = 3;   // 没有多余的战场
	SBORE_LEVEL_LIMIT        = 4;   // 等级限制
	SBORE_ACTIVITY_OCCUPTION = 5;   // 活动占领限制

	SBORE_SYS_ERR        = 999; // 服务器系统错误
}

//请求进入割据战场
message sa_battle_enter_req {
    required uint32 time = 1; // 当前客户端拿到服务器的unixtime
	required uint32 id = 2;   // 战场ID 
	
	optional server_head svr_head = 1000; // 服务端填写项，客户端不需要关心也不必填写数据 
}

//验证信息
message sa_battle_enter_check{
	required sa_battle_enter_req sber = 1; // 请求验证包
}

// 请求进入割据战场结果
message sa_battle_enter_rsp {
    required SA_BATTLE_OPERATE_RET_E ret = 1; // 请求进入战场结果
}

message sa_self_condition_info{
	required uint32 benifit_multipe = 1;  //几倍受益区间
	required uint32 benifit_radix   = 2;  //受益的基数
	required uint32 total_get_exp   = 3;  //总共活得的经验
	required uint32 total_stop_time = 4;  //割据地图停留的时间
}


//攻城军情
message sa_capture_condition_ntf{
	required client_map_pos flag_pos = 1;        //旗子坐标
	required string occuption_name = 2;	         //当前割据占领者名字
	required string family_name =3;				 //军团的名字
	required uint32 family_flag_id = 4;          //军团旗帜ID（可以用于旗帜信息的刷新）
	required uint32 occuption_time = 5;           //已经占领时间
	required sa_self_condition_info selfinfo = 6; //自己的军情信息
}

enum SA_FLAG_OPERATOR_RET{
	SFOR_SUCCESS = 0;  //夺旗成功
	SFOR_TIME_LIMIT = 1; //时间限制
	SFOR_FAMILY_POS_LIMIT = 2; //军团职位限制
	SFOR_FLAG_POS_LIMIT = 3; //战旗位置限制
	SFOR_FAMILY_MONEY_LIMIT = 4; //帮贡金钱限制
	SFOR_BREAK_LIMIT = 5; //死亡，移动，旗帜已经被前面的人夺走了导致的中断
	SFOR_FLAG_CAPTURING = 6; //旗子读条占领中
}

//拔旗请求
message sa_capture_flag_req{
	optional server_head svr_head = 1000; // 服务端填写项，客户端不需要关心也不必填写数据 
}

message sa_capture_flag_check{
	required sa_capture_flag_req req = 1;      //game到center的检查
}
message sa_capture_flag_rsp{
	required SA_FLAG_OPERATOR_RET ret = 1; // 拔旗结果
	optional uint32 capture_time = 2; //拔旗的时间
}

//割据副本初始化信息请求
message sa_init_data_req{
	required uint32 region_id = 1; //割据战场副本ID
}

message sa_init_data_rsp{
	required uint32 family_id = 1;  //军团ID
	required uint32 family_flag_id = 2; //军团旗帜ID
	required string family_name = 3;    //军团名字
}

//请求军团信息
message sa_query_family_info_req{
	required uint32 map_id = 1; 
	required uint32 scene_id = 2;
	required uint32 family_id = 3;  //军团ID
}

message sa_query_family_info_rsp{
	required uint32 family_flag_id = 1; //军团旗帜ID
	required string family_name = 2;    //军团名字
}

message sa_battle_personal_record {
    required uint32 role_id   = 1;       //玩家ID
	required uint32 benifit_multipe = 2; 
}