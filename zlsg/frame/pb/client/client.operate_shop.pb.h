// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.operate_shop.proto

#ifndef PROTOBUF_client_2eoperate_5fshop_2eproto__INCLUDED
#define PROTOBUF_client_2eoperate_5fshop_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
#include "client.role_props.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

class buy_goods_req;
class buy_goods_rsp;
class shop_item_list_req;
class shop_item_list_rsp;
class sell_goods_req;
class sell_goods_rsp;
class buy_mall;
class buy_mall_req;
class buy_mall_rsp;
class order_tracking_req;
class order_tracking_info;
class order_tracking_rsp;
class buy_tael_req;
class buy_tael_rsp;
class get_svr_start_time_req;
class get_svr_start_time_rsp;

enum SHOP_BUY_RET_E {
  SBRE_SUCCESS = 1,
  SBRE_NOMONEY = 2,
  SBRE_PACK_FULL = 3,
  SBRE_CANT_BUY = 4,
  SBRE_LIMIT = 5
};
bool SHOP_BUY_RET_E_IsValid(int value);
const SHOP_BUY_RET_E SHOP_BUY_RET_E_MIN = SBRE_SUCCESS;
const SHOP_BUY_RET_E SHOP_BUY_RET_E_MAX = SBRE_LIMIT;
const int SHOP_BUY_RET_E_ARRAYSIZE = SHOP_BUY_RET_E_MAX + 1;

const ::google::protobuf::EnumDescriptor* SHOP_BUY_RET_E_descriptor();
inline const ::std::string& SHOP_BUY_RET_E_Name(SHOP_BUY_RET_E value) {
  return ::google::protobuf::internal::NameOfEnum(
    SHOP_BUY_RET_E_descriptor(), value);
}
inline bool SHOP_BUY_RET_E_Parse(
    const ::std::string& name, SHOP_BUY_RET_E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SHOP_BUY_RET_E>(
    SHOP_BUY_RET_E_descriptor(), name, value);
}
enum SHOP_PAY_TYPE_E {
  SHOP_PAY_TYPE_INGOT = 1,
  SHOP_PAY_TYPE_FAMILY_CON = 2,
  SHOP_PAY_TYPE_ARENA = 3,
  SHOP_PAY_TYPE_ARMS = 4,
  SHOP_PAY_TYPE_COIN = 5
};
bool SHOP_PAY_TYPE_E_IsValid(int value);
const SHOP_PAY_TYPE_E SHOP_PAY_TYPE_E_MIN = SHOP_PAY_TYPE_INGOT;
const SHOP_PAY_TYPE_E SHOP_PAY_TYPE_E_MAX = SHOP_PAY_TYPE_COIN;
const int SHOP_PAY_TYPE_E_ARRAYSIZE = SHOP_PAY_TYPE_E_MAX + 1;

const ::google::protobuf::EnumDescriptor* SHOP_PAY_TYPE_E_descriptor();
inline const ::std::string& SHOP_PAY_TYPE_E_Name(SHOP_PAY_TYPE_E value) {
  return ::google::protobuf::internal::NameOfEnum(
    SHOP_PAY_TYPE_E_descriptor(), value);
}
inline bool SHOP_PAY_TYPE_E_Parse(
    const ::std::string& name, SHOP_PAY_TYPE_E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SHOP_PAY_TYPE_E>(
    SHOP_PAY_TYPE_E_descriptor(), name, value);
}
enum SHOP_LIMIT_TYPE_E {
  SHOP_LIMIT_TYPE_FAMILY = 1
};
bool SHOP_LIMIT_TYPE_E_IsValid(int value);
const SHOP_LIMIT_TYPE_E SHOP_LIMIT_TYPE_E_MIN = SHOP_LIMIT_TYPE_FAMILY;
const SHOP_LIMIT_TYPE_E SHOP_LIMIT_TYPE_E_MAX = SHOP_LIMIT_TYPE_FAMILY;
const int SHOP_LIMIT_TYPE_E_ARRAYSIZE = SHOP_LIMIT_TYPE_E_MAX + 1;

const ::google::protobuf::EnumDescriptor* SHOP_LIMIT_TYPE_E_descriptor();
inline const ::std::string& SHOP_LIMIT_TYPE_E_Name(SHOP_LIMIT_TYPE_E value) {
  return ::google::protobuf::internal::NameOfEnum(
    SHOP_LIMIT_TYPE_E_descriptor(), value);
}
inline bool SHOP_LIMIT_TYPE_E_Parse(
    const ::std::string& name, SHOP_LIMIT_TYPE_E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SHOP_LIMIT_TYPE_E>(
    SHOP_LIMIT_TYPE_E_descriptor(), name, value);
}
enum SHOP_SELL_RET_E {
  SSRE_SUCCESS = 1,
  SSRE_CANT_SELL = 2
};
bool SHOP_SELL_RET_E_IsValid(int value);
const SHOP_SELL_RET_E SHOP_SELL_RET_E_MIN = SSRE_SUCCESS;
const SHOP_SELL_RET_E SHOP_SELL_RET_E_MAX = SSRE_CANT_SELL;
const int SHOP_SELL_RET_E_ARRAYSIZE = SHOP_SELL_RET_E_MAX + 1;

const ::google::protobuf::EnumDescriptor* SHOP_SELL_RET_E_descriptor();
inline const ::std::string& SHOP_SELL_RET_E_Name(SHOP_SELL_RET_E value) {
  return ::google::protobuf::internal::NameOfEnum(
    SHOP_SELL_RET_E_descriptor(), value);
}
inline bool SHOP_SELL_RET_E_Parse(
    const ::std::string& name, SHOP_SELL_RET_E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SHOP_SELL_RET_E>(
    SHOP_SELL_RET_E_descriptor(), name, value);
}
// ===================================================================

class buy_goods_req : public ::google::protobuf::Message {
 public:
  buy_goods_req();
  virtual ~buy_goods_req();

  buy_goods_req(const buy_goods_req& from);

  inline buy_goods_req& operator=(const buy_goods_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buy_goods_req& default_instance();

  void Swap(buy_goods_req* other);

  // implements Message ----------------------------------------------

  buy_goods_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buy_goods_req& from);
  void MergeFrom(const buy_goods_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 shop_id = 1;
  inline bool has_shop_id() const;
  inline void clear_shop_id();
  static const int kShopIdFieldNumber = 1;
  inline ::google::protobuf::uint32 shop_id() const;
  inline void set_shop_id(::google::protobuf::uint32 value);

  // required uint32 goods_id = 2;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  inline ::google::protobuf::uint32 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint32 value);

  // required uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.buy_goods_req)
 private:
  inline void set_has_shop_id();
  inline void clear_has_shop_id();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 shop_id_;
  ::google::protobuf::uint32 goods_id_;
  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static buy_goods_req* default_instance_;
};
// -------------------------------------------------------------------

class buy_goods_rsp : public ::google::protobuf::Message {
 public:
  buy_goods_rsp();
  virtual ~buy_goods_rsp();

  buy_goods_rsp(const buy_goods_rsp& from);

  inline buy_goods_rsp& operator=(const buy_goods_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buy_goods_rsp& default_instance();

  void Swap(buy_goods_rsp* other);

  // implements Message ----------------------------------------------

  buy_goods_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buy_goods_rsp& from);
  void MergeFrom(const buy_goods_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 goods_id = 1;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint32 value);

  // required uint32 goods_count = 2;
  inline bool has_goods_count() const;
  inline void clear_goods_count();
  static const int kGoodsCountFieldNumber = 2;
  inline ::google::protobuf::uint32 goods_count() const;
  inline void set_goods_count(::google::protobuf::uint32 value);

  // required .client.SHOP_BUY_RET_E ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::client::SHOP_BUY_RET_E ret() const;
  inline void set_ret(::client::SHOP_BUY_RET_E value);

  // optional uint32 last_count = 4;
  inline bool has_last_count() const;
  inline void clear_last_count();
  static const int kLastCountFieldNumber = 4;
  inline ::google::protobuf::uint32 last_count() const;
  inline void set_last_count(::google::protobuf::uint32 value);

  // optional uint32 vip_day = 5;
  inline bool has_vip_day() const;
  inline void clear_vip_day();
  static const int kVipDayFieldNumber = 5;
  inline ::google::protobuf::uint32 vip_day() const;
  inline void set_vip_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.buy_goods_rsp)
 private:
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_goods_count();
  inline void clear_has_goods_count();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_last_count();
  inline void clear_has_last_count();
  inline void set_has_vip_day();
  inline void clear_has_vip_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 goods_id_;
  ::google::protobuf::uint32 goods_count_;
  int ret_;
  ::google::protobuf::uint32 last_count_;
  ::google::protobuf::uint32 vip_day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static buy_goods_rsp* default_instance_;
};
// -------------------------------------------------------------------

class shop_item_list_req : public ::google::protobuf::Message {
 public:
  shop_item_list_req();
  virtual ~shop_item_list_req();

  shop_item_list_req(const shop_item_list_req& from);

  inline shop_item_list_req& operator=(const shop_item_list_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const shop_item_list_req& default_instance();

  void Swap(shop_item_list_req* other);

  // implements Message ----------------------------------------------

  shop_item_list_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const shop_item_list_req& from);
  void MergeFrom(const shop_item_list_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 shop_type = 1;
  inline bool has_shop_type() const;
  inline void clear_shop_type();
  static const int kShopTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 shop_type() const;
  inline void set_shop_type(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.shop_item_list_req)
 private:
  inline void set_has_shop_type();
  inline void clear_has_shop_type();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 shop_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static shop_item_list_req* default_instance_;
};
// -------------------------------------------------------------------

class shop_item_list_rsp : public ::google::protobuf::Message {
 public:
  shop_item_list_rsp();
  virtual ~shop_item_list_rsp();

  shop_item_list_rsp(const shop_item_list_rsp& from);

  inline shop_item_list_rsp& operator=(const shop_item_list_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const shop_item_list_rsp& default_instance();

  void Swap(shop_item_list_rsp* other);

  // implements Message ----------------------------------------------

  shop_item_list_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const shop_item_list_rsp& from);
  void MergeFrom(const shop_item_list_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 shop_type = 1;
  inline bool has_shop_type() const;
  inline void clear_shop_type();
  static const int kShopTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 shop_type() const;
  inline void set_shop_type(::google::protobuf::uint32 value);

  // repeated .client.treasure_db_info info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::client::treasure_db_info& info(int index) const;
  inline ::client::treasure_db_info* mutable_info(int index);
  inline ::client::treasure_db_info* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client::treasure_db_info >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::treasure_db_info >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:client.shop_item_list_rsp)
 private:
  inline void set_has_shop_type();
  inline void clear_has_shop_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::treasure_db_info > info_;
  ::google::protobuf::uint32 shop_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static shop_item_list_rsp* default_instance_;
};
// -------------------------------------------------------------------

class sell_goods_req : public ::google::protobuf::Message {
 public:
  sell_goods_req();
  virtual ~sell_goods_req();

  sell_goods_req(const sell_goods_req& from);

  inline sell_goods_req& operator=(const sell_goods_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sell_goods_req& default_instance();

  void Swap(sell_goods_req* other);

  // implements Message ----------------------------------------------

  sell_goods_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sell_goods_req& from);
  void MergeFrom(const sell_goods_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 grid_index = 1;
  inline bool has_grid_index() const;
  inline void clear_grid_index();
  static const int kGridIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 grid_index() const;
  inline void set_grid_index(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.sell_goods_req)
 private:
  inline void set_has_grid_index();
  inline void clear_has_grid_index();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 grid_index_;
  ::google::protobuf::uint32 num_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static sell_goods_req* default_instance_;
};
// -------------------------------------------------------------------

class sell_goods_rsp : public ::google::protobuf::Message {
 public:
  sell_goods_rsp();
  virtual ~sell_goods_rsp();

  sell_goods_rsp(const sell_goods_rsp& from);

  inline sell_goods_rsp& operator=(const sell_goods_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sell_goods_rsp& default_instance();

  void Swap(sell_goods_rsp* other);

  // implements Message ----------------------------------------------

  sell_goods_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sell_goods_rsp& from);
  void MergeFrom(const sell_goods_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 grid_index = 1;
  inline bool has_grid_index() const;
  inline void clear_grid_index();
  static const int kGridIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 grid_index() const;
  inline void set_grid_index(::google::protobuf::uint32 value);

  // required .client.SHOP_SELL_RET_E ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::client::SHOP_SELL_RET_E ret() const;
  inline void set_ret(::client::SHOP_SELL_RET_E value);

  // @@protoc_insertion_point(class_scope:client.sell_goods_rsp)
 private:
  inline void set_has_grid_index();
  inline void clear_has_grid_index();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 grid_index_;
  int ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static sell_goods_rsp* default_instance_;
};
// -------------------------------------------------------------------

class buy_mall : public ::google::protobuf::Message {
 public:
  buy_mall();
  virtual ~buy_mall();

  buy_mall(const buy_mall& from);

  inline buy_mall& operator=(const buy_mall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buy_mall& default_instance();

  void Swap(buy_mall* other);

  // implements Message ----------------------------------------------

  buy_mall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buy_mall& from);
  void MergeFrom(const buy_mall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 goods_id = 1;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 is_goods_id = 3;
  inline bool has_is_goods_id() const;
  inline void clear_is_goods_id();
  static const int kIsGoodsIdFieldNumber = 3;
  inline ::google::protobuf::uint32 is_goods_id() const;
  inline void set_is_goods_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.buy_mall)
 private:
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_is_goods_id();
  inline void clear_has_is_goods_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 goods_id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 is_goods_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static buy_mall* default_instance_;
};
// -------------------------------------------------------------------

class buy_mall_req : public ::google::protobuf::Message {
 public:
  buy_mall_req();
  virtual ~buy_mall_req();

  buy_mall_req(const buy_mall_req& from);

  inline buy_mall_req& operator=(const buy_mall_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buy_mall_req& default_instance();

  void Swap(buy_mall_req* other);

  // implements Message ----------------------------------------------

  buy_mall_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buy_mall_req& from);
  void MergeFrom(const buy_mall_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.buy_mall bm = 1;
  inline int bm_size() const;
  inline void clear_bm();
  static const int kBmFieldNumber = 1;
  inline const ::client::buy_mall& bm(int index) const;
  inline ::client::buy_mall* mutable_bm(int index);
  inline ::client::buy_mall* add_bm();
  inline const ::google::protobuf::RepeatedPtrField< ::client::buy_mall >&
      bm() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::buy_mall >*
      mutable_bm();

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.buy_mall_req)
 private:
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::buy_mall > bm_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static buy_mall_req* default_instance_;
};
// -------------------------------------------------------------------

class buy_mall_rsp : public ::google::protobuf::Message {
 public:
  buy_mall_rsp();
  virtual ~buy_mall_rsp();

  buy_mall_rsp(const buy_mall_rsp& from);

  inline buy_mall_rsp& operator=(const buy_mall_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buy_mall_rsp& default_instance();

  void Swap(buy_mall_rsp* other);

  // implements Message ----------------------------------------------

  buy_mall_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buy_mall_rsp& from);
  void MergeFrom(const buy_mall_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.buy_goods_rsp ret = 1;
  inline int ret_size() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::client::buy_goods_rsp& ret(int index) const;
  inline ::client::buy_goods_rsp* mutable_ret(int index);
  inline ::client::buy_goods_rsp* add_ret();
  inline const ::google::protobuf::RepeatedPtrField< ::client::buy_goods_rsp >&
      ret() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::buy_goods_rsp >*
      mutable_ret();

  // @@protoc_insertion_point(class_scope:client.buy_mall_rsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::buy_goods_rsp > ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static buy_mall_rsp* default_instance_;
};
// -------------------------------------------------------------------

class order_tracking_req : public ::google::protobuf::Message {
 public:
  order_tracking_req();
  virtual ~order_tracking_req();

  order_tracking_req(const order_tracking_req& from);

  inline order_tracking_req& operator=(const order_tracking_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const order_tracking_req& default_instance();

  void Swap(order_tracking_req* other);

  // implements Message ----------------------------------------------

  order_tracking_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const order_tracking_req& from);
  void MergeFrom(const order_tracking_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unixtime = 1;
  inline bool has_unixtime() const;
  inline void clear_unixtime();
  static const int kUnixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 unixtime() const;
  inline void set_unixtime(::google::protobuf::uint32 value);

  // optional uint32 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.order_tracking_req)
 private:
  inline void set_has_unixtime();
  inline void clear_has_unixtime();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 unixtime_;
  ::google::protobuf::uint32 role_id_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static order_tracking_req* default_instance_;
};
// -------------------------------------------------------------------

class order_tracking_info : public ::google::protobuf::Message {
 public:
  order_tracking_info();
  virtual ~order_tracking_info();

  order_tracking_info(const order_tracking_info& from);

  inline order_tracking_info& operator=(const order_tracking_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const order_tracking_info& default_instance();

  void Swap(order_tracking_info* other);

  // implements Message ----------------------------------------------

  order_tracking_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const order_tracking_info& from);
  void MergeFrom(const order_tracking_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.order_tracking_info)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static order_tracking_info* default_instance_;
};
// -------------------------------------------------------------------

class order_tracking_rsp : public ::google::protobuf::Message {
 public:
  order_tracking_rsp();
  virtual ~order_tracking_rsp();

  order_tracking_rsp(const order_tracking_rsp& from);

  inline order_tracking_rsp& operator=(const order_tracking_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const order_tracking_rsp& default_instance();

  void Swap(order_tracking_rsp* other);

  // implements Message ----------------------------------------------

  order_tracking_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const order_tracking_rsp& from);
  void MergeFrom(const order_tracking_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // repeated .client.order_tracking_info oti = 2;
  inline int oti_size() const;
  inline void clear_oti();
  static const int kOtiFieldNumber = 2;
  inline const ::client::order_tracking_info& oti(int index) const;
  inline ::client::order_tracking_info* mutable_oti(int index);
  inline ::client::order_tracking_info* add_oti();
  inline const ::google::protobuf::RepeatedPtrField< ::client::order_tracking_info >&
      oti() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::order_tracking_info >*
      mutable_oti();

  // @@protoc_insertion_point(class_scope:client.order_tracking_rsp)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::order_tracking_info > oti_;
  ::google::protobuf::uint32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static order_tracking_rsp* default_instance_;
};
// -------------------------------------------------------------------

class buy_tael_req : public ::google::protobuf::Message {
 public:
  buy_tael_req();
  virtual ~buy_tael_req();

  buy_tael_req(const buy_tael_req& from);

  inline buy_tael_req& operator=(const buy_tael_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buy_tael_req& default_instance();

  void Swap(buy_tael_req* other);

  // implements Message ----------------------------------------------

  buy_tael_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buy_tael_req& from);
  void MergeFrom(const buy_tael_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unixtime = 1;
  inline bool has_unixtime() const;
  inline void clear_unixtime();
  static const int kUnixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 unixtime() const;
  inline void set_unixtime(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.buy_tael_req)
 private:
  inline void set_has_unixtime();
  inline void clear_has_unixtime();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 unixtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static buy_tael_req* default_instance_;
};
// -------------------------------------------------------------------

class buy_tael_rsp : public ::google::protobuf::Message {
 public:
  buy_tael_rsp();
  virtual ~buy_tael_rsp();

  buy_tael_rsp(const buy_tael_rsp& from);

  inline buy_tael_rsp& operator=(const buy_tael_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buy_tael_rsp& default_instance();

  void Swap(buy_tael_rsp* other);

  // implements Message ----------------------------------------------

  buy_tael_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buy_tael_rsp& from);
  void MergeFrom(const buy_tael_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.buy_tael_rsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static buy_tael_rsp* default_instance_;
};
// -------------------------------------------------------------------

class get_svr_start_time_req : public ::google::protobuf::Message {
 public:
  get_svr_start_time_req();
  virtual ~get_svr_start_time_req();

  get_svr_start_time_req(const get_svr_start_time_req& from);

  inline get_svr_start_time_req& operator=(const get_svr_start_time_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_svr_start_time_req& default_instance();

  void Swap(get_svr_start_time_req* other);

  // implements Message ----------------------------------------------

  get_svr_start_time_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_svr_start_time_req& from);
  void MergeFrom(const get_svr_start_time_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 svr_time = 1;
  inline bool has_svr_time() const;
  inline void clear_svr_time();
  static const int kSvrTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 svr_time() const;
  inline void set_svr_time(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.get_svr_start_time_req)
 private:
  inline void set_has_svr_time();
  inline void clear_has_svr_time();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 svr_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static get_svr_start_time_req* default_instance_;
};
// -------------------------------------------------------------------

class get_svr_start_time_rsp : public ::google::protobuf::Message {
 public:
  get_svr_start_time_rsp();
  virtual ~get_svr_start_time_rsp();

  get_svr_start_time_rsp(const get_svr_start_time_rsp& from);

  inline get_svr_start_time_rsp& operator=(const get_svr_start_time_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_svr_start_time_rsp& default_instance();

  void Swap(get_svr_start_time_rsp* other);

  // implements Message ----------------------------------------------

  get_svr_start_time_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_svr_start_time_rsp& from);
  void MergeFrom(const get_svr_start_time_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 days = 1;
  inline bool has_days() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 1;
  inline ::google::protobuf::uint32 days() const;
  inline void set_days(::google::protobuf::uint32 value);

  // required uint32 shop_discount_seconds = 2;
  inline bool has_shop_discount_seconds() const;
  inline void clear_shop_discount_seconds();
  static const int kShopDiscountSecondsFieldNumber = 2;
  inline ::google::protobuf::uint32 shop_discount_seconds() const;
  inline void set_shop_discount_seconds(::google::protobuf::uint32 value);

  // required uint32 now = 3;
  inline bool has_now() const;
  inline void clear_now();
  static const int kNowFieldNumber = 3;
  inline ::google::protobuf::uint32 now() const;
  inline void set_now(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.get_svr_start_time_rsp)
 private:
  inline void set_has_days();
  inline void clear_has_days();
  inline void set_has_shop_discount_seconds();
  inline void clear_has_shop_discount_seconds();
  inline void set_has_now();
  inline void clear_has_now();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 days_;
  ::google::protobuf::uint32 shop_discount_seconds_;
  ::google::protobuf::uint32 now_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_AssignDesc_client_2eoperate_5fshop_2eproto();
  friend void protobuf_ShutdownFile_client_2eoperate_5fshop_2eproto();

  void InitAsDefaultInstance();
  static get_svr_start_time_rsp* default_instance_;
};
// ===================================================================


// ===================================================================

// buy_goods_req

// required uint32 shop_id = 1;
inline bool buy_goods_req::has_shop_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void buy_goods_req::set_has_shop_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void buy_goods_req::clear_has_shop_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void buy_goods_req::clear_shop_id() {
  shop_id_ = 0u;
  clear_has_shop_id();
}
inline ::google::protobuf::uint32 buy_goods_req::shop_id() const {
  return shop_id_;
}
inline void buy_goods_req::set_shop_id(::google::protobuf::uint32 value) {
  set_has_shop_id();
  shop_id_ = value;
}

// required uint32 goods_id = 2;
inline bool buy_goods_req::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void buy_goods_req::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void buy_goods_req::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void buy_goods_req::clear_goods_id() {
  goods_id_ = 0u;
  clear_has_goods_id();
}
inline ::google::protobuf::uint32 buy_goods_req::goods_id() const {
  return goods_id_;
}
inline void buy_goods_req::set_goods_id(::google::protobuf::uint32 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// required uint32 num = 3;
inline bool buy_goods_req::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void buy_goods_req::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void buy_goods_req::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void buy_goods_req::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 buy_goods_req::num() const {
  return num_;
}
inline void buy_goods_req::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool buy_goods_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void buy_goods_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000008u;
}
inline void buy_goods_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void buy_goods_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& buy_goods_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* buy_goods_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* buy_goods_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void buy_goods_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// buy_goods_rsp

// required uint32 goods_id = 1;
inline bool buy_goods_rsp::has_goods_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void buy_goods_rsp::set_has_goods_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void buy_goods_rsp::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void buy_goods_rsp::clear_goods_id() {
  goods_id_ = 0u;
  clear_has_goods_id();
}
inline ::google::protobuf::uint32 buy_goods_rsp::goods_id() const {
  return goods_id_;
}
inline void buy_goods_rsp::set_goods_id(::google::protobuf::uint32 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// required uint32 goods_count = 2;
inline bool buy_goods_rsp::has_goods_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void buy_goods_rsp::set_has_goods_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void buy_goods_rsp::clear_has_goods_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void buy_goods_rsp::clear_goods_count() {
  goods_count_ = 0u;
  clear_has_goods_count();
}
inline ::google::protobuf::uint32 buy_goods_rsp::goods_count() const {
  return goods_count_;
}
inline void buy_goods_rsp::set_goods_count(::google::protobuf::uint32 value) {
  set_has_goods_count();
  goods_count_ = value;
}

// required .client.SHOP_BUY_RET_E ret = 3;
inline bool buy_goods_rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void buy_goods_rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void buy_goods_rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void buy_goods_rsp::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::client::SHOP_BUY_RET_E buy_goods_rsp::ret() const {
  return static_cast< ::client::SHOP_BUY_RET_E >(ret_);
}
inline void buy_goods_rsp::set_ret(::client::SHOP_BUY_RET_E value) {
  assert(::client::SHOP_BUY_RET_E_IsValid(value));
  set_has_ret();
  ret_ = value;
}

// optional uint32 last_count = 4;
inline bool buy_goods_rsp::has_last_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void buy_goods_rsp::set_has_last_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void buy_goods_rsp::clear_has_last_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void buy_goods_rsp::clear_last_count() {
  last_count_ = 0u;
  clear_has_last_count();
}
inline ::google::protobuf::uint32 buy_goods_rsp::last_count() const {
  return last_count_;
}
inline void buy_goods_rsp::set_last_count(::google::protobuf::uint32 value) {
  set_has_last_count();
  last_count_ = value;
}

// optional uint32 vip_day = 5;
inline bool buy_goods_rsp::has_vip_day() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void buy_goods_rsp::set_has_vip_day() {
  _has_bits_[0] |= 0x00000010u;
}
inline void buy_goods_rsp::clear_has_vip_day() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void buy_goods_rsp::clear_vip_day() {
  vip_day_ = 0u;
  clear_has_vip_day();
}
inline ::google::protobuf::uint32 buy_goods_rsp::vip_day() const {
  return vip_day_;
}
inline void buy_goods_rsp::set_vip_day(::google::protobuf::uint32 value) {
  set_has_vip_day();
  vip_day_ = value;
}

// -------------------------------------------------------------------

// shop_item_list_req

// required uint32 shop_type = 1;
inline bool shop_item_list_req::has_shop_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void shop_item_list_req::set_has_shop_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void shop_item_list_req::clear_has_shop_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void shop_item_list_req::clear_shop_type() {
  shop_type_ = 0u;
  clear_has_shop_type();
}
inline ::google::protobuf::uint32 shop_item_list_req::shop_type() const {
  return shop_type_;
}
inline void shop_item_list_req::set_shop_type(::google::protobuf::uint32 value) {
  set_has_shop_type();
  shop_type_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool shop_item_list_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void shop_item_list_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void shop_item_list_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void shop_item_list_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& shop_item_list_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* shop_item_list_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* shop_item_list_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void shop_item_list_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// shop_item_list_rsp

// required uint32 shop_type = 1;
inline bool shop_item_list_rsp::has_shop_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void shop_item_list_rsp::set_has_shop_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void shop_item_list_rsp::clear_has_shop_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void shop_item_list_rsp::clear_shop_type() {
  shop_type_ = 0u;
  clear_has_shop_type();
}
inline ::google::protobuf::uint32 shop_item_list_rsp::shop_type() const {
  return shop_type_;
}
inline void shop_item_list_rsp::set_shop_type(::google::protobuf::uint32 value) {
  set_has_shop_type();
  shop_type_ = value;
}

// repeated .client.treasure_db_info info = 2;
inline int shop_item_list_rsp::info_size() const {
  return info_.size();
}
inline void shop_item_list_rsp::clear_info() {
  info_.Clear();
}
inline const ::client::treasure_db_info& shop_item_list_rsp::info(int index) const {
  return info_.Get(index);
}
inline ::client::treasure_db_info* shop_item_list_rsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::client::treasure_db_info* shop_item_list_rsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::treasure_db_info >&
shop_item_list_rsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::treasure_db_info >*
shop_item_list_rsp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// sell_goods_req

// required uint32 grid_index = 1;
inline bool sell_goods_req::has_grid_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sell_goods_req::set_has_grid_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sell_goods_req::clear_has_grid_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sell_goods_req::clear_grid_index() {
  grid_index_ = 0u;
  clear_has_grid_index();
}
inline ::google::protobuf::uint32 sell_goods_req::grid_index() const {
  return grid_index_;
}
inline void sell_goods_req::set_grid_index(::google::protobuf::uint32 value) {
  set_has_grid_index();
  grid_index_ = value;
}

// required uint32 num = 2;
inline bool sell_goods_req::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sell_goods_req::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sell_goods_req::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sell_goods_req::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 sell_goods_req::num() const {
  return num_;
}
inline void sell_goods_req::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool sell_goods_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sell_goods_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sell_goods_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sell_goods_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& sell_goods_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* sell_goods_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* sell_goods_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void sell_goods_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// sell_goods_rsp

// required uint32 grid_index = 1;
inline bool sell_goods_rsp::has_grid_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sell_goods_rsp::set_has_grid_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sell_goods_rsp::clear_has_grid_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sell_goods_rsp::clear_grid_index() {
  grid_index_ = 0u;
  clear_has_grid_index();
}
inline ::google::protobuf::uint32 sell_goods_rsp::grid_index() const {
  return grid_index_;
}
inline void sell_goods_rsp::set_grid_index(::google::protobuf::uint32 value) {
  set_has_grid_index();
  grid_index_ = value;
}

// required .client.SHOP_SELL_RET_E ret = 2;
inline bool sell_goods_rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sell_goods_rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sell_goods_rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sell_goods_rsp::clear_ret() {
  ret_ = 1;
  clear_has_ret();
}
inline ::client::SHOP_SELL_RET_E sell_goods_rsp::ret() const {
  return static_cast< ::client::SHOP_SELL_RET_E >(ret_);
}
inline void sell_goods_rsp::set_ret(::client::SHOP_SELL_RET_E value) {
  assert(::client::SHOP_SELL_RET_E_IsValid(value));
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// buy_mall

// required uint32 goods_id = 1;
inline bool buy_mall::has_goods_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void buy_mall::set_has_goods_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void buy_mall::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void buy_mall::clear_goods_id() {
  goods_id_ = 0u;
  clear_has_goods_id();
}
inline ::google::protobuf::uint32 buy_mall::goods_id() const {
  return goods_id_;
}
inline void buy_mall::set_goods_id(::google::protobuf::uint32 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// required uint32 num = 2;
inline bool buy_mall::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void buy_mall::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void buy_mall::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void buy_mall::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 buy_mall::num() const {
  return num_;
}
inline void buy_mall::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// optional uint32 is_goods_id = 3;
inline bool buy_mall::has_is_goods_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void buy_mall::set_has_is_goods_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void buy_mall::clear_has_is_goods_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void buy_mall::clear_is_goods_id() {
  is_goods_id_ = 0u;
  clear_has_is_goods_id();
}
inline ::google::protobuf::uint32 buy_mall::is_goods_id() const {
  return is_goods_id_;
}
inline void buy_mall::set_is_goods_id(::google::protobuf::uint32 value) {
  set_has_is_goods_id();
  is_goods_id_ = value;
}

// -------------------------------------------------------------------

// buy_mall_req

// repeated .client.buy_mall bm = 1;
inline int buy_mall_req::bm_size() const {
  return bm_.size();
}
inline void buy_mall_req::clear_bm() {
  bm_.Clear();
}
inline const ::client::buy_mall& buy_mall_req::bm(int index) const {
  return bm_.Get(index);
}
inline ::client::buy_mall* buy_mall_req::mutable_bm(int index) {
  return bm_.Mutable(index);
}
inline ::client::buy_mall* buy_mall_req::add_bm() {
  return bm_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::buy_mall >&
buy_mall_req::bm() const {
  return bm_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::buy_mall >*
buy_mall_req::mutable_bm() {
  return &bm_;
}

// optional .client.server_head svr_head = 1000;
inline bool buy_mall_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void buy_mall_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void buy_mall_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void buy_mall_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& buy_mall_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* buy_mall_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* buy_mall_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void buy_mall_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// buy_mall_rsp

// repeated .client.buy_goods_rsp ret = 1;
inline int buy_mall_rsp::ret_size() const {
  return ret_.size();
}
inline void buy_mall_rsp::clear_ret() {
  ret_.Clear();
}
inline const ::client::buy_goods_rsp& buy_mall_rsp::ret(int index) const {
  return ret_.Get(index);
}
inline ::client::buy_goods_rsp* buy_mall_rsp::mutable_ret(int index) {
  return ret_.Mutable(index);
}
inline ::client::buy_goods_rsp* buy_mall_rsp::add_ret() {
  return ret_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::buy_goods_rsp >&
buy_mall_rsp::ret() const {
  return ret_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::buy_goods_rsp >*
buy_mall_rsp::mutable_ret() {
  return &ret_;
}

// -------------------------------------------------------------------

// order_tracking_req

// required uint32 unixtime = 1;
inline bool order_tracking_req::has_unixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void order_tracking_req::set_has_unixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void order_tracking_req::clear_has_unixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void order_tracking_req::clear_unixtime() {
  unixtime_ = 0u;
  clear_has_unixtime();
}
inline ::google::protobuf::uint32 order_tracking_req::unixtime() const {
  return unixtime_;
}
inline void order_tracking_req::set_unixtime(::google::protobuf::uint32 value) {
  set_has_unixtime();
  unixtime_ = value;
}

// optional uint32 role_id = 2;
inline bool order_tracking_req::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void order_tracking_req::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void order_tracking_req::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void order_tracking_req::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 order_tracking_req::role_id() const {
  return role_id_;
}
inline void order_tracking_req::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool order_tracking_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void order_tracking_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000004u;
}
inline void order_tracking_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void order_tracking_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& order_tracking_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* order_tracking_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* order_tracking_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void order_tracking_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// order_tracking_info

// required uint32 id = 1;
inline bool order_tracking_info::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void order_tracking_info::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void order_tracking_info::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void order_tracking_info::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 order_tracking_info::id() const {
  return id_;
}
inline void order_tracking_info::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 count = 2;
inline bool order_tracking_info::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void order_tracking_info::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void order_tracking_info::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void order_tracking_info::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 order_tracking_info::count() const {
  return count_;
}
inline void order_tracking_info::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// required uint32 type = 3;
inline bool order_tracking_info::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void order_tracking_info::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void order_tracking_info::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void order_tracking_info::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 order_tracking_info::type() const {
  return type_;
}
inline void order_tracking_info::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// order_tracking_rsp

// required uint32 role_id = 1;
inline bool order_tracking_rsp::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void order_tracking_rsp::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void order_tracking_rsp::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void order_tracking_rsp::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 order_tracking_rsp::role_id() const {
  return role_id_;
}
inline void order_tracking_rsp::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// repeated .client.order_tracking_info oti = 2;
inline int order_tracking_rsp::oti_size() const {
  return oti_.size();
}
inline void order_tracking_rsp::clear_oti() {
  oti_.Clear();
}
inline const ::client::order_tracking_info& order_tracking_rsp::oti(int index) const {
  return oti_.Get(index);
}
inline ::client::order_tracking_info* order_tracking_rsp::mutable_oti(int index) {
  return oti_.Mutable(index);
}
inline ::client::order_tracking_info* order_tracking_rsp::add_oti() {
  return oti_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::order_tracking_info >&
order_tracking_rsp::oti() const {
  return oti_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::order_tracking_info >*
order_tracking_rsp::mutable_oti() {
  return &oti_;
}

// -------------------------------------------------------------------

// buy_tael_req

// required uint32 unixtime = 1;
inline bool buy_tael_req::has_unixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void buy_tael_req::set_has_unixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void buy_tael_req::clear_has_unixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void buy_tael_req::clear_unixtime() {
  unixtime_ = 0u;
  clear_has_unixtime();
}
inline ::google::protobuf::uint32 buy_tael_req::unixtime() const {
  return unixtime_;
}
inline void buy_tael_req::set_unixtime(::google::protobuf::uint32 value) {
  set_has_unixtime();
  unixtime_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool buy_tael_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void buy_tael_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void buy_tael_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void buy_tael_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& buy_tael_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* buy_tael_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* buy_tael_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void buy_tael_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// buy_tael_rsp

// required uint32 ret = 1;
inline bool buy_tael_rsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void buy_tael_rsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void buy_tael_rsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void buy_tael_rsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 buy_tael_rsp::ret() const {
  return ret_;
}
inline void buy_tael_rsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// get_svr_start_time_req

// required uint32 svr_time = 1;
inline bool get_svr_start_time_req::has_svr_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_svr_start_time_req::set_has_svr_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_svr_start_time_req::clear_has_svr_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_svr_start_time_req::clear_svr_time() {
  svr_time_ = 0u;
  clear_has_svr_time();
}
inline ::google::protobuf::uint32 get_svr_start_time_req::svr_time() const {
  return svr_time_;
}
inline void get_svr_start_time_req::set_svr_time(::google::protobuf::uint32 value) {
  set_has_svr_time();
  svr_time_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool get_svr_start_time_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_svr_start_time_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_svr_start_time_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_svr_start_time_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& get_svr_start_time_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* get_svr_start_time_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* get_svr_start_time_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void get_svr_start_time_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// get_svr_start_time_rsp

// required uint32 days = 1;
inline bool get_svr_start_time_rsp::has_days() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_svr_start_time_rsp::set_has_days() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_svr_start_time_rsp::clear_has_days() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_svr_start_time_rsp::clear_days() {
  days_ = 0u;
  clear_has_days();
}
inline ::google::protobuf::uint32 get_svr_start_time_rsp::days() const {
  return days_;
}
inline void get_svr_start_time_rsp::set_days(::google::protobuf::uint32 value) {
  set_has_days();
  days_ = value;
}

// required uint32 shop_discount_seconds = 2;
inline bool get_svr_start_time_rsp::has_shop_discount_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_svr_start_time_rsp::set_has_shop_discount_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_svr_start_time_rsp::clear_has_shop_discount_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_svr_start_time_rsp::clear_shop_discount_seconds() {
  shop_discount_seconds_ = 0u;
  clear_has_shop_discount_seconds();
}
inline ::google::protobuf::uint32 get_svr_start_time_rsp::shop_discount_seconds() const {
  return shop_discount_seconds_;
}
inline void get_svr_start_time_rsp::set_shop_discount_seconds(::google::protobuf::uint32 value) {
  set_has_shop_discount_seconds();
  shop_discount_seconds_ = value;
}

// required uint32 now = 3;
inline bool get_svr_start_time_rsp::has_now() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void get_svr_start_time_rsp::set_has_now() {
  _has_bits_[0] |= 0x00000004u;
}
inline void get_svr_start_time_rsp::clear_has_now() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void get_svr_start_time_rsp::clear_now() {
  now_ = 0u;
  clear_has_now();
}
inline ::google::protobuf::uint32 get_svr_start_time_rsp::now() const {
  return now_;
}
inline void get_svr_start_time_rsp::set_now(::google::protobuf::uint32 value) {
  set_has_now();
  now_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::SHOP_BUY_RET_E>() {
  return ::client::SHOP_BUY_RET_E_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::SHOP_PAY_TYPE_E>() {
  return ::client::SHOP_PAY_TYPE_E_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::SHOP_LIMIT_TYPE_E>() {
  return ::client::SHOP_LIMIT_TYPE_E_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client::SHOP_SELL_RET_E>() {
  return ::client::SHOP_SELL_RET_E_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2eoperate_5fshop_2eproto__INCLUDED
