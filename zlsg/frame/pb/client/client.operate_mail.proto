import "client.comm.proto";
import "client.role_props.proto";
package client;

enum MAIL_TYPE_E
{
	MAIL_TYPE_SYSTEM  = 0; // 系统
	MAIL_TYPE_PLAYER  = 1; // 玩家
	MAIL_TYPE_ADMIN   = 2; // 管理员
	MAIL_TYPE_FAMILY  = 3; // 同盟邮件邀请
	MAIL_TYPE_ARMY    = 4; // 其余军团邮件（同盟拒绝通知，敌盟通知）
}
// 邮件头部
message mail_head {
    required uint32 mail_id			 = 1[default = 0]; // 邮件ID
	required uint32	mail_type		 = 2[default = 0]; // 邮件的类型 0 系统 1 玩家 2 管理员 3 结盟邮件
    required uint32 recv_role_id	 = 3[default = 0]; // 接收者角色id 
    required uint32 send_role_id	 = 4[default = 0]; // 发送者角色id
	required string title			 = 5;              // 邮件标题
    optional string send_role_name	 = 6;              // 发送者用户名
    optional uint32 send_time		 = 7;              // 发件时间
	optional uint32 past_time		 = 8;			   // 过期时间	 
    optional uint32	attachment_num   = 9;			   // 是否有附件
    optional bool   opened           = 10;             // 是否已经打开
	optional bool   is_take			 = 11;			   // 是否已经提取附件 
}

message content_data {
	optional uint32 n = 1;
	optional string s = 2;
	optional float  f = 3;
}

// 邮件内容
message mail_body {
    optional string		   content = 1;
	repeated content_data  data	   = 2; 
}

message mail_attr {
	optional uint32  attr_type	        = 1;
	optional uint32	 attr_value			= 2;
}

// 邮件内容
message mail_info {
    required mail_head mh		= 1; // 邮件头部
    optional mail_body mb		= 2; // 邮件内容 
	repeated mail_attr attr		= 3; // 奖励的属性与类型
    repeated props_info ma		= 4; // 邮件的附件
}

// 投递的邮件内容
message delivery_mail_info {
    required mail_info		mi	= 1;		// 邮件内容
    required string			recv_name = 2;  // 接收邮件的用户
}

// 有新邮件到达
message new_mail_recv {
    repeated mail_head mh = 1; // 邮件头部
}

// 获取本人邮件列表请求
message mail_list_req {
    required uint32 svr_time = 1; // 客户端unixtime时间
    
    optional server_head svr_head = 1000; // 服务端填写项，客户端不需要关心也不必填写数据
}

enum MAIL_LIST_UPDATE_TYPE {
	MAIL_LIST_UPDATE_TYPE_ALL = 1; // 整体更新
	MAIL_LIST_UPDATE_TYPE_DEL = 2; // 给列表删除邮件
	MAIL_LIST_UPDATE_TYPE_ADD = 3; // 给列表增加一封邮件
}
// 本人邮件列表返回
message mail_list_rsp { 
    repeated mail_head mh = 1; // 邮件头部
	optional MAIL_LIST_UPDATE_TYPE update_type = 2; // 列表更新类型
}

// 打开具体邮件请求
message mail_open_req {
    required uint32 mail_id = 1; // 请求打开邮件的ID
    
    optional server_head svr_head = 1000; // 服务端填写项，客户端不需要关心也不必填写数据
}

// 打开邮件结果
message mail_open_rsp {
    required uint32     mail_id = 1; // 打开的邮件ID
    optional mail_body  mb      = 2; // 邮件内容
	repeated mail_attr  attr	= 3; // 属性加成
    repeated props_info	ma      = 4; // 邮件的附件   
}

// 发送邮件的附件请求
message send_mail_attachment {
    required uint32 grid_index = 1; // 附件为背包中索引
    required uint32 num        = 2; // 发送个数
}

// 发送邮件
message send_mail_req {
	required mail_info			  info			= 1				; //  邮件数据
	required string               recv_name		= 2;            ; //　接收邮件的用户名
    optional server_head          svr_head      = 1000			; // 服务端填写项，客户端不需要关心也不必填写数据
}

// 发送邮件结果
message send_mail_rsp {
    enum SEND_RET
    {
        SRET_SUCCESS  = 0;   // 发送成功
        SRET_RECV_ERR = 1;   // 收信人信息错误
        SRET_ATTACH_ERR = 2; // 附件物品错误
    }
    required SEND_RET ret      = 1; // 发送结果
    optional uint32   err_code = 2; // 错误码
}

// 提取附件
message extract_attachment_req {
    required uint32 mail_id = 1; // 提取附件的ID
    
    optional server_head svr_head = 1000; // 服务端填写项，客户端不需要关心也不必填写数据
}

// 提取附件结果
message extract_attachment_rsp {
    required uint32 mail_id = 1; // 提取附件的ID
    enum EXTRACT_RET
    {
        ERET_SUCCESS    = 0; // 提取附件成功
        ERET_PACK_FULL  = 1; // 背包已满
        ERET_ATTACH_ERR = 2; // 附件错误
		ERET_TIME_OUT	= 3; // 附件已过期，无法领取
    }
    required EXTRACT_RET ret = 2; // 对应邮件ID提取附件的操作结果
}

// 删除邮件请求
message remove_mail_req {
    repeated uint32 mail_id = 1; // 删除邮件的ID
    
    optional server_head svr_head = 1000; // 服务端填写项，客户端不需要关心也不必填写数据
}


// 删除邮件结果
message remove_mail_rsp {
    enum REMOVE_RET
    {
        RRET_SUCCESS		 = 0; // 删除邮件成功
        RRET_SYS_ERR		 = 1; // 系统错误
		RRET_ATTACH_ERR		 = 2; // 有附件没提取，无法删除
    }

    required REMOVE_RET ret = 1; // 对应邮件ID提取附件的操作结果
}

// 检查接收者是否合法
message send_mail_check_role {
    required send_mail_req smr = 1;
}

message send_mail_check_complete {
    required send_mail_req smr  = 1;
    required bool          pass = 2;
}

// 消息系统返回broadcast
message broadcast_area_rsp {
	required uint32 area_id         = 1; // 区域ID
	optional mail_body area_msg     = 2; // 消息体
	optional uint32 broadcast_count = 3[default = 1]; // 播放次数
}

// 广播消息到center处理(服务器内部用 game to center)
message broadcast_area_to_center {
	required uint32             role_id        = 1;
	optional broadcast_area_rsp broadcast_info = 2;
}

// 发送消息给center
message broadcast_msg_req {
	required uint32 area_id = 1;
	repeated content_data  data	   = 2; 
}

message broadcast_backdoor_area_req {
	required uint32		   area_id			= 1   ; // 区域ID 没有填充0
	optional mail_body     area_msg			= 2   ; // 消息体
	optional uint32		   broadcast_count  = 3[default = 1]; // 播放次数
	optional server_head   svr_head			= 1000; // 服务端填写项，客户端不需要关心也不必填写数据
}