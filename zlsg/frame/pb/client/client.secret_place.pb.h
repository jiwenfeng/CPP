// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.secret_place.proto

#ifndef PROTOBUF_client_2esecret_5fplace_2eproto__INCLUDED
#define PROTOBUF_client_2esecret_5fplace_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client.comm.pb.h"
// @@protoc_insertion_point(includes)

namespace client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

class prop_secret_place;
class explore_secret_place_req;
class explore_secret_place_rsp;
class last_explore_secret_place_req;
class last_explore_secret_place_rsp;
class broadcast_explore_list_req;
class explore_update;
class broadcast_explore_list_rsp;
class explore_update_list;

// ===================================================================

class prop_secret_place : public ::google::protobuf::Message {
 public:
  prop_secret_place();
  virtual ~prop_secret_place();

  prop_secret_place(const prop_secret_place& from);

  inline prop_secret_place& operator=(const prop_secret_place& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const prop_secret_place& default_instance();

  void Swap(prop_secret_place* other);

  // implements Message ----------------------------------------------

  prop_secret_place* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const prop_secret_place& from);
  void MergeFrom(const prop_secret_place& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // required uint32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.prop_secret_place)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

  void InitAsDefaultInstance();
  static prop_secret_place* default_instance_;
};
// -------------------------------------------------------------------

class explore_secret_place_req : public ::google::protobuf::Message {
 public:
  explore_secret_place_req();
  virtual ~explore_secret_place_req();

  explore_secret_place_req(const explore_secret_place_req& from);

  inline explore_secret_place_req& operator=(const explore_secret_place_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const explore_secret_place_req& default_instance();

  void Swap(explore_secret_place_req* other);

  // implements Message ----------------------------------------------

  explore_secret_place_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const explore_secret_place_req& from);
  void MergeFrom(const explore_secret_place_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 place_id = 1;
  inline bool has_place_id() const;
  inline void clear_place_id();
  static const int kPlaceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 place_id() const;
  inline void set_place_id(::google::protobuf::uint32 value);

  // required uint32 explore_num = 2;
  inline bool has_explore_num() const;
  inline void clear_explore_num();
  static const int kExploreNumFieldNumber = 2;
  inline ::google::protobuf::uint32 explore_num() const;
  inline void set_explore_num(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.explore_secret_place_req)
 private:
  inline void set_has_place_id();
  inline void clear_has_place_id();
  inline void set_has_explore_num();
  inline void clear_has_explore_num();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 place_id_;
  ::google::protobuf::uint32 explore_num_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

  void InitAsDefaultInstance();
  static explore_secret_place_req* default_instance_;
};
// -------------------------------------------------------------------

class explore_secret_place_rsp : public ::google::protobuf::Message {
 public:
  explore_secret_place_rsp();
  virtual ~explore_secret_place_rsp();

  explore_secret_place_rsp(const explore_secret_place_rsp& from);

  inline explore_secret_place_rsp& operator=(const explore_secret_place_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const explore_secret_place_rsp& default_instance();

  void Swap(explore_secret_place_rsp* other);

  // implements Message ----------------------------------------------

  explore_secret_place_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const explore_secret_place_rsp& from);
  void MergeFrom(const explore_secret_place_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 place_id = 1;
  inline bool has_place_id() const;
  inline void clear_place_id();
  static const int kPlaceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 place_id() const;
  inline void set_place_id(::google::protobuf::uint32 value);

  // repeated .client.prop_secret_place psp = 2;
  inline int psp_size() const;
  inline void clear_psp();
  static const int kPspFieldNumber = 2;
  inline const ::client::prop_secret_place& psp(int index) const;
  inline ::client::prop_secret_place* mutable_psp(int index);
  inline ::client::prop_secret_place* add_psp();
  inline const ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place >&
      psp() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place >*
      mutable_psp();

  // @@protoc_insertion_point(class_scope:client.explore_secret_place_rsp)
 private:
  inline void set_has_place_id();
  inline void clear_has_place_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place > psp_;
  ::google::protobuf::uint32 place_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

  void InitAsDefaultInstance();
  static explore_secret_place_rsp* default_instance_;
};
// -------------------------------------------------------------------

class last_explore_secret_place_req : public ::google::protobuf::Message {
 public:
  last_explore_secret_place_req();
  virtual ~last_explore_secret_place_req();

  last_explore_secret_place_req(const last_explore_secret_place_req& from);

  inline last_explore_secret_place_req& operator=(const last_explore_secret_place_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const last_explore_secret_place_req& default_instance();

  void Swap(last_explore_secret_place_req* other);

  // implements Message ----------------------------------------------

  last_explore_secret_place_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const last_explore_secret_place_req& from);
  void MergeFrom(const last_explore_secret_place_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unixtime = 1;
  inline bool has_unixtime() const;
  inline void clear_unixtime();
  static const int kUnixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 unixtime() const;
  inline void set_unixtime(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.last_explore_secret_place_req)
 private:
  inline void set_has_unixtime();
  inline void clear_has_unixtime();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 unixtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

  void InitAsDefaultInstance();
  static last_explore_secret_place_req* default_instance_;
};
// -------------------------------------------------------------------

class last_explore_secret_place_rsp : public ::google::protobuf::Message {
 public:
  last_explore_secret_place_rsp();
  virtual ~last_explore_secret_place_rsp();

  last_explore_secret_place_rsp(const last_explore_secret_place_rsp& from);

  inline last_explore_secret_place_rsp& operator=(const last_explore_secret_place_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const last_explore_secret_place_rsp& default_instance();

  void Swap(last_explore_secret_place_rsp* other);

  // implements Message ----------------------------------------------

  last_explore_secret_place_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const last_explore_secret_place_rsp& from);
  void MergeFrom(const last_explore_secret_place_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 place_id = 1;
  inline bool has_place_id() const;
  inline void clear_place_id();
  static const int kPlaceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 place_id() const;
  inline void set_place_id(::google::protobuf::uint32 value);

  // repeated .client.prop_secret_place psp = 2;
  inline int psp_size() const;
  inline void clear_psp();
  static const int kPspFieldNumber = 2;
  inline const ::client::prop_secret_place& psp(int index) const;
  inline ::client::prop_secret_place* mutable_psp(int index);
  inline ::client::prop_secret_place* add_psp();
  inline const ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place >&
      psp() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place >*
      mutable_psp();

  // @@protoc_insertion_point(class_scope:client.last_explore_secret_place_rsp)
 private:
  inline void set_has_place_id();
  inline void clear_has_place_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place > psp_;
  ::google::protobuf::uint32 place_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

  void InitAsDefaultInstance();
  static last_explore_secret_place_rsp* default_instance_;
};
// -------------------------------------------------------------------

class broadcast_explore_list_req : public ::google::protobuf::Message {
 public:
  broadcast_explore_list_req();
  virtual ~broadcast_explore_list_req();

  broadcast_explore_list_req(const broadcast_explore_list_req& from);

  inline broadcast_explore_list_req& operator=(const broadcast_explore_list_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const broadcast_explore_list_req& default_instance();

  void Swap(broadcast_explore_list_req* other);

  // implements Message ----------------------------------------------

  broadcast_explore_list_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const broadcast_explore_list_req& from);
  void MergeFrom(const broadcast_explore_list_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 unixtime = 1;
  inline bool has_unixtime() const;
  inline void clear_unixtime();
  static const int kUnixtimeFieldNumber = 1;
  inline ::google::protobuf::uint32 unixtime() const;
  inline void set_unixtime(::google::protobuf::uint32 value);

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.broadcast_explore_list_req)
 private:
  inline void set_has_unixtime();
  inline void clear_has_unixtime();
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::client::server_head* svr_head_;
  ::google::protobuf::uint32 unixtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

  void InitAsDefaultInstance();
  static broadcast_explore_list_req* default_instance_;
};
// -------------------------------------------------------------------

class explore_update : public ::google::protobuf::Message {
 public:
  explore_update();
  virtual ~explore_update();

  explore_update(const explore_update& from);

  inline explore_update& operator=(const explore_update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const explore_update& default_instance();

  void Swap(explore_update* other);

  // implements Message ----------------------------------------------

  explore_update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const explore_update& from);
  void MergeFrom(const explore_update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // required uint32 place_id = 3;
  inline bool has_place_id() const;
  inline void clear_place_id();
  static const int kPlaceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 place_id() const;
  inline void set_place_id(::google::protobuf::uint32 value);

  // required uint32 goods_id = 4;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 4;
  inline ::google::protobuf::uint32 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint32 value);

  // required uint32 goods_num = 5;
  inline bool has_goods_num() const;
  inline void clear_goods_num();
  static const int kGoodsNumFieldNumber = 5;
  inline ::google::protobuf::uint32 goods_num() const;
  inline void set_goods_num(::google::protobuf::uint32 value);

  // required uint32 goods_quality = 6;
  inline bool has_goods_quality() const;
  inline void clear_goods_quality();
  static const int kGoodsQualityFieldNumber = 6;
  inline ::google::protobuf::uint32 goods_quality() const;
  inline void set_goods_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client.explore_update)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_place_id();
  inline void clear_has_place_id();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_goods_num();
  inline void clear_has_goods_num();
  inline void set_has_goods_quality();
  inline void clear_has_goods_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 place_id_;
  ::google::protobuf::uint32 goods_id_;
  ::google::protobuf::uint32 goods_num_;
  ::google::protobuf::uint32 goods_quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

  void InitAsDefaultInstance();
  static explore_update* default_instance_;
};
// -------------------------------------------------------------------

class broadcast_explore_list_rsp : public ::google::protobuf::Message {
 public:
  broadcast_explore_list_rsp();
  virtual ~broadcast_explore_list_rsp();

  broadcast_explore_list_rsp(const broadcast_explore_list_rsp& from);

  inline broadcast_explore_list_rsp& operator=(const broadcast_explore_list_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const broadcast_explore_list_rsp& default_instance();

  void Swap(broadcast_explore_list_rsp* other);

  // implements Message ----------------------------------------------

  broadcast_explore_list_rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const broadcast_explore_list_rsp& from);
  void MergeFrom(const broadcast_explore_list_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.explore_update eu = 1;
  inline int eu_size() const;
  inline void clear_eu();
  static const int kEuFieldNumber = 1;
  inline const ::client::explore_update& eu(int index) const;
  inline ::client::explore_update* mutable_eu(int index);
  inline ::client::explore_update* add_eu();
  inline const ::google::protobuf::RepeatedPtrField< ::client::explore_update >&
      eu() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::explore_update >*
      mutable_eu();

  // @@protoc_insertion_point(class_scope:client.broadcast_explore_list_rsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::explore_update > eu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

  void InitAsDefaultInstance();
  static broadcast_explore_list_rsp* default_instance_;
};
// -------------------------------------------------------------------

class explore_update_list : public ::google::protobuf::Message {
 public:
  explore_update_list();
  virtual ~explore_update_list();

  explore_update_list(const explore_update_list& from);

  inline explore_update_list& operator=(const explore_update_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const explore_update_list& default_instance();

  void Swap(explore_update_list* other);

  // implements Message ----------------------------------------------

  explore_update_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const explore_update_list& from);
  void MergeFrom(const explore_update_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client.explore_update eu = 1;
  inline int eu_size() const;
  inline void clear_eu();
  static const int kEuFieldNumber = 1;
  inline const ::client::explore_update& eu(int index) const;
  inline ::client::explore_update* mutable_eu(int index);
  inline ::client::explore_update* add_eu();
  inline const ::google::protobuf::RepeatedPtrField< ::client::explore_update >&
      eu() const;
  inline ::google::protobuf::RepeatedPtrField< ::client::explore_update >*
      mutable_eu();

  // optional .client.server_head svr_head = 1000;
  inline bool has_svr_head() const;
  inline void clear_svr_head();
  static const int kSvrHeadFieldNumber = 1000;
  inline const ::client::server_head& svr_head() const;
  inline ::client::server_head* mutable_svr_head();
  inline ::client::server_head* release_svr_head();
  inline void set_allocated_svr_head(::client::server_head* svr_head);

  // @@protoc_insertion_point(class_scope:client.explore_update_list)
 private:
  inline void set_has_svr_head();
  inline void clear_has_svr_head();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::client::explore_update > eu_;
  ::client::server_head* svr_head_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_AssignDesc_client_2esecret_5fplace_2eproto();
  friend void protobuf_ShutdownFile_client_2esecret_5fplace_2eproto();

  void InitAsDefaultInstance();
  static explore_update_list* default_instance_;
};
// ===================================================================


// ===================================================================

// prop_secret_place

// required uint32 id = 1;
inline bool prop_secret_place::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void prop_secret_place::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void prop_secret_place::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void prop_secret_place::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 prop_secret_place::id() const {
  return id_;
}
inline void prop_secret_place::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool prop_secret_place::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void prop_secret_place::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void prop_secret_place::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void prop_secret_place::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 prop_secret_place::num() const {
  return num_;
}
inline void prop_secret_place::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// required uint32 quality = 3;
inline bool prop_secret_place::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void prop_secret_place::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void prop_secret_place::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void prop_secret_place::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 prop_secret_place::quality() const {
  return quality_;
}
inline void prop_secret_place::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// -------------------------------------------------------------------

// explore_secret_place_req

// required uint32 place_id = 1;
inline bool explore_secret_place_req::has_place_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void explore_secret_place_req::set_has_place_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void explore_secret_place_req::clear_has_place_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void explore_secret_place_req::clear_place_id() {
  place_id_ = 0u;
  clear_has_place_id();
}
inline ::google::protobuf::uint32 explore_secret_place_req::place_id() const {
  return place_id_;
}
inline void explore_secret_place_req::set_place_id(::google::protobuf::uint32 value) {
  set_has_place_id();
  place_id_ = value;
}

// required uint32 explore_num = 2;
inline bool explore_secret_place_req::has_explore_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void explore_secret_place_req::set_has_explore_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void explore_secret_place_req::clear_has_explore_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void explore_secret_place_req::clear_explore_num() {
  explore_num_ = 0u;
  clear_has_explore_num();
}
inline ::google::protobuf::uint32 explore_secret_place_req::explore_num() const {
  return explore_num_;
}
inline void explore_secret_place_req::set_explore_num(::google::protobuf::uint32 value) {
  set_has_explore_num();
  explore_num_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool explore_secret_place_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void explore_secret_place_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000004u;
}
inline void explore_secret_place_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void explore_secret_place_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& explore_secret_place_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* explore_secret_place_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* explore_secret_place_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void explore_secret_place_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// explore_secret_place_rsp

// required uint32 place_id = 1;
inline bool explore_secret_place_rsp::has_place_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void explore_secret_place_rsp::set_has_place_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void explore_secret_place_rsp::clear_has_place_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void explore_secret_place_rsp::clear_place_id() {
  place_id_ = 0u;
  clear_has_place_id();
}
inline ::google::protobuf::uint32 explore_secret_place_rsp::place_id() const {
  return place_id_;
}
inline void explore_secret_place_rsp::set_place_id(::google::protobuf::uint32 value) {
  set_has_place_id();
  place_id_ = value;
}

// repeated .client.prop_secret_place psp = 2;
inline int explore_secret_place_rsp::psp_size() const {
  return psp_.size();
}
inline void explore_secret_place_rsp::clear_psp() {
  psp_.Clear();
}
inline const ::client::prop_secret_place& explore_secret_place_rsp::psp(int index) const {
  return psp_.Get(index);
}
inline ::client::prop_secret_place* explore_secret_place_rsp::mutable_psp(int index) {
  return psp_.Mutable(index);
}
inline ::client::prop_secret_place* explore_secret_place_rsp::add_psp() {
  return psp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place >&
explore_secret_place_rsp::psp() const {
  return psp_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place >*
explore_secret_place_rsp::mutable_psp() {
  return &psp_;
}

// -------------------------------------------------------------------

// last_explore_secret_place_req

// required uint32 unixtime = 1;
inline bool last_explore_secret_place_req::has_unixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void last_explore_secret_place_req::set_has_unixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void last_explore_secret_place_req::clear_has_unixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void last_explore_secret_place_req::clear_unixtime() {
  unixtime_ = 0u;
  clear_has_unixtime();
}
inline ::google::protobuf::uint32 last_explore_secret_place_req::unixtime() const {
  return unixtime_;
}
inline void last_explore_secret_place_req::set_unixtime(::google::protobuf::uint32 value) {
  set_has_unixtime();
  unixtime_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool last_explore_secret_place_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void last_explore_secret_place_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void last_explore_secret_place_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void last_explore_secret_place_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& last_explore_secret_place_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* last_explore_secret_place_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* last_explore_secret_place_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void last_explore_secret_place_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// last_explore_secret_place_rsp

// required uint32 place_id = 1;
inline bool last_explore_secret_place_rsp::has_place_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void last_explore_secret_place_rsp::set_has_place_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void last_explore_secret_place_rsp::clear_has_place_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void last_explore_secret_place_rsp::clear_place_id() {
  place_id_ = 0u;
  clear_has_place_id();
}
inline ::google::protobuf::uint32 last_explore_secret_place_rsp::place_id() const {
  return place_id_;
}
inline void last_explore_secret_place_rsp::set_place_id(::google::protobuf::uint32 value) {
  set_has_place_id();
  place_id_ = value;
}

// repeated .client.prop_secret_place psp = 2;
inline int last_explore_secret_place_rsp::psp_size() const {
  return psp_.size();
}
inline void last_explore_secret_place_rsp::clear_psp() {
  psp_.Clear();
}
inline const ::client::prop_secret_place& last_explore_secret_place_rsp::psp(int index) const {
  return psp_.Get(index);
}
inline ::client::prop_secret_place* last_explore_secret_place_rsp::mutable_psp(int index) {
  return psp_.Mutable(index);
}
inline ::client::prop_secret_place* last_explore_secret_place_rsp::add_psp() {
  return psp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place >&
last_explore_secret_place_rsp::psp() const {
  return psp_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::prop_secret_place >*
last_explore_secret_place_rsp::mutable_psp() {
  return &psp_;
}

// -------------------------------------------------------------------

// broadcast_explore_list_req

// required uint32 unixtime = 1;
inline bool broadcast_explore_list_req::has_unixtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void broadcast_explore_list_req::set_has_unixtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void broadcast_explore_list_req::clear_has_unixtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void broadcast_explore_list_req::clear_unixtime() {
  unixtime_ = 0u;
  clear_has_unixtime();
}
inline ::google::protobuf::uint32 broadcast_explore_list_req::unixtime() const {
  return unixtime_;
}
inline void broadcast_explore_list_req::set_unixtime(::google::protobuf::uint32 value) {
  set_has_unixtime();
  unixtime_ = value;
}

// optional .client.server_head svr_head = 1000;
inline bool broadcast_explore_list_req::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void broadcast_explore_list_req::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void broadcast_explore_list_req::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void broadcast_explore_list_req::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& broadcast_explore_list_req::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* broadcast_explore_list_req::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* broadcast_explore_list_req::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void broadcast_explore_list_req::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}

// -------------------------------------------------------------------

// explore_update

// required uint32 role_id = 1;
inline bool explore_update::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void explore_update::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void explore_update::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void explore_update::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 explore_update::role_id() const {
  return role_id_;
}
inline void explore_update::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 time = 2;
inline bool explore_update::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void explore_update::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void explore_update::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void explore_update::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 explore_update::time() const {
  return time_;
}
inline void explore_update::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// required uint32 place_id = 3;
inline bool explore_update::has_place_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void explore_update::set_has_place_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void explore_update::clear_has_place_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void explore_update::clear_place_id() {
  place_id_ = 0u;
  clear_has_place_id();
}
inline ::google::protobuf::uint32 explore_update::place_id() const {
  return place_id_;
}
inline void explore_update::set_place_id(::google::protobuf::uint32 value) {
  set_has_place_id();
  place_id_ = value;
}

// required uint32 goods_id = 4;
inline bool explore_update::has_goods_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void explore_update::set_has_goods_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void explore_update::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void explore_update::clear_goods_id() {
  goods_id_ = 0u;
  clear_has_goods_id();
}
inline ::google::protobuf::uint32 explore_update::goods_id() const {
  return goods_id_;
}
inline void explore_update::set_goods_id(::google::protobuf::uint32 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// required uint32 goods_num = 5;
inline bool explore_update::has_goods_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void explore_update::set_has_goods_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void explore_update::clear_has_goods_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void explore_update::clear_goods_num() {
  goods_num_ = 0u;
  clear_has_goods_num();
}
inline ::google::protobuf::uint32 explore_update::goods_num() const {
  return goods_num_;
}
inline void explore_update::set_goods_num(::google::protobuf::uint32 value) {
  set_has_goods_num();
  goods_num_ = value;
}

// required uint32 goods_quality = 6;
inline bool explore_update::has_goods_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void explore_update::set_has_goods_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void explore_update::clear_has_goods_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void explore_update::clear_goods_quality() {
  goods_quality_ = 0u;
  clear_has_goods_quality();
}
inline ::google::protobuf::uint32 explore_update::goods_quality() const {
  return goods_quality_;
}
inline void explore_update::set_goods_quality(::google::protobuf::uint32 value) {
  set_has_goods_quality();
  goods_quality_ = value;
}

// -------------------------------------------------------------------

// broadcast_explore_list_rsp

// repeated .client.explore_update eu = 1;
inline int broadcast_explore_list_rsp::eu_size() const {
  return eu_.size();
}
inline void broadcast_explore_list_rsp::clear_eu() {
  eu_.Clear();
}
inline const ::client::explore_update& broadcast_explore_list_rsp::eu(int index) const {
  return eu_.Get(index);
}
inline ::client::explore_update* broadcast_explore_list_rsp::mutable_eu(int index) {
  return eu_.Mutable(index);
}
inline ::client::explore_update* broadcast_explore_list_rsp::add_eu() {
  return eu_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::explore_update >&
broadcast_explore_list_rsp::eu() const {
  return eu_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::explore_update >*
broadcast_explore_list_rsp::mutable_eu() {
  return &eu_;
}

// -------------------------------------------------------------------

// explore_update_list

// repeated .client.explore_update eu = 1;
inline int explore_update_list::eu_size() const {
  return eu_.size();
}
inline void explore_update_list::clear_eu() {
  eu_.Clear();
}
inline const ::client::explore_update& explore_update_list::eu(int index) const {
  return eu_.Get(index);
}
inline ::client::explore_update* explore_update_list::mutable_eu(int index) {
  return eu_.Mutable(index);
}
inline ::client::explore_update* explore_update_list::add_eu() {
  return eu_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client::explore_update >&
explore_update_list::eu() const {
  return eu_;
}
inline ::google::protobuf::RepeatedPtrField< ::client::explore_update >*
explore_update_list::mutable_eu() {
  return &eu_;
}

// optional .client.server_head svr_head = 1000;
inline bool explore_update_list::has_svr_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void explore_update_list::set_has_svr_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void explore_update_list::clear_has_svr_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void explore_update_list::clear_svr_head() {
  if (svr_head_ != NULL) svr_head_->::client::server_head::Clear();
  clear_has_svr_head();
}
inline const ::client::server_head& explore_update_list::svr_head() const {
  return svr_head_ != NULL ? *svr_head_ : *default_instance_->svr_head_;
}
inline ::client::server_head* explore_update_list::mutable_svr_head() {
  set_has_svr_head();
  if (svr_head_ == NULL) svr_head_ = new ::client::server_head;
  return svr_head_;
}
inline ::client::server_head* explore_update_list::release_svr_head() {
  clear_has_svr_head();
  ::client::server_head* temp = svr_head_;
  svr_head_ = NULL;
  return temp;
}
inline void explore_update_list::set_allocated_svr_head(::client::server_head* svr_head) {
  delete svr_head_;
  svr_head_ = svr_head;
  if (svr_head) {
    set_has_svr_head();
  } else {
    clear_has_svr_head();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2esecret_5fplace_2eproto__INCLUDED
