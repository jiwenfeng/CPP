package client;

message role_data {
    required uint32 role_id  = 1; // 用户的角色ID，或者是场景中NPC的IDID
    required uint64 inst_id  = 2; // 场景中唯一标识一个对象的实例ID， 高32位为npc的ID，做到完全隔离用户和NPC
	
    enum TYPE{
        USER    = 0;
        NPC     = 1;    
        PET     = 2;    
    }
    
    required TYPE   role_typ = 3; // 角色类型 0为用户 1为NPC 2为宠物
    
    optional uint64 pet_id   = 4; // 主人实例ID
}

message role_name {
    required role_data rd    = 1;
    required string name     = 2; // 角色名
}

message client_map_pos {
    required int32 x = 1;
    required int32 y = 2;
    required int32 z = 3;
    optional int32 t = 4 [default = 0]; // 移动速度类型 0 跑 1 走 2终点
}

message server_head {
    optional uint32 svr_id      = 1[default = 0];
    optional uint32 user_id     = 2[default = 0];
    optional uint32 role_id     = 3[default = 0];
    optional uint32 agent_id    = 4[default = 0];
    optional uint32 client_id   = 5[default = 0];
    optional uint32 scenesvr_id = 6[default = 0];
    optional string client_ip   = 7;
    optional string user_name   = 8;
}

message time_check {
    required uint32 timestamp  = 1[default = 0    ]; // 服务器的时间戳，以10ms为单位
    optional bool   need_check = 2[default = false]; // 服务端要求客户端重新对时，如果有值且为真时，客户端需要重新对时  
}

message attribute {
    required uint32 type  = 1;
    required uint32 value = 2;
}

message attribute_change {
    required uint32 type  = 1;
    required int32  value = 2; // +加 -减
}
