// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysql.tb_role_bows.proto

#ifndef PROTOBUF_mysql_2etb_5frole_5fbows_2eproto__INCLUDED
#define PROTOBUF_mysql_2etb_5frole_5fbows_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mysql {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mysql_2etb_5frole_5fbows_2eproto();
void protobuf_AssignDesc_mysql_2etb_5frole_5fbows_2eproto();
void protobuf_ShutdownFile_mysql_2etb_5frole_5fbows_2eproto();

class tb_role_bows;

// ===================================================================

class tb_role_bows : public ::google::protobuf::Message {
 public:
  tb_role_bows();
  virtual ~tb_role_bows();

  tb_role_bows(const tb_role_bows& from);

  inline tb_role_bows& operator=(const tb_role_bows& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tb_role_bows& default_instance();

  void Swap(tb_role_bows* other);

  // implements Message ----------------------------------------------

  tb_role_bows* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tb_role_bows& from);
  void MergeFrom(const tb_role_bows& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 bow_id = 2;
  inline bool has_bow_id() const;
  inline void clear_bow_id();
  static const int kBowIdFieldNumber = 2;
  inline ::google::protobuf::uint32 bow_id() const;
  inline void set_bow_id(::google::protobuf::uint32 value);

  // required uint32 advance_num = 3;
  inline bool has_advance_num() const;
  inline void clear_advance_num();
  static const int kAdvanceNumFieldNumber = 3;
  inline ::google::protobuf::uint32 advance_num() const;
  inline void set_advance_num(::google::protobuf::uint32 value);

  // required uint32 advance_time = 4;
  inline bool has_advance_time() const;
  inline void clear_advance_time();
  static const int kAdvanceTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 advance_time() const;
  inline void set_advance_time(::google::protobuf::uint32 value);

  // required uint32 advance_bless = 5;
  inline bool has_advance_bless() const;
  inline void clear_advance_bless();
  static const int kAdvanceBlessFieldNumber = 5;
  inline ::google::protobuf::uint32 advance_bless() const;
  inline void set_advance_bless(::google::protobuf::uint32 value);

  // required uint32 bow_level = 6;
  inline bool has_bow_level() const;
  inline void clear_bow_level();
  static const int kBowLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 bow_level() const;
  inline void set_bow_level(::google::protobuf::uint32 value);

  // required uint32 bow_exp = 7;
  inline bool has_bow_exp() const;
  inline void clear_bow_exp();
  static const int kBowExpFieldNumber = 7;
  inline ::google::protobuf::uint32 bow_exp() const;
  inline void set_bow_exp(::google::protobuf::uint32 value);

  // required uint32 bow_power = 8;
  inline bool has_bow_power() const;
  inline void clear_bow_power();
  static const int kBowPowerFieldNumber = 8;
  inline ::google::protobuf::uint32 bow_power() const;
  inline void set_bow_power(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mysql.tb_role_bows)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_bow_id();
  inline void clear_has_bow_id();
  inline void set_has_advance_num();
  inline void clear_has_advance_num();
  inline void set_has_advance_time();
  inline void clear_has_advance_time();
  inline void set_has_advance_bless();
  inline void clear_has_advance_bless();
  inline void set_has_bow_level();
  inline void clear_has_bow_level();
  inline void set_has_bow_exp();
  inline void clear_has_bow_exp();
  inline void set_has_bow_power();
  inline void clear_has_bow_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 bow_id_;
  ::google::protobuf::uint32 advance_num_;
  ::google::protobuf::uint32 advance_time_;
  ::google::protobuf::uint32 advance_bless_;
  ::google::protobuf::uint32 bow_level_;
  ::google::protobuf::uint32 bow_exp_;
  ::google::protobuf::uint32 bow_power_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_mysql_2etb_5frole_5fbows_2eproto();
  friend void protobuf_AssignDesc_mysql_2etb_5frole_5fbows_2eproto();
  friend void protobuf_ShutdownFile_mysql_2etb_5frole_5fbows_2eproto();

  void InitAsDefaultInstance();
  static tb_role_bows* default_instance_;
};
// ===================================================================


// ===================================================================

// tb_role_bows

// required uint32 role_id = 1;
inline bool tb_role_bows::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tb_role_bows::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tb_role_bows::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tb_role_bows::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 tb_role_bows::role_id() const {
  return role_id_;
}
inline void tb_role_bows::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 bow_id = 2;
inline bool tb_role_bows::has_bow_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tb_role_bows::set_has_bow_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tb_role_bows::clear_has_bow_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tb_role_bows::clear_bow_id() {
  bow_id_ = 0u;
  clear_has_bow_id();
}
inline ::google::protobuf::uint32 tb_role_bows::bow_id() const {
  return bow_id_;
}
inline void tb_role_bows::set_bow_id(::google::protobuf::uint32 value) {
  set_has_bow_id();
  bow_id_ = value;
}

// required uint32 advance_num = 3;
inline bool tb_role_bows::has_advance_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tb_role_bows::set_has_advance_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tb_role_bows::clear_has_advance_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tb_role_bows::clear_advance_num() {
  advance_num_ = 0u;
  clear_has_advance_num();
}
inline ::google::protobuf::uint32 tb_role_bows::advance_num() const {
  return advance_num_;
}
inline void tb_role_bows::set_advance_num(::google::protobuf::uint32 value) {
  set_has_advance_num();
  advance_num_ = value;
}

// required uint32 advance_time = 4;
inline bool tb_role_bows::has_advance_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tb_role_bows::set_has_advance_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tb_role_bows::clear_has_advance_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tb_role_bows::clear_advance_time() {
  advance_time_ = 0u;
  clear_has_advance_time();
}
inline ::google::protobuf::uint32 tb_role_bows::advance_time() const {
  return advance_time_;
}
inline void tb_role_bows::set_advance_time(::google::protobuf::uint32 value) {
  set_has_advance_time();
  advance_time_ = value;
}

// required uint32 advance_bless = 5;
inline bool tb_role_bows::has_advance_bless() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tb_role_bows::set_has_advance_bless() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tb_role_bows::clear_has_advance_bless() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tb_role_bows::clear_advance_bless() {
  advance_bless_ = 0u;
  clear_has_advance_bless();
}
inline ::google::protobuf::uint32 tb_role_bows::advance_bless() const {
  return advance_bless_;
}
inline void tb_role_bows::set_advance_bless(::google::protobuf::uint32 value) {
  set_has_advance_bless();
  advance_bless_ = value;
}

// required uint32 bow_level = 6;
inline bool tb_role_bows::has_bow_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tb_role_bows::set_has_bow_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tb_role_bows::clear_has_bow_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tb_role_bows::clear_bow_level() {
  bow_level_ = 0u;
  clear_has_bow_level();
}
inline ::google::protobuf::uint32 tb_role_bows::bow_level() const {
  return bow_level_;
}
inline void tb_role_bows::set_bow_level(::google::protobuf::uint32 value) {
  set_has_bow_level();
  bow_level_ = value;
}

// required uint32 bow_exp = 7;
inline bool tb_role_bows::has_bow_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void tb_role_bows::set_has_bow_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void tb_role_bows::clear_has_bow_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void tb_role_bows::clear_bow_exp() {
  bow_exp_ = 0u;
  clear_has_bow_exp();
}
inline ::google::protobuf::uint32 tb_role_bows::bow_exp() const {
  return bow_exp_;
}
inline void tb_role_bows::set_bow_exp(::google::protobuf::uint32 value) {
  set_has_bow_exp();
  bow_exp_ = value;
}

// required uint32 bow_power = 8;
inline bool tb_role_bows::has_bow_power() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void tb_role_bows::set_has_bow_power() {
  _has_bits_[0] |= 0x00000080u;
}
inline void tb_role_bows::clear_has_bow_power() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void tb_role_bows::clear_bow_power() {
  bow_power_ = 0u;
  clear_has_bow_power();
}
inline ::google::protobuf::uint32 tb_role_bows::bow_power() const {
  return bow_power_;
}
inline void tb_role_bows::set_bow_power(::google::protobuf::uint32 value) {
  set_has_bow_power();
  bow_power_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mysql

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mysql_2etb_5frole_5fbows_2eproto__INCLUDED
