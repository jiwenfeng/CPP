// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysql.tb_role_raid.proto

#ifndef PROTOBUF_mysql_2etb_5frole_5fraid_2eproto__INCLUDED
#define PROTOBUF_mysql_2etb_5frole_5fraid_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mysql {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mysql_2etb_5frole_5fraid_2eproto();
void protobuf_AssignDesc_mysql_2etb_5frole_5fraid_2eproto();
void protobuf_ShutdownFile_mysql_2etb_5frole_5fraid_2eproto();

class tb_role_raid;

// ===================================================================

class tb_role_raid : public ::google::protobuf::Message {
 public:
  tb_role_raid();
  virtual ~tb_role_raid();

  tb_role_raid(const tb_role_raid& from);

  inline tb_role_raid& operator=(const tb_role_raid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tb_role_raid& default_instance();

  void Swap(tb_role_raid* other);

  // implements Message ----------------------------------------------

  tb_role_raid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tb_role_raid& from);
  void MergeFrom(const tb_role_raid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 raid_id = 2;
  inline bool has_raid_id() const;
  inline void clear_raid_id();
  static const int kRaidIdFieldNumber = 2;
  inline ::google::protobuf::uint32 raid_id() const;
  inline void set_raid_id(::google::protobuf::uint32 value);

  // required uint32 star_num = 3;
  inline bool has_star_num() const;
  inline void clear_star_num();
  static const int kStarNumFieldNumber = 3;
  inline ::google::protobuf::uint32 star_num() const;
  inline void set_star_num(::google::protobuf::uint32 value);

  // required uint32 fast_tick = 4;
  inline bool has_fast_tick() const;
  inline void clear_fast_tick();
  static const int kFastTickFieldNumber = 4;
  inline ::google::protobuf::uint32 fast_tick() const;
  inline void set_fast_tick(::google::protobuf::uint32 value);

  // required uint32 last_complete_time = 5;
  inline bool has_last_complete_time() const;
  inline void clear_last_complete_time();
  static const int kLastCompleteTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 last_complete_time() const;
  inline void set_last_complete_time(::google::protobuf::uint32 value);

  // required uint32 complete_count = 6;
  inline bool has_complete_count() const;
  inline void clear_complete_count();
  static const int kCompleteCountFieldNumber = 6;
  inline ::google::protobuf::uint32 complete_count() const;
  inline void set_complete_count(::google::protobuf::uint32 value);

  // required uint32 create_time = 7;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 create_time() const;
  inline void set_create_time(::google::protobuf::uint32 value);

  // required uint32 auto_time = 8;
  inline bool has_auto_time() const;
  inline void clear_auto_time();
  static const int kAutoTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 auto_time() const;
  inline void set_auto_time(::google::protobuf::uint32 value);

  // required uint32 elite_star_num = 9;
  inline bool has_elite_star_num() const;
  inline void clear_elite_star_num();
  static const int kEliteStarNumFieldNumber = 9;
  inline ::google::protobuf::uint32 elite_star_num() const;
  inline void set_elite_star_num(::google::protobuf::uint32 value);

  // required uint32 elite_fast_tick = 10;
  inline bool has_elite_fast_tick() const;
  inline void clear_elite_fast_tick();
  static const int kEliteFastTickFieldNumber = 10;
  inline ::google::protobuf::uint32 elite_fast_tick() const;
  inline void set_elite_fast_tick(::google::protobuf::uint32 value);

  // required uint32 elite_last_complete_time = 11;
  inline bool has_elite_last_complete_time() const;
  inline void clear_elite_last_complete_time();
  static const int kEliteLastCompleteTimeFieldNumber = 11;
  inline ::google::protobuf::uint32 elite_last_complete_time() const;
  inline void set_elite_last_complete_time(::google::protobuf::uint32 value);

  // required uint32 elite_complete_count = 12;
  inline bool has_elite_complete_count() const;
  inline void clear_elite_complete_count();
  static const int kEliteCompleteCountFieldNumber = 12;
  inline ::google::protobuf::uint32 elite_complete_count() const;
  inline void set_elite_complete_count(::google::protobuf::uint32 value);

  // required uint32 elite_create_time = 13;
  inline bool has_elite_create_time() const;
  inline void clear_elite_create_time();
  static const int kEliteCreateTimeFieldNumber = 13;
  inline ::google::protobuf::uint32 elite_create_time() const;
  inline void set_elite_create_time(::google::protobuf::uint32 value);

  // required uint32 elite_auto_time = 14;
  inline bool has_elite_auto_time() const;
  inline void clear_elite_auto_time();
  static const int kEliteAutoTimeFieldNumber = 14;
  inline ::google::protobuf::uint32 elite_auto_time() const;
  inline void set_elite_auto_time(::google::protobuf::uint32 value);

  // required uint32 elite_enter_count = 15;
  inline bool has_elite_enter_count() const;
  inline void clear_elite_enter_count();
  static const int kEliteEnterCountFieldNumber = 15;
  inline ::google::protobuf::uint32 elite_enter_count() const;
  inline void set_elite_enter_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mysql.tb_role_raid)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_raid_id();
  inline void clear_has_raid_id();
  inline void set_has_star_num();
  inline void clear_has_star_num();
  inline void set_has_fast_tick();
  inline void clear_has_fast_tick();
  inline void set_has_last_complete_time();
  inline void clear_has_last_complete_time();
  inline void set_has_complete_count();
  inline void clear_has_complete_count();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_auto_time();
  inline void clear_has_auto_time();
  inline void set_has_elite_star_num();
  inline void clear_has_elite_star_num();
  inline void set_has_elite_fast_tick();
  inline void clear_has_elite_fast_tick();
  inline void set_has_elite_last_complete_time();
  inline void clear_has_elite_last_complete_time();
  inline void set_has_elite_complete_count();
  inline void clear_has_elite_complete_count();
  inline void set_has_elite_create_time();
  inline void clear_has_elite_create_time();
  inline void set_has_elite_auto_time();
  inline void clear_has_elite_auto_time();
  inline void set_has_elite_enter_count();
  inline void clear_has_elite_enter_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 raid_id_;
  ::google::protobuf::uint32 star_num_;
  ::google::protobuf::uint32 fast_tick_;
  ::google::protobuf::uint32 last_complete_time_;
  ::google::protobuf::uint32 complete_count_;
  ::google::protobuf::uint32 create_time_;
  ::google::protobuf::uint32 auto_time_;
  ::google::protobuf::uint32 elite_star_num_;
  ::google::protobuf::uint32 elite_fast_tick_;
  ::google::protobuf::uint32 elite_last_complete_time_;
  ::google::protobuf::uint32 elite_complete_count_;
  ::google::protobuf::uint32 elite_create_time_;
  ::google::protobuf::uint32 elite_auto_time_;
  ::google::protobuf::uint32 elite_enter_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_mysql_2etb_5frole_5fraid_2eproto();
  friend void protobuf_AssignDesc_mysql_2etb_5frole_5fraid_2eproto();
  friend void protobuf_ShutdownFile_mysql_2etb_5frole_5fraid_2eproto();

  void InitAsDefaultInstance();
  static tb_role_raid* default_instance_;
};
// ===================================================================


// ===================================================================

// tb_role_raid

// required uint32 role_id = 1;
inline bool tb_role_raid::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tb_role_raid::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tb_role_raid::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tb_role_raid::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 tb_role_raid::role_id() const {
  return role_id_;
}
inline void tb_role_raid::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 raid_id = 2;
inline bool tb_role_raid::has_raid_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tb_role_raid::set_has_raid_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tb_role_raid::clear_has_raid_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tb_role_raid::clear_raid_id() {
  raid_id_ = 0u;
  clear_has_raid_id();
}
inline ::google::protobuf::uint32 tb_role_raid::raid_id() const {
  return raid_id_;
}
inline void tb_role_raid::set_raid_id(::google::protobuf::uint32 value) {
  set_has_raid_id();
  raid_id_ = value;
}

// required uint32 star_num = 3;
inline bool tb_role_raid::has_star_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tb_role_raid::set_has_star_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tb_role_raid::clear_has_star_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tb_role_raid::clear_star_num() {
  star_num_ = 0u;
  clear_has_star_num();
}
inline ::google::protobuf::uint32 tb_role_raid::star_num() const {
  return star_num_;
}
inline void tb_role_raid::set_star_num(::google::protobuf::uint32 value) {
  set_has_star_num();
  star_num_ = value;
}

// required uint32 fast_tick = 4;
inline bool tb_role_raid::has_fast_tick() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tb_role_raid::set_has_fast_tick() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tb_role_raid::clear_has_fast_tick() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tb_role_raid::clear_fast_tick() {
  fast_tick_ = 0u;
  clear_has_fast_tick();
}
inline ::google::protobuf::uint32 tb_role_raid::fast_tick() const {
  return fast_tick_;
}
inline void tb_role_raid::set_fast_tick(::google::protobuf::uint32 value) {
  set_has_fast_tick();
  fast_tick_ = value;
}

// required uint32 last_complete_time = 5;
inline bool tb_role_raid::has_last_complete_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tb_role_raid::set_has_last_complete_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tb_role_raid::clear_has_last_complete_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tb_role_raid::clear_last_complete_time() {
  last_complete_time_ = 0u;
  clear_has_last_complete_time();
}
inline ::google::protobuf::uint32 tb_role_raid::last_complete_time() const {
  return last_complete_time_;
}
inline void tb_role_raid::set_last_complete_time(::google::protobuf::uint32 value) {
  set_has_last_complete_time();
  last_complete_time_ = value;
}

// required uint32 complete_count = 6;
inline bool tb_role_raid::has_complete_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tb_role_raid::set_has_complete_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tb_role_raid::clear_has_complete_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tb_role_raid::clear_complete_count() {
  complete_count_ = 0u;
  clear_has_complete_count();
}
inline ::google::protobuf::uint32 tb_role_raid::complete_count() const {
  return complete_count_;
}
inline void tb_role_raid::set_complete_count(::google::protobuf::uint32 value) {
  set_has_complete_count();
  complete_count_ = value;
}

// required uint32 create_time = 7;
inline bool tb_role_raid::has_create_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void tb_role_raid::set_has_create_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void tb_role_raid::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void tb_role_raid::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 tb_role_raid::create_time() const {
  return create_time_;
}
inline void tb_role_raid::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
}

// required uint32 auto_time = 8;
inline bool tb_role_raid::has_auto_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void tb_role_raid::set_has_auto_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void tb_role_raid::clear_has_auto_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void tb_role_raid::clear_auto_time() {
  auto_time_ = 0u;
  clear_has_auto_time();
}
inline ::google::protobuf::uint32 tb_role_raid::auto_time() const {
  return auto_time_;
}
inline void tb_role_raid::set_auto_time(::google::protobuf::uint32 value) {
  set_has_auto_time();
  auto_time_ = value;
}

// required uint32 elite_star_num = 9;
inline bool tb_role_raid::has_elite_star_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void tb_role_raid::set_has_elite_star_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void tb_role_raid::clear_has_elite_star_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void tb_role_raid::clear_elite_star_num() {
  elite_star_num_ = 0u;
  clear_has_elite_star_num();
}
inline ::google::protobuf::uint32 tb_role_raid::elite_star_num() const {
  return elite_star_num_;
}
inline void tb_role_raid::set_elite_star_num(::google::protobuf::uint32 value) {
  set_has_elite_star_num();
  elite_star_num_ = value;
}

// required uint32 elite_fast_tick = 10;
inline bool tb_role_raid::has_elite_fast_tick() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void tb_role_raid::set_has_elite_fast_tick() {
  _has_bits_[0] |= 0x00000200u;
}
inline void tb_role_raid::clear_has_elite_fast_tick() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void tb_role_raid::clear_elite_fast_tick() {
  elite_fast_tick_ = 0u;
  clear_has_elite_fast_tick();
}
inline ::google::protobuf::uint32 tb_role_raid::elite_fast_tick() const {
  return elite_fast_tick_;
}
inline void tb_role_raid::set_elite_fast_tick(::google::protobuf::uint32 value) {
  set_has_elite_fast_tick();
  elite_fast_tick_ = value;
}

// required uint32 elite_last_complete_time = 11;
inline bool tb_role_raid::has_elite_last_complete_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void tb_role_raid::set_has_elite_last_complete_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void tb_role_raid::clear_has_elite_last_complete_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void tb_role_raid::clear_elite_last_complete_time() {
  elite_last_complete_time_ = 0u;
  clear_has_elite_last_complete_time();
}
inline ::google::protobuf::uint32 tb_role_raid::elite_last_complete_time() const {
  return elite_last_complete_time_;
}
inline void tb_role_raid::set_elite_last_complete_time(::google::protobuf::uint32 value) {
  set_has_elite_last_complete_time();
  elite_last_complete_time_ = value;
}

// required uint32 elite_complete_count = 12;
inline bool tb_role_raid::has_elite_complete_count() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void tb_role_raid::set_has_elite_complete_count() {
  _has_bits_[0] |= 0x00000800u;
}
inline void tb_role_raid::clear_has_elite_complete_count() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void tb_role_raid::clear_elite_complete_count() {
  elite_complete_count_ = 0u;
  clear_has_elite_complete_count();
}
inline ::google::protobuf::uint32 tb_role_raid::elite_complete_count() const {
  return elite_complete_count_;
}
inline void tb_role_raid::set_elite_complete_count(::google::protobuf::uint32 value) {
  set_has_elite_complete_count();
  elite_complete_count_ = value;
}

// required uint32 elite_create_time = 13;
inline bool tb_role_raid::has_elite_create_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void tb_role_raid::set_has_elite_create_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void tb_role_raid::clear_has_elite_create_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void tb_role_raid::clear_elite_create_time() {
  elite_create_time_ = 0u;
  clear_has_elite_create_time();
}
inline ::google::protobuf::uint32 tb_role_raid::elite_create_time() const {
  return elite_create_time_;
}
inline void tb_role_raid::set_elite_create_time(::google::protobuf::uint32 value) {
  set_has_elite_create_time();
  elite_create_time_ = value;
}

// required uint32 elite_auto_time = 14;
inline bool tb_role_raid::has_elite_auto_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void tb_role_raid::set_has_elite_auto_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void tb_role_raid::clear_has_elite_auto_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void tb_role_raid::clear_elite_auto_time() {
  elite_auto_time_ = 0u;
  clear_has_elite_auto_time();
}
inline ::google::protobuf::uint32 tb_role_raid::elite_auto_time() const {
  return elite_auto_time_;
}
inline void tb_role_raid::set_elite_auto_time(::google::protobuf::uint32 value) {
  set_has_elite_auto_time();
  elite_auto_time_ = value;
}

// required uint32 elite_enter_count = 15;
inline bool tb_role_raid::has_elite_enter_count() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void tb_role_raid::set_has_elite_enter_count() {
  _has_bits_[0] |= 0x00004000u;
}
inline void tb_role_raid::clear_has_elite_enter_count() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void tb_role_raid::clear_elite_enter_count() {
  elite_enter_count_ = 0u;
  clear_has_elite_enter_count();
}
inline ::google::protobuf::uint32 tb_role_raid::elite_enter_count() const {
  return elite_enter_count_;
}
inline void tb_role_raid::set_elite_enter_count(::google::protobuf::uint32 value) {
  set_has_elite_enter_count();
  elite_enter_count_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mysql

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mysql_2etb_5frole_5fraid_2eproto__INCLUDED
