// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysql.tb_role_status.proto

#ifndef PROTOBUF_mysql_2etb_5frole_5fstatus_2eproto__INCLUDED
#define PROTOBUF_mysql_2etb_5frole_5fstatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mysql {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mysql_2etb_5frole_5fstatus_2eproto();
void protobuf_AssignDesc_mysql_2etb_5frole_5fstatus_2eproto();
void protobuf_ShutdownFile_mysql_2etb_5frole_5fstatus_2eproto();

class tb_role_status;

// ===================================================================

class tb_role_status : public ::google::protobuf::Message {
 public:
  tb_role_status();
  virtual ~tb_role_status();

  tb_role_status(const tb_role_status& from);

  inline tb_role_status& operator=(const tb_role_status& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tb_role_status& default_instance();

  void Swap(tb_role_status* other);

  // implements Message ----------------------------------------------

  tb_role_status* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tb_role_status& from);
  void MergeFrom(const tb_role_status& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 pos_map_id = 2;
  inline bool has_pos_map_id() const;
  inline void clear_pos_map_id();
  static const int kPosMapIdFieldNumber = 2;
  inline ::google::protobuf::uint32 pos_map_id() const;
  inline void set_pos_map_id(::google::protobuf::uint32 value);

  // required uint32 pos_scene_id = 3;
  inline bool has_pos_scene_id() const;
  inline void clear_pos_scene_id();
  static const int kPosSceneIdFieldNumber = 3;
  inline ::google::protobuf::uint32 pos_scene_id() const;
  inline void set_pos_scene_id(::google::protobuf::uint32 value);

  // required uint32 pos_x = 4;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::uint32 pos_x() const;
  inline void set_pos_x(::google::protobuf::uint32 value);

  // required uint32 pos_y = 5;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 5;
  inline ::google::protobuf::uint32 pos_y() const;
  inline void set_pos_y(::google::protobuf::uint32 value);

  // required uint32 pos_z = 6;
  inline bool has_pos_z() const;
  inline void clear_pos_z();
  static const int kPosZFieldNumber = 6;
  inline ::google::protobuf::uint32 pos_z() const;
  inline void set_pos_z(::google::protobuf::uint32 value);

  // required uint32 tmp_map_id = 7;
  inline bool has_tmp_map_id() const;
  inline void clear_tmp_map_id();
  static const int kTmpMapIdFieldNumber = 7;
  inline ::google::protobuf::uint32 tmp_map_id() const;
  inline void set_tmp_map_id(::google::protobuf::uint32 value);

  // required uint32 tmp_scene_id = 8;
  inline bool has_tmp_scene_id() const;
  inline void clear_tmp_scene_id();
  static const int kTmpSceneIdFieldNumber = 8;
  inline ::google::protobuf::uint32 tmp_scene_id() const;
  inline void set_tmp_scene_id(::google::protobuf::uint32 value);

  // required uint32 tmp_x = 9;
  inline bool has_tmp_x() const;
  inline void clear_tmp_x();
  static const int kTmpXFieldNumber = 9;
  inline ::google::protobuf::uint32 tmp_x() const;
  inline void set_tmp_x(::google::protobuf::uint32 value);

  // required uint32 tmp_y = 10;
  inline bool has_tmp_y() const;
  inline void clear_tmp_y();
  static const int kTmpYFieldNumber = 10;
  inline ::google::protobuf::uint32 tmp_y() const;
  inline void set_tmp_y(::google::protobuf::uint32 value);

  // required uint32 tmp_z = 11;
  inline bool has_tmp_z() const;
  inline void clear_tmp_z();
  static const int kTmpZFieldNumber = 11;
  inline ::google::protobuf::uint32 tmp_z() const;
  inline void set_tmp_z(::google::protobuf::uint32 value);

  // required uint32 mditation = 12;
  inline bool has_mditation() const;
  inline void clear_mditation();
  static const int kMditationFieldNumber = 12;
  inline ::google::protobuf::uint32 mditation() const;
  inline void set_mditation(::google::protobuf::uint32 value);

  // required uint32 riding = 13;
  inline bool has_riding() const;
  inline void clear_riding();
  static const int kRidingFieldNumber = 13;
  inline ::google::protobuf::uint32 riding() const;
  inline void set_riding(::google::protobuf::uint32 value);

  // required uint32 findpath = 14;
  inline bool has_findpath() const;
  inline void clear_findpath();
  static const int kFindpathFieldNumber = 14;
  inline ::google::protobuf::uint32 findpath() const;
  inline void set_findpath(::google::protobuf::uint32 value);

  // required uint32 fight = 15;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 15;
  inline ::google::protobuf::uint32 fight() const;
  inline void set_fight(::google::protobuf::uint32 value);

  // required uint32 auto_play = 16;
  inline bool has_auto_play() const;
  inline void clear_auto_play();
  static const int kAutoPlayFieldNumber = 16;
  inline ::google::protobuf::uint32 auto_play() const;
  inline void set_auto_play(::google::protobuf::uint32 value);

  // required uint32 pvp_mode = 17;
  inline bool has_pvp_mode() const;
  inline void clear_pvp_mode();
  static const int kPvpModeFieldNumber = 17;
  inline ::google::protobuf::uint32 pvp_mode() const;
  inline void set_pvp_mode(::google::protobuf::uint32 value);

  // required uint32 attk_mode = 18;
  inline bool has_attk_mode() const;
  inline void clear_attk_mode();
  static const int kAttkModeFieldNumber = 18;
  inline ::google::protobuf::uint32 attk_mode() const;
  inline void set_attk_mode(::google::protobuf::uint32 value);

  // required uint32 alive = 19;
  inline bool has_alive() const;
  inline void clear_alive();
  static const int kAliveFieldNumber = 19;
  inline ::google::protobuf::uint32 alive() const;
  inline void set_alive(::google::protobuf::uint32 value);

  // required uint32 online = 20;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 20;
  inline ::google::protobuf::uint32 online() const;
  inline void set_online(::google::protobuf::uint32 value);

  // required uint32 red_goods_num = 21;
  inline bool has_red_goods_num() const;
  inline void clear_red_goods_num();
  static const int kRedGoodsNumFieldNumber = 21;
  inline ::google::protobuf::uint32 red_goods_num() const;
  inline void set_red_goods_num(::google::protobuf::uint32 value);

  // required uint32 blue_goods_num = 22;
  inline bool has_blue_goods_num() const;
  inline void clear_blue_goods_num();
  static const int kBlueGoodsNumFieldNumber = 22;
  inline ::google::protobuf::uint32 blue_goods_num() const;
  inline void set_blue_goods_num(::google::protobuf::uint32 value);

  // required uint32 complete_task_num = 23;
  inline bool has_complete_task_num() const;
  inline void clear_complete_task_num();
  static const int kCompleteTaskNumFieldNumber = 23;
  inline ::google::protobuf::uint32 complete_task_num() const;
  inline void set_complete_task_num(::google::protobuf::uint32 value);

  // required uint32 abandon_task_num = 24;
  inline bool has_abandon_task_num() const;
  inline void clear_abandon_task_num();
  static const int kAbandonTaskNumFieldNumber = 24;
  inline ::google::protobuf::uint32 abandon_task_num() const;
  inline void set_abandon_task_num(::google::protobuf::uint32 value);

  // required uint32 receve_task_num = 25;
  inline bool has_receve_task_num() const;
  inline void clear_receve_task_num();
  static const int kReceveTaskNumFieldNumber = 25;
  inline ::google::protobuf::uint32 receve_task_num() const;
  inline void set_receve_task_num(::google::protobuf::uint32 value);

  // required uint32 is_package_full = 26;
  inline bool has_is_package_full() const;
  inline void clear_is_package_full();
  static const int kIsPackageFullFieldNumber = 26;
  inline ::google::protobuf::uint32 is_package_full() const;
  inline void set_is_package_full(::google::protobuf::uint32 value);

  // required uint32 buf_furious = 27;
  inline bool has_buf_furious() const;
  inline void clear_buf_furious();
  static const int kBufFuriousFieldNumber = 27;
  inline ::google::protobuf::uint32 buf_furious() const;
  inline void set_buf_furious(::google::protobuf::uint32 value);

  // required uint32 buf_hurted = 28;
  inline bool has_buf_hurted() const;
  inline void clear_buf_hurted();
  static const int kBufHurtedFieldNumber = 28;
  inline ::google::protobuf::uint32 buf_hurted() const;
  inline void set_buf_hurted(::google::protobuf::uint32 value);

  // required uint32 buf_week = 29;
  inline bool has_buf_week() const;
  inline void clear_buf_week();
  static const int kBufWeekFieldNumber = 29;
  inline ::google::protobuf::uint32 buf_week() const;
  inline void set_buf_week(::google::protobuf::uint32 value);

  // required uint32 buf_giddy = 30;
  inline bool has_buf_giddy() const;
  inline void clear_buf_giddy();
  static const int kBufGiddyFieldNumber = 30;
  inline ::google::protobuf::uint32 buf_giddy() const;
  inline void set_buf_giddy(::google::protobuf::uint32 value);

  // required uint32 buf_faint = 31;
  inline bool has_buf_faint() const;
  inline void clear_buf_faint();
  static const int kBufFaintFieldNumber = 31;
  inline ::google::protobuf::uint32 buf_faint() const;
  inline void set_buf_faint(::google::protobuf::uint32 value);

  // required uint32 buf_fired = 32;
  inline bool has_buf_fired() const;
  inline void clear_buf_fired();
  static const int kBufFiredFieldNumber = 32;
  inline ::google::protobuf::uint32 buf_fired() const;
  inline void set_buf_fired(::google::protobuf::uint32 value);

  // required uint32 buf_posion = 33;
  inline bool has_buf_posion() const;
  inline void clear_buf_posion();
  static const int kBufPosionFieldNumber = 33;
  inline ::google::protobuf::uint32 buf_posion() const;
  inline void set_buf_posion(::google::protobuf::uint32 value);

  // required uint32 buf_blood = 34;
  inline bool has_buf_blood() const;
  inline void clear_buf_blood();
  static const int kBufBloodFieldNumber = 34;
  inline ::google::protobuf::uint32 buf_blood() const;
  inline void set_buf_blood(::google::protobuf::uint32 value);

  // required uint32 buf_injury = 35;
  inline bool has_buf_injury() const;
  inline void clear_buf_injury();
  static const int kBufInjuryFieldNumber = 35;
  inline ::google::protobuf::uint32 buf_injury() const;
  inline void set_buf_injury(::google::protobuf::uint32 value);

  // required uint32 buf_cursed = 36;
  inline bool has_buf_cursed() const;
  inline void clear_buf_cursed();
  static const int kBufCursedFieldNumber = 36;
  inline ::google::protobuf::uint32 buf_cursed() const;
  inline void set_buf_cursed(::google::protobuf::uint32 value);

  // required uint32 buf_blind = 37;
  inline bool has_buf_blind() const;
  inline void clear_buf_blind();
  static const int kBufBlindFieldNumber = 37;
  inline ::google::protobuf::uint32 buf_blind() const;
  inline void set_buf_blind(::google::protobuf::uint32 value);

  // required uint32 buf_maimed = 38;
  inline bool has_buf_maimed() const;
  inline void clear_buf_maimed();
  static const int kBufMaimedFieldNumber = 38;
  inline ::google::protobuf::uint32 buf_maimed() const;
  inline void set_buf_maimed(::google::protobuf::uint32 value);

  // required uint32 buf_silent = 39;
  inline bool has_buf_silent() const;
  inline void clear_buf_silent();
  static const int kBufSilentFieldNumber = 39;
  inline ::google::protobuf::uint32 buf_silent() const;
  inline void set_buf_silent(::google::protobuf::uint32 value);

  // required uint32 buf_disarm = 40;
  inline bool has_buf_disarm() const;
  inline void clear_buf_disarm();
  static const int kBufDisarmFieldNumber = 40;
  inline ::google::protobuf::uint32 buf_disarm() const;
  inline void set_buf_disarm(::google::protobuf::uint32 value);

  // required uint32 buf_slowly = 41;
  inline bool has_buf_slowly() const;
  inline void clear_buf_slowly();
  static const int kBufSlowlyFieldNumber = 41;
  inline ::google::protobuf::uint32 buf_slowly() const;
  inline void set_buf_slowly(::google::protobuf::uint32 value);

  // required uint32 buf_dec_harm = 42;
  inline bool has_buf_dec_harm() const;
  inline void clear_buf_dec_harm();
  static const int kBufDecHarmFieldNumber = 42;
  inline ::google::protobuf::uint32 buf_dec_harm() const;
  inline void set_buf_dec_harm(::google::protobuf::uint32 value);

  // required uint32 buf_rej_harm = 43;
  inline bool has_buf_rej_harm() const;
  inline void clear_buf_rej_harm();
  static const int kBufRejHarmFieldNumber = 43;
  inline ::google::protobuf::uint32 buf_rej_harm() const;
  inline void set_buf_rej_harm(::google::protobuf::uint32 value);

  // required uint32 buf_turn_body = 44;
  inline bool has_buf_turn_body() const;
  inline void clear_buf_turn_body();
  static const int kBufTurnBodyFieldNumber = 44;
  inline ::google::protobuf::uint32 buf_turn_body() const;
  inline void set_buf_turn_body(::google::protobuf::uint32 value);

  // required uint32 strength = 45;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 45;
  inline ::google::protobuf::uint32 strength() const;
  inline void set_strength(::google::protobuf::uint32 value);

  // required uint32 status = 46;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 46;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 created_date = 47;
  inline bool has_created_date() const;
  inline void clear_created_date();
  static const int kCreatedDateFieldNumber = 47;
  inline ::google::protobuf::uint32 created_date() const;
  inline void set_created_date(::google::protobuf::uint32 value);

  // required uint32 tmp_scene_inst_id = 48;
  inline bool has_tmp_scene_inst_id() const;
  inline void clear_tmp_scene_inst_id();
  static const int kTmpSceneInstIdFieldNumber = 48;
  inline ::google::protobuf::uint32 tmp_scene_inst_id() const;
  inline void set_tmp_scene_inst_id(::google::protobuf::uint32 value);

  // required uint32 tmp_scene_inst_time = 49;
  inline bool has_tmp_scene_inst_time() const;
  inline void clear_tmp_scene_inst_time();
  static const int kTmpSceneInstTimeFieldNumber = 49;
  inline ::google::protobuf::uint32 tmp_scene_inst_time() const;
  inline void set_tmp_scene_inst_time(::google::protobuf::uint32 value);

  // required uint32 spa_action_times = 50;
  inline bool has_spa_action_times() const;
  inline void clear_spa_action_times();
  static const int kSpaActionTimesFieldNumber = 50;
  inline ::google::protobuf::uint32 spa_action_times() const;
  inline void set_spa_action_times(::google::protobuf::uint32 value);

  // required uint32 spa_last_time = 51;
  inline bool has_spa_last_time() const;
  inline void clear_spa_last_time();
  static const int kSpaLastTimeFieldNumber = 51;
  inline ::google::protobuf::uint32 spa_last_time() const;
  inline void set_spa_last_time(::google::protobuf::uint32 value);

  // required uint32 arena_last_chall_time = 52;
  inline bool has_arena_last_chall_time() const;
  inline void clear_arena_last_chall_time();
  static const int kArenaLastChallTimeFieldNumber = 52;
  inline ::google::protobuf::uint32 arena_last_chall_time() const;
  inline void set_arena_last_chall_time(::google::protobuf::uint32 value);

  // required uint32 arena_has_times = 53;
  inline bool has_arena_has_times() const;
  inline void clear_arena_has_times();
  static const int kArenaHasTimesFieldNumber = 53;
  inline ::google::protobuf::uint32 arena_has_times() const;
  inline void set_arena_has_times(::google::protobuf::uint32 value);

  // required uint32 arena_buy_times = 54;
  inline bool has_arena_buy_times() const;
  inline void clear_arena_buy_times();
  static const int kArenaBuyTimesFieldNumber = 54;
  inline ::google::protobuf::uint32 arena_buy_times() const;
  inline void set_arena_buy_times(::google::protobuf::uint32 value);

  // required uint32 test_rewards = 55;
  inline bool has_test_rewards() const;
  inline void clear_test_rewards();
  static const int kTestRewardsFieldNumber = 55;
  inline ::google::protobuf::uint32 test_rewards() const;
  inline void set_test_rewards(::google::protobuf::uint32 value);

  // required uint32 unlimited_fly = 56;
  inline bool has_unlimited_fly() const;
  inline void clear_unlimited_fly();
  static const int kUnlimitedFlyFieldNumber = 56;
  inline ::google::protobuf::uint32 unlimited_fly() const;
  inline void set_unlimited_fly(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mysql.tb_role_status)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_pos_map_id();
  inline void clear_has_pos_map_id();
  inline void set_has_pos_scene_id();
  inline void clear_has_pos_scene_id();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_pos_z();
  inline void clear_has_pos_z();
  inline void set_has_tmp_map_id();
  inline void clear_has_tmp_map_id();
  inline void set_has_tmp_scene_id();
  inline void clear_has_tmp_scene_id();
  inline void set_has_tmp_x();
  inline void clear_has_tmp_x();
  inline void set_has_tmp_y();
  inline void clear_has_tmp_y();
  inline void set_has_tmp_z();
  inline void clear_has_tmp_z();
  inline void set_has_mditation();
  inline void clear_has_mditation();
  inline void set_has_riding();
  inline void clear_has_riding();
  inline void set_has_findpath();
  inline void clear_has_findpath();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_auto_play();
  inline void clear_has_auto_play();
  inline void set_has_pvp_mode();
  inline void clear_has_pvp_mode();
  inline void set_has_attk_mode();
  inline void clear_has_attk_mode();
  inline void set_has_alive();
  inline void clear_has_alive();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_red_goods_num();
  inline void clear_has_red_goods_num();
  inline void set_has_blue_goods_num();
  inline void clear_has_blue_goods_num();
  inline void set_has_complete_task_num();
  inline void clear_has_complete_task_num();
  inline void set_has_abandon_task_num();
  inline void clear_has_abandon_task_num();
  inline void set_has_receve_task_num();
  inline void clear_has_receve_task_num();
  inline void set_has_is_package_full();
  inline void clear_has_is_package_full();
  inline void set_has_buf_furious();
  inline void clear_has_buf_furious();
  inline void set_has_buf_hurted();
  inline void clear_has_buf_hurted();
  inline void set_has_buf_week();
  inline void clear_has_buf_week();
  inline void set_has_buf_giddy();
  inline void clear_has_buf_giddy();
  inline void set_has_buf_faint();
  inline void clear_has_buf_faint();
  inline void set_has_buf_fired();
  inline void clear_has_buf_fired();
  inline void set_has_buf_posion();
  inline void clear_has_buf_posion();
  inline void set_has_buf_blood();
  inline void clear_has_buf_blood();
  inline void set_has_buf_injury();
  inline void clear_has_buf_injury();
  inline void set_has_buf_cursed();
  inline void clear_has_buf_cursed();
  inline void set_has_buf_blind();
  inline void clear_has_buf_blind();
  inline void set_has_buf_maimed();
  inline void clear_has_buf_maimed();
  inline void set_has_buf_silent();
  inline void clear_has_buf_silent();
  inline void set_has_buf_disarm();
  inline void clear_has_buf_disarm();
  inline void set_has_buf_slowly();
  inline void clear_has_buf_slowly();
  inline void set_has_buf_dec_harm();
  inline void clear_has_buf_dec_harm();
  inline void set_has_buf_rej_harm();
  inline void clear_has_buf_rej_harm();
  inline void set_has_buf_turn_body();
  inline void clear_has_buf_turn_body();
  inline void set_has_strength();
  inline void clear_has_strength();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_created_date();
  inline void clear_has_created_date();
  inline void set_has_tmp_scene_inst_id();
  inline void clear_has_tmp_scene_inst_id();
  inline void set_has_tmp_scene_inst_time();
  inline void clear_has_tmp_scene_inst_time();
  inline void set_has_spa_action_times();
  inline void clear_has_spa_action_times();
  inline void set_has_spa_last_time();
  inline void clear_has_spa_last_time();
  inline void set_has_arena_last_chall_time();
  inline void clear_has_arena_last_chall_time();
  inline void set_has_arena_has_times();
  inline void clear_has_arena_has_times();
  inline void set_has_arena_buy_times();
  inline void clear_has_arena_buy_times();
  inline void set_has_test_rewards();
  inline void clear_has_test_rewards();
  inline void set_has_unlimited_fly();
  inline void clear_has_unlimited_fly();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 pos_map_id_;
  ::google::protobuf::uint32 pos_scene_id_;
  ::google::protobuf::uint32 pos_x_;
  ::google::protobuf::uint32 pos_y_;
  ::google::protobuf::uint32 pos_z_;
  ::google::protobuf::uint32 tmp_map_id_;
  ::google::protobuf::uint32 tmp_scene_id_;
  ::google::protobuf::uint32 tmp_x_;
  ::google::protobuf::uint32 tmp_y_;
  ::google::protobuf::uint32 tmp_z_;
  ::google::protobuf::uint32 mditation_;
  ::google::protobuf::uint32 riding_;
  ::google::protobuf::uint32 findpath_;
  ::google::protobuf::uint32 fight_;
  ::google::protobuf::uint32 auto_play_;
  ::google::protobuf::uint32 pvp_mode_;
  ::google::protobuf::uint32 attk_mode_;
  ::google::protobuf::uint32 alive_;
  ::google::protobuf::uint32 online_;
  ::google::protobuf::uint32 red_goods_num_;
  ::google::protobuf::uint32 blue_goods_num_;
  ::google::protobuf::uint32 complete_task_num_;
  ::google::protobuf::uint32 abandon_task_num_;
  ::google::protobuf::uint32 receve_task_num_;
  ::google::protobuf::uint32 is_package_full_;
  ::google::protobuf::uint32 buf_furious_;
  ::google::protobuf::uint32 buf_hurted_;
  ::google::protobuf::uint32 buf_week_;
  ::google::protobuf::uint32 buf_giddy_;
  ::google::protobuf::uint32 buf_faint_;
  ::google::protobuf::uint32 buf_fired_;
  ::google::protobuf::uint32 buf_posion_;
  ::google::protobuf::uint32 buf_blood_;
  ::google::protobuf::uint32 buf_injury_;
  ::google::protobuf::uint32 buf_cursed_;
  ::google::protobuf::uint32 buf_blind_;
  ::google::protobuf::uint32 buf_maimed_;
  ::google::protobuf::uint32 buf_silent_;
  ::google::protobuf::uint32 buf_disarm_;
  ::google::protobuf::uint32 buf_slowly_;
  ::google::protobuf::uint32 buf_dec_harm_;
  ::google::protobuf::uint32 buf_rej_harm_;
  ::google::protobuf::uint32 buf_turn_body_;
  ::google::protobuf::uint32 strength_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 created_date_;
  ::google::protobuf::uint32 tmp_scene_inst_id_;
  ::google::protobuf::uint32 tmp_scene_inst_time_;
  ::google::protobuf::uint32 spa_action_times_;
  ::google::protobuf::uint32 spa_last_time_;
  ::google::protobuf::uint32 arena_last_chall_time_;
  ::google::protobuf::uint32 arena_has_times_;
  ::google::protobuf::uint32 arena_buy_times_;
  ::google::protobuf::uint32 test_rewards_;
  ::google::protobuf::uint32 unlimited_fly_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(56 + 31) / 32];

  friend void  protobuf_AddDesc_mysql_2etb_5frole_5fstatus_2eproto();
  friend void protobuf_AssignDesc_mysql_2etb_5frole_5fstatus_2eproto();
  friend void protobuf_ShutdownFile_mysql_2etb_5frole_5fstatus_2eproto();

  void InitAsDefaultInstance();
  static tb_role_status* default_instance_;
};
// ===================================================================


// ===================================================================

// tb_role_status

// required uint32 role_id = 1;
inline bool tb_role_status::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tb_role_status::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tb_role_status::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tb_role_status::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 tb_role_status::role_id() const {
  return role_id_;
}
inline void tb_role_status::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 pos_map_id = 2;
inline bool tb_role_status::has_pos_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tb_role_status::set_has_pos_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tb_role_status::clear_has_pos_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tb_role_status::clear_pos_map_id() {
  pos_map_id_ = 0u;
  clear_has_pos_map_id();
}
inline ::google::protobuf::uint32 tb_role_status::pos_map_id() const {
  return pos_map_id_;
}
inline void tb_role_status::set_pos_map_id(::google::protobuf::uint32 value) {
  set_has_pos_map_id();
  pos_map_id_ = value;
}

// required uint32 pos_scene_id = 3;
inline bool tb_role_status::has_pos_scene_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tb_role_status::set_has_pos_scene_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tb_role_status::clear_has_pos_scene_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tb_role_status::clear_pos_scene_id() {
  pos_scene_id_ = 0u;
  clear_has_pos_scene_id();
}
inline ::google::protobuf::uint32 tb_role_status::pos_scene_id() const {
  return pos_scene_id_;
}
inline void tb_role_status::set_pos_scene_id(::google::protobuf::uint32 value) {
  set_has_pos_scene_id();
  pos_scene_id_ = value;
}

// required uint32 pos_x = 4;
inline bool tb_role_status::has_pos_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tb_role_status::set_has_pos_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tb_role_status::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tb_role_status::clear_pos_x() {
  pos_x_ = 0u;
  clear_has_pos_x();
}
inline ::google::protobuf::uint32 tb_role_status::pos_x() const {
  return pos_x_;
}
inline void tb_role_status::set_pos_x(::google::protobuf::uint32 value) {
  set_has_pos_x();
  pos_x_ = value;
}

// required uint32 pos_y = 5;
inline bool tb_role_status::has_pos_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tb_role_status::set_has_pos_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tb_role_status::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tb_role_status::clear_pos_y() {
  pos_y_ = 0u;
  clear_has_pos_y();
}
inline ::google::protobuf::uint32 tb_role_status::pos_y() const {
  return pos_y_;
}
inline void tb_role_status::set_pos_y(::google::protobuf::uint32 value) {
  set_has_pos_y();
  pos_y_ = value;
}

// required uint32 pos_z = 6;
inline bool tb_role_status::has_pos_z() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tb_role_status::set_has_pos_z() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tb_role_status::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tb_role_status::clear_pos_z() {
  pos_z_ = 0u;
  clear_has_pos_z();
}
inline ::google::protobuf::uint32 tb_role_status::pos_z() const {
  return pos_z_;
}
inline void tb_role_status::set_pos_z(::google::protobuf::uint32 value) {
  set_has_pos_z();
  pos_z_ = value;
}

// required uint32 tmp_map_id = 7;
inline bool tb_role_status::has_tmp_map_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void tb_role_status::set_has_tmp_map_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void tb_role_status::clear_has_tmp_map_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void tb_role_status::clear_tmp_map_id() {
  tmp_map_id_ = 0u;
  clear_has_tmp_map_id();
}
inline ::google::protobuf::uint32 tb_role_status::tmp_map_id() const {
  return tmp_map_id_;
}
inline void tb_role_status::set_tmp_map_id(::google::protobuf::uint32 value) {
  set_has_tmp_map_id();
  tmp_map_id_ = value;
}

// required uint32 tmp_scene_id = 8;
inline bool tb_role_status::has_tmp_scene_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void tb_role_status::set_has_tmp_scene_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void tb_role_status::clear_has_tmp_scene_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void tb_role_status::clear_tmp_scene_id() {
  tmp_scene_id_ = 0u;
  clear_has_tmp_scene_id();
}
inline ::google::protobuf::uint32 tb_role_status::tmp_scene_id() const {
  return tmp_scene_id_;
}
inline void tb_role_status::set_tmp_scene_id(::google::protobuf::uint32 value) {
  set_has_tmp_scene_id();
  tmp_scene_id_ = value;
}

// required uint32 tmp_x = 9;
inline bool tb_role_status::has_tmp_x() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void tb_role_status::set_has_tmp_x() {
  _has_bits_[0] |= 0x00000100u;
}
inline void tb_role_status::clear_has_tmp_x() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void tb_role_status::clear_tmp_x() {
  tmp_x_ = 0u;
  clear_has_tmp_x();
}
inline ::google::protobuf::uint32 tb_role_status::tmp_x() const {
  return tmp_x_;
}
inline void tb_role_status::set_tmp_x(::google::protobuf::uint32 value) {
  set_has_tmp_x();
  tmp_x_ = value;
}

// required uint32 tmp_y = 10;
inline bool tb_role_status::has_tmp_y() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void tb_role_status::set_has_tmp_y() {
  _has_bits_[0] |= 0x00000200u;
}
inline void tb_role_status::clear_has_tmp_y() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void tb_role_status::clear_tmp_y() {
  tmp_y_ = 0u;
  clear_has_tmp_y();
}
inline ::google::protobuf::uint32 tb_role_status::tmp_y() const {
  return tmp_y_;
}
inline void tb_role_status::set_tmp_y(::google::protobuf::uint32 value) {
  set_has_tmp_y();
  tmp_y_ = value;
}

// required uint32 tmp_z = 11;
inline bool tb_role_status::has_tmp_z() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void tb_role_status::set_has_tmp_z() {
  _has_bits_[0] |= 0x00000400u;
}
inline void tb_role_status::clear_has_tmp_z() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void tb_role_status::clear_tmp_z() {
  tmp_z_ = 0u;
  clear_has_tmp_z();
}
inline ::google::protobuf::uint32 tb_role_status::tmp_z() const {
  return tmp_z_;
}
inline void tb_role_status::set_tmp_z(::google::protobuf::uint32 value) {
  set_has_tmp_z();
  tmp_z_ = value;
}

// required uint32 mditation = 12;
inline bool tb_role_status::has_mditation() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void tb_role_status::set_has_mditation() {
  _has_bits_[0] |= 0x00000800u;
}
inline void tb_role_status::clear_has_mditation() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void tb_role_status::clear_mditation() {
  mditation_ = 0u;
  clear_has_mditation();
}
inline ::google::protobuf::uint32 tb_role_status::mditation() const {
  return mditation_;
}
inline void tb_role_status::set_mditation(::google::protobuf::uint32 value) {
  set_has_mditation();
  mditation_ = value;
}

// required uint32 riding = 13;
inline bool tb_role_status::has_riding() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void tb_role_status::set_has_riding() {
  _has_bits_[0] |= 0x00001000u;
}
inline void tb_role_status::clear_has_riding() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void tb_role_status::clear_riding() {
  riding_ = 0u;
  clear_has_riding();
}
inline ::google::protobuf::uint32 tb_role_status::riding() const {
  return riding_;
}
inline void tb_role_status::set_riding(::google::protobuf::uint32 value) {
  set_has_riding();
  riding_ = value;
}

// required uint32 findpath = 14;
inline bool tb_role_status::has_findpath() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void tb_role_status::set_has_findpath() {
  _has_bits_[0] |= 0x00002000u;
}
inline void tb_role_status::clear_has_findpath() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void tb_role_status::clear_findpath() {
  findpath_ = 0u;
  clear_has_findpath();
}
inline ::google::protobuf::uint32 tb_role_status::findpath() const {
  return findpath_;
}
inline void tb_role_status::set_findpath(::google::protobuf::uint32 value) {
  set_has_findpath();
  findpath_ = value;
}

// required uint32 fight = 15;
inline bool tb_role_status::has_fight() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void tb_role_status::set_has_fight() {
  _has_bits_[0] |= 0x00004000u;
}
inline void tb_role_status::clear_has_fight() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void tb_role_status::clear_fight() {
  fight_ = 0u;
  clear_has_fight();
}
inline ::google::protobuf::uint32 tb_role_status::fight() const {
  return fight_;
}
inline void tb_role_status::set_fight(::google::protobuf::uint32 value) {
  set_has_fight();
  fight_ = value;
}

// required uint32 auto_play = 16;
inline bool tb_role_status::has_auto_play() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void tb_role_status::set_has_auto_play() {
  _has_bits_[0] |= 0x00008000u;
}
inline void tb_role_status::clear_has_auto_play() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void tb_role_status::clear_auto_play() {
  auto_play_ = 0u;
  clear_has_auto_play();
}
inline ::google::protobuf::uint32 tb_role_status::auto_play() const {
  return auto_play_;
}
inline void tb_role_status::set_auto_play(::google::protobuf::uint32 value) {
  set_has_auto_play();
  auto_play_ = value;
}

// required uint32 pvp_mode = 17;
inline bool tb_role_status::has_pvp_mode() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void tb_role_status::set_has_pvp_mode() {
  _has_bits_[0] |= 0x00010000u;
}
inline void tb_role_status::clear_has_pvp_mode() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void tb_role_status::clear_pvp_mode() {
  pvp_mode_ = 0u;
  clear_has_pvp_mode();
}
inline ::google::protobuf::uint32 tb_role_status::pvp_mode() const {
  return pvp_mode_;
}
inline void tb_role_status::set_pvp_mode(::google::protobuf::uint32 value) {
  set_has_pvp_mode();
  pvp_mode_ = value;
}

// required uint32 attk_mode = 18;
inline bool tb_role_status::has_attk_mode() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void tb_role_status::set_has_attk_mode() {
  _has_bits_[0] |= 0x00020000u;
}
inline void tb_role_status::clear_has_attk_mode() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void tb_role_status::clear_attk_mode() {
  attk_mode_ = 0u;
  clear_has_attk_mode();
}
inline ::google::protobuf::uint32 tb_role_status::attk_mode() const {
  return attk_mode_;
}
inline void tb_role_status::set_attk_mode(::google::protobuf::uint32 value) {
  set_has_attk_mode();
  attk_mode_ = value;
}

// required uint32 alive = 19;
inline bool tb_role_status::has_alive() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void tb_role_status::set_has_alive() {
  _has_bits_[0] |= 0x00040000u;
}
inline void tb_role_status::clear_has_alive() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void tb_role_status::clear_alive() {
  alive_ = 0u;
  clear_has_alive();
}
inline ::google::protobuf::uint32 tb_role_status::alive() const {
  return alive_;
}
inline void tb_role_status::set_alive(::google::protobuf::uint32 value) {
  set_has_alive();
  alive_ = value;
}

// required uint32 online = 20;
inline bool tb_role_status::has_online() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void tb_role_status::set_has_online() {
  _has_bits_[0] |= 0x00080000u;
}
inline void tb_role_status::clear_has_online() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void tb_role_status::clear_online() {
  online_ = 0u;
  clear_has_online();
}
inline ::google::protobuf::uint32 tb_role_status::online() const {
  return online_;
}
inline void tb_role_status::set_online(::google::protobuf::uint32 value) {
  set_has_online();
  online_ = value;
}

// required uint32 red_goods_num = 21;
inline bool tb_role_status::has_red_goods_num() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void tb_role_status::set_has_red_goods_num() {
  _has_bits_[0] |= 0x00100000u;
}
inline void tb_role_status::clear_has_red_goods_num() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void tb_role_status::clear_red_goods_num() {
  red_goods_num_ = 0u;
  clear_has_red_goods_num();
}
inline ::google::protobuf::uint32 tb_role_status::red_goods_num() const {
  return red_goods_num_;
}
inline void tb_role_status::set_red_goods_num(::google::protobuf::uint32 value) {
  set_has_red_goods_num();
  red_goods_num_ = value;
}

// required uint32 blue_goods_num = 22;
inline bool tb_role_status::has_blue_goods_num() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void tb_role_status::set_has_blue_goods_num() {
  _has_bits_[0] |= 0x00200000u;
}
inline void tb_role_status::clear_has_blue_goods_num() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void tb_role_status::clear_blue_goods_num() {
  blue_goods_num_ = 0u;
  clear_has_blue_goods_num();
}
inline ::google::protobuf::uint32 tb_role_status::blue_goods_num() const {
  return blue_goods_num_;
}
inline void tb_role_status::set_blue_goods_num(::google::protobuf::uint32 value) {
  set_has_blue_goods_num();
  blue_goods_num_ = value;
}

// required uint32 complete_task_num = 23;
inline bool tb_role_status::has_complete_task_num() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void tb_role_status::set_has_complete_task_num() {
  _has_bits_[0] |= 0x00400000u;
}
inline void tb_role_status::clear_has_complete_task_num() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void tb_role_status::clear_complete_task_num() {
  complete_task_num_ = 0u;
  clear_has_complete_task_num();
}
inline ::google::protobuf::uint32 tb_role_status::complete_task_num() const {
  return complete_task_num_;
}
inline void tb_role_status::set_complete_task_num(::google::protobuf::uint32 value) {
  set_has_complete_task_num();
  complete_task_num_ = value;
}

// required uint32 abandon_task_num = 24;
inline bool tb_role_status::has_abandon_task_num() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void tb_role_status::set_has_abandon_task_num() {
  _has_bits_[0] |= 0x00800000u;
}
inline void tb_role_status::clear_has_abandon_task_num() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void tb_role_status::clear_abandon_task_num() {
  abandon_task_num_ = 0u;
  clear_has_abandon_task_num();
}
inline ::google::protobuf::uint32 tb_role_status::abandon_task_num() const {
  return abandon_task_num_;
}
inline void tb_role_status::set_abandon_task_num(::google::protobuf::uint32 value) {
  set_has_abandon_task_num();
  abandon_task_num_ = value;
}

// required uint32 receve_task_num = 25;
inline bool tb_role_status::has_receve_task_num() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void tb_role_status::set_has_receve_task_num() {
  _has_bits_[0] |= 0x01000000u;
}
inline void tb_role_status::clear_has_receve_task_num() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void tb_role_status::clear_receve_task_num() {
  receve_task_num_ = 0u;
  clear_has_receve_task_num();
}
inline ::google::protobuf::uint32 tb_role_status::receve_task_num() const {
  return receve_task_num_;
}
inline void tb_role_status::set_receve_task_num(::google::protobuf::uint32 value) {
  set_has_receve_task_num();
  receve_task_num_ = value;
}

// required uint32 is_package_full = 26;
inline bool tb_role_status::has_is_package_full() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void tb_role_status::set_has_is_package_full() {
  _has_bits_[0] |= 0x02000000u;
}
inline void tb_role_status::clear_has_is_package_full() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void tb_role_status::clear_is_package_full() {
  is_package_full_ = 0u;
  clear_has_is_package_full();
}
inline ::google::protobuf::uint32 tb_role_status::is_package_full() const {
  return is_package_full_;
}
inline void tb_role_status::set_is_package_full(::google::protobuf::uint32 value) {
  set_has_is_package_full();
  is_package_full_ = value;
}

// required uint32 buf_furious = 27;
inline bool tb_role_status::has_buf_furious() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void tb_role_status::set_has_buf_furious() {
  _has_bits_[0] |= 0x04000000u;
}
inline void tb_role_status::clear_has_buf_furious() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void tb_role_status::clear_buf_furious() {
  buf_furious_ = 0u;
  clear_has_buf_furious();
}
inline ::google::protobuf::uint32 tb_role_status::buf_furious() const {
  return buf_furious_;
}
inline void tb_role_status::set_buf_furious(::google::protobuf::uint32 value) {
  set_has_buf_furious();
  buf_furious_ = value;
}

// required uint32 buf_hurted = 28;
inline bool tb_role_status::has_buf_hurted() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void tb_role_status::set_has_buf_hurted() {
  _has_bits_[0] |= 0x08000000u;
}
inline void tb_role_status::clear_has_buf_hurted() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void tb_role_status::clear_buf_hurted() {
  buf_hurted_ = 0u;
  clear_has_buf_hurted();
}
inline ::google::protobuf::uint32 tb_role_status::buf_hurted() const {
  return buf_hurted_;
}
inline void tb_role_status::set_buf_hurted(::google::protobuf::uint32 value) {
  set_has_buf_hurted();
  buf_hurted_ = value;
}

// required uint32 buf_week = 29;
inline bool tb_role_status::has_buf_week() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void tb_role_status::set_has_buf_week() {
  _has_bits_[0] |= 0x10000000u;
}
inline void tb_role_status::clear_has_buf_week() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void tb_role_status::clear_buf_week() {
  buf_week_ = 0u;
  clear_has_buf_week();
}
inline ::google::protobuf::uint32 tb_role_status::buf_week() const {
  return buf_week_;
}
inline void tb_role_status::set_buf_week(::google::protobuf::uint32 value) {
  set_has_buf_week();
  buf_week_ = value;
}

// required uint32 buf_giddy = 30;
inline bool tb_role_status::has_buf_giddy() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void tb_role_status::set_has_buf_giddy() {
  _has_bits_[0] |= 0x20000000u;
}
inline void tb_role_status::clear_has_buf_giddy() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void tb_role_status::clear_buf_giddy() {
  buf_giddy_ = 0u;
  clear_has_buf_giddy();
}
inline ::google::protobuf::uint32 tb_role_status::buf_giddy() const {
  return buf_giddy_;
}
inline void tb_role_status::set_buf_giddy(::google::protobuf::uint32 value) {
  set_has_buf_giddy();
  buf_giddy_ = value;
}

// required uint32 buf_faint = 31;
inline bool tb_role_status::has_buf_faint() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void tb_role_status::set_has_buf_faint() {
  _has_bits_[0] |= 0x40000000u;
}
inline void tb_role_status::clear_has_buf_faint() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void tb_role_status::clear_buf_faint() {
  buf_faint_ = 0u;
  clear_has_buf_faint();
}
inline ::google::protobuf::uint32 tb_role_status::buf_faint() const {
  return buf_faint_;
}
inline void tb_role_status::set_buf_faint(::google::protobuf::uint32 value) {
  set_has_buf_faint();
  buf_faint_ = value;
}

// required uint32 buf_fired = 32;
inline bool tb_role_status::has_buf_fired() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void tb_role_status::set_has_buf_fired() {
  _has_bits_[0] |= 0x80000000u;
}
inline void tb_role_status::clear_has_buf_fired() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void tb_role_status::clear_buf_fired() {
  buf_fired_ = 0u;
  clear_has_buf_fired();
}
inline ::google::protobuf::uint32 tb_role_status::buf_fired() const {
  return buf_fired_;
}
inline void tb_role_status::set_buf_fired(::google::protobuf::uint32 value) {
  set_has_buf_fired();
  buf_fired_ = value;
}

// required uint32 buf_posion = 33;
inline bool tb_role_status::has_buf_posion() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void tb_role_status::set_has_buf_posion() {
  _has_bits_[1] |= 0x00000001u;
}
inline void tb_role_status::clear_has_buf_posion() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void tb_role_status::clear_buf_posion() {
  buf_posion_ = 0u;
  clear_has_buf_posion();
}
inline ::google::protobuf::uint32 tb_role_status::buf_posion() const {
  return buf_posion_;
}
inline void tb_role_status::set_buf_posion(::google::protobuf::uint32 value) {
  set_has_buf_posion();
  buf_posion_ = value;
}

// required uint32 buf_blood = 34;
inline bool tb_role_status::has_buf_blood() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void tb_role_status::set_has_buf_blood() {
  _has_bits_[1] |= 0x00000002u;
}
inline void tb_role_status::clear_has_buf_blood() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void tb_role_status::clear_buf_blood() {
  buf_blood_ = 0u;
  clear_has_buf_blood();
}
inline ::google::protobuf::uint32 tb_role_status::buf_blood() const {
  return buf_blood_;
}
inline void tb_role_status::set_buf_blood(::google::protobuf::uint32 value) {
  set_has_buf_blood();
  buf_blood_ = value;
}

// required uint32 buf_injury = 35;
inline bool tb_role_status::has_buf_injury() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void tb_role_status::set_has_buf_injury() {
  _has_bits_[1] |= 0x00000004u;
}
inline void tb_role_status::clear_has_buf_injury() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void tb_role_status::clear_buf_injury() {
  buf_injury_ = 0u;
  clear_has_buf_injury();
}
inline ::google::protobuf::uint32 tb_role_status::buf_injury() const {
  return buf_injury_;
}
inline void tb_role_status::set_buf_injury(::google::protobuf::uint32 value) {
  set_has_buf_injury();
  buf_injury_ = value;
}

// required uint32 buf_cursed = 36;
inline bool tb_role_status::has_buf_cursed() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void tb_role_status::set_has_buf_cursed() {
  _has_bits_[1] |= 0x00000008u;
}
inline void tb_role_status::clear_has_buf_cursed() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void tb_role_status::clear_buf_cursed() {
  buf_cursed_ = 0u;
  clear_has_buf_cursed();
}
inline ::google::protobuf::uint32 tb_role_status::buf_cursed() const {
  return buf_cursed_;
}
inline void tb_role_status::set_buf_cursed(::google::protobuf::uint32 value) {
  set_has_buf_cursed();
  buf_cursed_ = value;
}

// required uint32 buf_blind = 37;
inline bool tb_role_status::has_buf_blind() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void tb_role_status::set_has_buf_blind() {
  _has_bits_[1] |= 0x00000010u;
}
inline void tb_role_status::clear_has_buf_blind() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void tb_role_status::clear_buf_blind() {
  buf_blind_ = 0u;
  clear_has_buf_blind();
}
inline ::google::protobuf::uint32 tb_role_status::buf_blind() const {
  return buf_blind_;
}
inline void tb_role_status::set_buf_blind(::google::protobuf::uint32 value) {
  set_has_buf_blind();
  buf_blind_ = value;
}

// required uint32 buf_maimed = 38;
inline bool tb_role_status::has_buf_maimed() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void tb_role_status::set_has_buf_maimed() {
  _has_bits_[1] |= 0x00000020u;
}
inline void tb_role_status::clear_has_buf_maimed() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void tb_role_status::clear_buf_maimed() {
  buf_maimed_ = 0u;
  clear_has_buf_maimed();
}
inline ::google::protobuf::uint32 tb_role_status::buf_maimed() const {
  return buf_maimed_;
}
inline void tb_role_status::set_buf_maimed(::google::protobuf::uint32 value) {
  set_has_buf_maimed();
  buf_maimed_ = value;
}

// required uint32 buf_silent = 39;
inline bool tb_role_status::has_buf_silent() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void tb_role_status::set_has_buf_silent() {
  _has_bits_[1] |= 0x00000040u;
}
inline void tb_role_status::clear_has_buf_silent() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void tb_role_status::clear_buf_silent() {
  buf_silent_ = 0u;
  clear_has_buf_silent();
}
inline ::google::protobuf::uint32 tb_role_status::buf_silent() const {
  return buf_silent_;
}
inline void tb_role_status::set_buf_silent(::google::protobuf::uint32 value) {
  set_has_buf_silent();
  buf_silent_ = value;
}

// required uint32 buf_disarm = 40;
inline bool tb_role_status::has_buf_disarm() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void tb_role_status::set_has_buf_disarm() {
  _has_bits_[1] |= 0x00000080u;
}
inline void tb_role_status::clear_has_buf_disarm() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void tb_role_status::clear_buf_disarm() {
  buf_disarm_ = 0u;
  clear_has_buf_disarm();
}
inline ::google::protobuf::uint32 tb_role_status::buf_disarm() const {
  return buf_disarm_;
}
inline void tb_role_status::set_buf_disarm(::google::protobuf::uint32 value) {
  set_has_buf_disarm();
  buf_disarm_ = value;
}

// required uint32 buf_slowly = 41;
inline bool tb_role_status::has_buf_slowly() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void tb_role_status::set_has_buf_slowly() {
  _has_bits_[1] |= 0x00000100u;
}
inline void tb_role_status::clear_has_buf_slowly() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void tb_role_status::clear_buf_slowly() {
  buf_slowly_ = 0u;
  clear_has_buf_slowly();
}
inline ::google::protobuf::uint32 tb_role_status::buf_slowly() const {
  return buf_slowly_;
}
inline void tb_role_status::set_buf_slowly(::google::protobuf::uint32 value) {
  set_has_buf_slowly();
  buf_slowly_ = value;
}

// required uint32 buf_dec_harm = 42;
inline bool tb_role_status::has_buf_dec_harm() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void tb_role_status::set_has_buf_dec_harm() {
  _has_bits_[1] |= 0x00000200u;
}
inline void tb_role_status::clear_has_buf_dec_harm() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void tb_role_status::clear_buf_dec_harm() {
  buf_dec_harm_ = 0u;
  clear_has_buf_dec_harm();
}
inline ::google::protobuf::uint32 tb_role_status::buf_dec_harm() const {
  return buf_dec_harm_;
}
inline void tb_role_status::set_buf_dec_harm(::google::protobuf::uint32 value) {
  set_has_buf_dec_harm();
  buf_dec_harm_ = value;
}

// required uint32 buf_rej_harm = 43;
inline bool tb_role_status::has_buf_rej_harm() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void tb_role_status::set_has_buf_rej_harm() {
  _has_bits_[1] |= 0x00000400u;
}
inline void tb_role_status::clear_has_buf_rej_harm() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void tb_role_status::clear_buf_rej_harm() {
  buf_rej_harm_ = 0u;
  clear_has_buf_rej_harm();
}
inline ::google::protobuf::uint32 tb_role_status::buf_rej_harm() const {
  return buf_rej_harm_;
}
inline void tb_role_status::set_buf_rej_harm(::google::protobuf::uint32 value) {
  set_has_buf_rej_harm();
  buf_rej_harm_ = value;
}

// required uint32 buf_turn_body = 44;
inline bool tb_role_status::has_buf_turn_body() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void tb_role_status::set_has_buf_turn_body() {
  _has_bits_[1] |= 0x00000800u;
}
inline void tb_role_status::clear_has_buf_turn_body() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void tb_role_status::clear_buf_turn_body() {
  buf_turn_body_ = 0u;
  clear_has_buf_turn_body();
}
inline ::google::protobuf::uint32 tb_role_status::buf_turn_body() const {
  return buf_turn_body_;
}
inline void tb_role_status::set_buf_turn_body(::google::protobuf::uint32 value) {
  set_has_buf_turn_body();
  buf_turn_body_ = value;
}

// required uint32 strength = 45;
inline bool tb_role_status::has_strength() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void tb_role_status::set_has_strength() {
  _has_bits_[1] |= 0x00001000u;
}
inline void tb_role_status::clear_has_strength() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void tb_role_status::clear_strength() {
  strength_ = 0u;
  clear_has_strength();
}
inline ::google::protobuf::uint32 tb_role_status::strength() const {
  return strength_;
}
inline void tb_role_status::set_strength(::google::protobuf::uint32 value) {
  set_has_strength();
  strength_ = value;
}

// required uint32 status = 46;
inline bool tb_role_status::has_status() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void tb_role_status::set_has_status() {
  _has_bits_[1] |= 0x00002000u;
}
inline void tb_role_status::clear_has_status() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void tb_role_status::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 tb_role_status::status() const {
  return status_;
}
inline void tb_role_status::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// required uint32 created_date = 47;
inline bool tb_role_status::has_created_date() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void tb_role_status::set_has_created_date() {
  _has_bits_[1] |= 0x00004000u;
}
inline void tb_role_status::clear_has_created_date() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void tb_role_status::clear_created_date() {
  created_date_ = 0u;
  clear_has_created_date();
}
inline ::google::protobuf::uint32 tb_role_status::created_date() const {
  return created_date_;
}
inline void tb_role_status::set_created_date(::google::protobuf::uint32 value) {
  set_has_created_date();
  created_date_ = value;
}

// required uint32 tmp_scene_inst_id = 48;
inline bool tb_role_status::has_tmp_scene_inst_id() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void tb_role_status::set_has_tmp_scene_inst_id() {
  _has_bits_[1] |= 0x00008000u;
}
inline void tb_role_status::clear_has_tmp_scene_inst_id() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void tb_role_status::clear_tmp_scene_inst_id() {
  tmp_scene_inst_id_ = 0u;
  clear_has_tmp_scene_inst_id();
}
inline ::google::protobuf::uint32 tb_role_status::tmp_scene_inst_id() const {
  return tmp_scene_inst_id_;
}
inline void tb_role_status::set_tmp_scene_inst_id(::google::protobuf::uint32 value) {
  set_has_tmp_scene_inst_id();
  tmp_scene_inst_id_ = value;
}

// required uint32 tmp_scene_inst_time = 49;
inline bool tb_role_status::has_tmp_scene_inst_time() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void tb_role_status::set_has_tmp_scene_inst_time() {
  _has_bits_[1] |= 0x00010000u;
}
inline void tb_role_status::clear_has_tmp_scene_inst_time() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void tb_role_status::clear_tmp_scene_inst_time() {
  tmp_scene_inst_time_ = 0u;
  clear_has_tmp_scene_inst_time();
}
inline ::google::protobuf::uint32 tb_role_status::tmp_scene_inst_time() const {
  return tmp_scene_inst_time_;
}
inline void tb_role_status::set_tmp_scene_inst_time(::google::protobuf::uint32 value) {
  set_has_tmp_scene_inst_time();
  tmp_scene_inst_time_ = value;
}

// required uint32 spa_action_times = 50;
inline bool tb_role_status::has_spa_action_times() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void tb_role_status::set_has_spa_action_times() {
  _has_bits_[1] |= 0x00020000u;
}
inline void tb_role_status::clear_has_spa_action_times() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void tb_role_status::clear_spa_action_times() {
  spa_action_times_ = 0u;
  clear_has_spa_action_times();
}
inline ::google::protobuf::uint32 tb_role_status::spa_action_times() const {
  return spa_action_times_;
}
inline void tb_role_status::set_spa_action_times(::google::protobuf::uint32 value) {
  set_has_spa_action_times();
  spa_action_times_ = value;
}

// required uint32 spa_last_time = 51;
inline bool tb_role_status::has_spa_last_time() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void tb_role_status::set_has_spa_last_time() {
  _has_bits_[1] |= 0x00040000u;
}
inline void tb_role_status::clear_has_spa_last_time() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void tb_role_status::clear_spa_last_time() {
  spa_last_time_ = 0u;
  clear_has_spa_last_time();
}
inline ::google::protobuf::uint32 tb_role_status::spa_last_time() const {
  return spa_last_time_;
}
inline void tb_role_status::set_spa_last_time(::google::protobuf::uint32 value) {
  set_has_spa_last_time();
  spa_last_time_ = value;
}

// required uint32 arena_last_chall_time = 52;
inline bool tb_role_status::has_arena_last_chall_time() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void tb_role_status::set_has_arena_last_chall_time() {
  _has_bits_[1] |= 0x00080000u;
}
inline void tb_role_status::clear_has_arena_last_chall_time() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void tb_role_status::clear_arena_last_chall_time() {
  arena_last_chall_time_ = 0u;
  clear_has_arena_last_chall_time();
}
inline ::google::protobuf::uint32 tb_role_status::arena_last_chall_time() const {
  return arena_last_chall_time_;
}
inline void tb_role_status::set_arena_last_chall_time(::google::protobuf::uint32 value) {
  set_has_arena_last_chall_time();
  arena_last_chall_time_ = value;
}

// required uint32 arena_has_times = 53;
inline bool tb_role_status::has_arena_has_times() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void tb_role_status::set_has_arena_has_times() {
  _has_bits_[1] |= 0x00100000u;
}
inline void tb_role_status::clear_has_arena_has_times() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void tb_role_status::clear_arena_has_times() {
  arena_has_times_ = 0u;
  clear_has_arena_has_times();
}
inline ::google::protobuf::uint32 tb_role_status::arena_has_times() const {
  return arena_has_times_;
}
inline void tb_role_status::set_arena_has_times(::google::protobuf::uint32 value) {
  set_has_arena_has_times();
  arena_has_times_ = value;
}

// required uint32 arena_buy_times = 54;
inline bool tb_role_status::has_arena_buy_times() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void tb_role_status::set_has_arena_buy_times() {
  _has_bits_[1] |= 0x00200000u;
}
inline void tb_role_status::clear_has_arena_buy_times() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void tb_role_status::clear_arena_buy_times() {
  arena_buy_times_ = 0u;
  clear_has_arena_buy_times();
}
inline ::google::protobuf::uint32 tb_role_status::arena_buy_times() const {
  return arena_buy_times_;
}
inline void tb_role_status::set_arena_buy_times(::google::protobuf::uint32 value) {
  set_has_arena_buy_times();
  arena_buy_times_ = value;
}

// required uint32 test_rewards = 55;
inline bool tb_role_status::has_test_rewards() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void tb_role_status::set_has_test_rewards() {
  _has_bits_[1] |= 0x00400000u;
}
inline void tb_role_status::clear_has_test_rewards() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void tb_role_status::clear_test_rewards() {
  test_rewards_ = 0u;
  clear_has_test_rewards();
}
inline ::google::protobuf::uint32 tb_role_status::test_rewards() const {
  return test_rewards_;
}
inline void tb_role_status::set_test_rewards(::google::protobuf::uint32 value) {
  set_has_test_rewards();
  test_rewards_ = value;
}

// required uint32 unlimited_fly = 56;
inline bool tb_role_status::has_unlimited_fly() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void tb_role_status::set_has_unlimited_fly() {
  _has_bits_[1] |= 0x00800000u;
}
inline void tb_role_status::clear_has_unlimited_fly() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void tb_role_status::clear_unlimited_fly() {
  unlimited_fly_ = 0u;
  clear_has_unlimited_fly();
}
inline ::google::protobuf::uint32 tb_role_status::unlimited_fly() const {
  return unlimited_fly_;
}
inline void tb_role_status::set_unlimited_fly(::google::protobuf::uint32 value) {
  set_has_unlimited_fly();
  unlimited_fly_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mysql

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mysql_2etb_5frole_5fstatus_2eproto__INCLUDED
