// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysql.t_login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mysql.t_login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mysql {

namespace {

const ::google::protobuf::Descriptor* t_login_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  t_login_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mysql_2et_5flogin_2eproto() {
  protobuf_AddDesc_mysql_2et_5flogin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mysql.t_login.proto");
  GOOGLE_CHECK(file != NULL);
  t_login_descriptor_ = file->message_type(0);
  static const int t_login_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, did_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, channel_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, appversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, apptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, device_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, nm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, mno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, screen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, os_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, mac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, createtime_),
  };
  t_login_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      t_login_descriptor_,
      t_login::default_instance_,
      t_login_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_login, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(t_login));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mysql_2et_5flogin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    t_login_descriptor_, &t_login::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mysql_2et_5flogin_2eproto() {
  delete t_login::default_instance_;
  delete t_login_reflection_;
}

void protobuf_AddDesc_mysql_2et_5flogin_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023mysql.t_login.proto\022\005mysql\"\201\002\n\007t_login"
    "\022\n\n\002id\030\001 \002(\r\022\013\n\003sid\030\002 \002(\t\022\013\n\003did\030\003 \002(\t\022\023"
    "\n\013accountName\030\004 \002(\t\022\020\n\010platform\030\005 \002(\t\022\022\n"
    "\nchannel_id\030\006 \002(\t\022\022\n\nappVersion\030\007 \002(\t\022\017\n"
    "\007appType\030\010 \002(\t\022\016\n\006device\030\t \002(\t\022\n\n\002nm\030\n \002"
    "(\t\022\013\n\003mno\030\013 \002(\t\022\016\n\006screen\030\014 \002(\t\022\n\n\002os\030\r "
    "\002(\t\022\013\n\003mac\030\016 \002(\t\022\n\n\002ip\030\017 \002(\t\022\022\n\nCreateti"
    "me\030\020 \002(\r", 288);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mysql.t_login.proto", &protobuf_RegisterTypes);
  t_login::default_instance_ = new t_login();
  t_login::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mysql_2et_5flogin_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mysql_2et_5flogin_2eproto {
  StaticDescriptorInitializer_mysql_2et_5flogin_2eproto() {
    protobuf_AddDesc_mysql_2et_5flogin_2eproto();
  }
} static_descriptor_initializer_mysql_2et_5flogin_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int t_login::kIdFieldNumber;
const int t_login::kSidFieldNumber;
const int t_login::kDidFieldNumber;
const int t_login::kAccountNameFieldNumber;
const int t_login::kPlatformFieldNumber;
const int t_login::kChannelIdFieldNumber;
const int t_login::kAppVersionFieldNumber;
const int t_login::kAppTypeFieldNumber;
const int t_login::kDeviceFieldNumber;
const int t_login::kNmFieldNumber;
const int t_login::kMnoFieldNumber;
const int t_login::kScreenFieldNumber;
const int t_login::kOsFieldNumber;
const int t_login::kMacFieldNumber;
const int t_login::kIpFieldNumber;
const int t_login::kCreatetimeFieldNumber;
#endif  // !_MSC_VER

t_login::t_login()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void t_login::InitAsDefaultInstance() {
}

t_login::t_login(const t_login& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void t_login::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  sid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  did_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  accountname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  channel_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  appversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  apptype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  device_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  screen_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  os_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  createtime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

t_login::~t_login() {
  SharedDtor();
}

void t_login::SharedDtor() {
  if (sid_ != &::google::protobuf::internal::kEmptyString) {
    delete sid_;
  }
  if (did_ != &::google::protobuf::internal::kEmptyString) {
    delete did_;
  }
  if (accountname_ != &::google::protobuf::internal::kEmptyString) {
    delete accountname_;
  }
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    delete platform_;
  }
  if (channel_id_ != &::google::protobuf::internal::kEmptyString) {
    delete channel_id_;
  }
  if (appversion_ != &::google::protobuf::internal::kEmptyString) {
    delete appversion_;
  }
  if (apptype_ != &::google::protobuf::internal::kEmptyString) {
    delete apptype_;
  }
  if (device_ != &::google::protobuf::internal::kEmptyString) {
    delete device_;
  }
  if (nm_ != &::google::protobuf::internal::kEmptyString) {
    delete nm_;
  }
  if (mno_ != &::google::protobuf::internal::kEmptyString) {
    delete mno_;
  }
  if (screen_ != &::google::protobuf::internal::kEmptyString) {
    delete screen_;
  }
  if (os_ != &::google::protobuf::internal::kEmptyString) {
    delete os_;
  }
  if (mac_ != &::google::protobuf::internal::kEmptyString) {
    delete mac_;
  }
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (this != default_instance_) {
  }
}

void t_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* t_login::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return t_login_descriptor_;
}

const t_login& t_login::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mysql_2et_5flogin_2eproto();
  return *default_instance_;
}

t_login* t_login::default_instance_ = NULL;

t_login* t_login::New() const {
  return new t_login;
}

void t_login::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    if (has_sid()) {
      if (sid_ != &::google::protobuf::internal::kEmptyString) {
        sid_->clear();
      }
    }
    if (has_did()) {
      if (did_ != &::google::protobuf::internal::kEmptyString) {
        did_->clear();
      }
    }
    if (has_accountname()) {
      if (accountname_ != &::google::protobuf::internal::kEmptyString) {
        accountname_->clear();
      }
    }
    if (has_platform()) {
      if (platform_ != &::google::protobuf::internal::kEmptyString) {
        platform_->clear();
      }
    }
    if (has_channel_id()) {
      if (channel_id_ != &::google::protobuf::internal::kEmptyString) {
        channel_id_->clear();
      }
    }
    if (has_appversion()) {
      if (appversion_ != &::google::protobuf::internal::kEmptyString) {
        appversion_->clear();
      }
    }
    if (has_apptype()) {
      if (apptype_ != &::google::protobuf::internal::kEmptyString) {
        apptype_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_device()) {
      if (device_ != &::google::protobuf::internal::kEmptyString) {
        device_->clear();
      }
    }
    if (has_nm()) {
      if (nm_ != &::google::protobuf::internal::kEmptyString) {
        nm_->clear();
      }
    }
    if (has_mno()) {
      if (mno_ != &::google::protobuf::internal::kEmptyString) {
        mno_->clear();
      }
    }
    if (has_screen()) {
      if (screen_ != &::google::protobuf::internal::kEmptyString) {
        screen_->clear();
      }
    }
    if (has_os()) {
      if (os_ != &::google::protobuf::internal::kEmptyString) {
        os_->clear();
      }
    }
    if (has_mac()) {
      if (mac_ != &::google::protobuf::internal::kEmptyString) {
        mac_->clear();
      }
    }
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::kEmptyString) {
        ip_->clear();
      }
    }
    createtime_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool t_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sid;
        break;
      }

      // required string sid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sid().data(), this->sid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_did;
        break;
      }

      // required string did = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_did:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->did().data(), this->did().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_accountName;
        break;
      }

      // required string accountName = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_accountName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_platform;
        break;
      }

      // required string platform = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_platform:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->platform().data(), this->platform().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_channel_id;
        break;
      }

      // required string channel_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_channel_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->channel_id().data(), this->channel_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_appVersion;
        break;
      }

      // required string appVersion = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->appversion().data(), this->appversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_appType;
        break;
      }

      // required string appType = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_appType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_device;
        break;
      }

      // required string device = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_device:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->device().data(), this->device().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_nm;
        break;
      }

      // required string nm = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nm:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nm().data(), this->nm().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_mno;
        break;
      }

      // required string mno = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mno:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mno()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mno().data(), this->mno().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_screen;
        break;
      }

      // required string screen = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_screen:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screen()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->screen().data(), this->screen().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_os;
        break;
      }

      // required string os = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_os:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->os().data(), this->os().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_mac;
        break;
      }

      // required string mac = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->mac().data(), this->mac().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_ip;
        break;
      }

      // required string ip = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_Createtime;
        break;
      }

      // required uint32 Createtime = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Createtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &createtime_)));
          set_has_createtime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void t_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required string sid = 2;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sid(), output);
  }

  // required string did = 3;
  if (has_did()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->did().data(), this->did().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->did(), output);
  }

  // required string accountName = 4;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->accountname(), output);
  }

  // required string platform = 5;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->platform(), output);
  }

  // required string channel_id = 6;
  if (has_channel_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->channel_id(), output);
  }

  // required string appVersion = 7;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->appversion(), output);
  }

  // required string appType = 8;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->apptype(), output);
  }

  // required string device = 9;
  if (has_device()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->device(), output);
  }

  // required string nm = 10;
  if (has_nm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nm().data(), this->nm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->nm(), output);
  }

  // required string mno = 11;
  if (has_mno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mno().data(), this->mno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->mno(), output);
  }

  // required string screen = 12;
  if (has_screen()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screen().data(), this->screen().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->screen(), output);
  }

  // required string os = 13;
  if (has_os()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->os().data(), this->os().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->os(), output);
  }

  // required string mac = 14;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->mac(), output);
  }

  // required string ip = 15;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->ip(), output);
  }

  // required uint32 Createtime = 16;
  if (has_createtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->createtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* t_login::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required string sid = 2;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sid(), target);
  }

  // required string did = 3;
  if (has_did()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->did().data(), this->did().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->did(), target);
  }

  // required string accountName = 4;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->accountname(), target);
  }

  // required string platform = 5;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->platform().data(), this->platform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->platform(), target);
  }

  // required string channel_id = 6;
  if (has_channel_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->channel_id(), target);
  }

  // required string appVersion = 7;
  if (has_appversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->appversion(), target);
  }

  // required string appType = 8;
  if (has_apptype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->apptype(), target);
  }

  // required string device = 9;
  if (has_device()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->device(), target);
  }

  // required string nm = 10;
  if (has_nm()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nm().data(), this->nm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->nm(), target);
  }

  // required string mno = 11;
  if (has_mno()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mno().data(), this->mno().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->mno(), target);
  }

  // required string screen = 12;
  if (has_screen()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screen().data(), this->screen().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->screen(), target);
  }

  // required string os = 13;
  if (has_os()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->os().data(), this->os().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->os(), target);
  }

  // required string mac = 14;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->mac(), target);
  }

  // required string ip = 15;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->ip(), target);
  }

  // required uint32 Createtime = 16;
  if (has_createtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->createtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int t_login::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required string sid = 2;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sid());
    }

    // required string did = 3;
    if (has_did()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->did());
    }

    // required string accountName = 4;
    if (has_accountname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accountname());
    }

    // required string platform = 5;
    if (has_platform()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platform());
    }

    // required string channel_id = 6;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_id());
    }

    // required string appVersion = 7;
    if (has_appversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appversion());
    }

    // required string appType = 8;
    if (has_apptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string device = 9;
    if (has_device()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device());
    }

    // required string nm = 10;
    if (has_nm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nm());
    }

    // required string mno = 11;
    if (has_mno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mno());
    }

    // required string screen = 12;
    if (has_screen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->screen());
    }

    // required string os = 13;
    if (has_os()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->os());
    }

    // required string mac = 14;
    if (has_mac()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mac());
    }

    // required string ip = 15;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // required uint32 Createtime = 16;
    if (has_createtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->createtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void t_login::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const t_login* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const t_login*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void t_login::MergeFrom(const t_login& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_sid()) {
      set_sid(from.sid());
    }
    if (from.has_did()) {
      set_did(from.did());
    }
    if (from.has_accountname()) {
      set_accountname(from.accountname());
    }
    if (from.has_platform()) {
      set_platform(from.platform());
    }
    if (from.has_channel_id()) {
      set_channel_id(from.channel_id());
    }
    if (from.has_appversion()) {
      set_appversion(from.appversion());
    }
    if (from.has_apptype()) {
      set_apptype(from.apptype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_device()) {
      set_device(from.device());
    }
    if (from.has_nm()) {
      set_nm(from.nm());
    }
    if (from.has_mno()) {
      set_mno(from.mno());
    }
    if (from.has_screen()) {
      set_screen(from.screen());
    }
    if (from.has_os()) {
      set_os(from.os());
    }
    if (from.has_mac()) {
      set_mac(from.mac());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_createtime()) {
      set_createtime(from.createtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void t_login::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void t_login::CopyFrom(const t_login& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool t_login::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000ffff) != 0x0000ffff) return false;

  return true;
}

void t_login::Swap(t_login* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(sid_, other->sid_);
    std::swap(did_, other->did_);
    std::swap(accountname_, other->accountname_);
    std::swap(platform_, other->platform_);
    std::swap(channel_id_, other->channel_id_);
    std::swap(appversion_, other->appversion_);
    std::swap(apptype_, other->apptype_);
    std::swap(device_, other->device_);
    std::swap(nm_, other->nm_);
    std::swap(mno_, other->mno_);
    std::swap(screen_, other->screen_);
    std::swap(os_, other->os_);
    std::swap(mac_, other->mac_);
    std::swap(ip_, other->ip_);
    std::swap(createtime_, other->createtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata t_login::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = t_login_descriptor_;
  metadata.reflection = t_login_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mysql

// @@protoc_insertion_point(global_scope)
