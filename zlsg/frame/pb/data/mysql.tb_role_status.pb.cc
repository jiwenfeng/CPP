// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysql.tb_role_status.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mysql.tb_role_status.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mysql {

namespace {

const ::google::protobuf::Descriptor* tb_role_status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  tb_role_status_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mysql_2etb_5frole_5fstatus_2eproto() {
  protobuf_AddDesc_mysql_2etb_5frole_5fstatus_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mysql.tb_role_status.proto");
  GOOGLE_CHECK(file != NULL);
  tb_role_status_descriptor_ = file->message_type(0);
  static const int tb_role_status_offsets_[56] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, pos_map_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, pos_scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, pos_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, tmp_map_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, tmp_scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, tmp_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, tmp_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, tmp_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, mditation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, riding_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, findpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, fight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, auto_play_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, pvp_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, attk_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, alive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, online_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, red_goods_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, blue_goods_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, complete_task_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, abandon_task_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, receve_task_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, is_package_full_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_furious_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_hurted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_week_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_giddy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_faint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_fired_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_posion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_injury_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_cursed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_blind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_maimed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_silent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_disarm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_slowly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_dec_harm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_rej_harm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, buf_turn_body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, created_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, tmp_scene_inst_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, tmp_scene_inst_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, spa_action_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, spa_last_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, arena_last_chall_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, arena_has_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, arena_buy_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, test_rewards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, unlimited_fly_),
  };
  tb_role_status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      tb_role_status_descriptor_,
      tb_role_status::default_instance_,
      tb_role_status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(tb_role_status));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mysql_2etb_5frole_5fstatus_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    tb_role_status_descriptor_, &tb_role_status::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mysql_2etb_5frole_5fstatus_2eproto() {
  delete tb_role_status::default_instance_;
  delete tb_role_status_reflection_;
}

void protobuf_AddDesc_mysql_2etb_5frole_5fstatus_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032mysql.tb_role_status.proto\022\005mysql\"\210\t\n\016"
    "tb_role_status\022\017\n\007role_id\030\001 \002(\r\022\022\n\npos_m"
    "ap_id\030\002 \002(\r\022\024\n\014pos_scene_id\030\003 \002(\r\022\r\n\005pos"
    "_x\030\004 \002(\r\022\r\n\005pos_y\030\005 \002(\r\022\r\n\005pos_z\030\006 \002(\r\022\022"
    "\n\ntmp_map_id\030\007 \002(\r\022\024\n\014tmp_scene_id\030\010 \002(\r"
    "\022\r\n\005tmp_x\030\t \002(\r\022\r\n\005tmp_y\030\n \002(\r\022\r\n\005tmp_z\030"
    "\013 \002(\r\022\021\n\tmditation\030\014 \002(\r\022\016\n\006riding\030\r \002(\r"
    "\022\020\n\010findpath\030\016 \002(\r\022\r\n\005fight\030\017 \002(\r\022\021\n\taut"
    "o_play\030\020 \002(\r\022\020\n\010pvp_mode\030\021 \002(\r\022\021\n\tattk_m"
    "ode\030\022 \002(\r\022\r\n\005alive\030\023 \002(\r\022\016\n\006online\030\024 \002(\r"
    "\022\025\n\rred_goods_num\030\025 \002(\r\022\026\n\016blue_goods_nu"
    "m\030\026 \002(\r\022\031\n\021complete_task_num\030\027 \002(\r\022\030\n\020ab"
    "andon_task_num\030\030 \002(\r\022\027\n\017receve_task_num\030"
    "\031 \002(\r\022\027\n\017is_package_full\030\032 \002(\r\022\023\n\013buf_fu"
    "rious\030\033 \002(\r\022\022\n\nbuf_hurted\030\034 \002(\r\022\020\n\010buf_w"
    "eek\030\035 \002(\r\022\021\n\tbuf_giddy\030\036 \002(\r\022\021\n\tbuf_fain"
    "t\030\037 \002(\r\022\021\n\tbuf_fired\030  \002(\r\022\022\n\nbuf_posion"
    "\030! \002(\r\022\021\n\tbuf_blood\030\" \002(\r\022\022\n\nbuf_injury\030"
    "# \002(\r\022\022\n\nbuf_cursed\030$ \002(\r\022\021\n\tbuf_blind\030%"
    " \002(\r\022\022\n\nbuf_maimed\030& \002(\r\022\022\n\nbuf_silent\030\'"
    " \002(\r\022\022\n\nbuf_disarm\030( \002(\r\022\022\n\nbuf_slowly\030)"
    " \002(\r\022\024\n\014buf_dec_harm\030* \002(\r\022\024\n\014buf_rej_ha"
    "rm\030+ \002(\r\022\025\n\rbuf_turn_body\030, \002(\r\022\020\n\010stren"
    "gth\030- \002(\r\022\016\n\006status\030. \002(\r\022\024\n\014created_dat"
    "e\030/ \002(\r\022\031\n\021tmp_scene_inst_id\0300 \002(\r\022\033\n\023tm"
    "p_scene_inst_time\0301 \002(\r\022\030\n\020spa_action_ti"
    "mes\0302 \002(\r\022\025\n\rspa_last_time\0303 \002(\r\022\035\n\025aren"
    "a_last_chall_time\0304 \002(\r\022\027\n\017arena_has_tim"
    "es\0305 \002(\r\022\027\n\017arena_buy_times\0306 \002(\r\022\024\n\014tes"
    "t_rewards\0307 \002(\r\022\025\n\runlimited_fly\0308 \002(\r", 1198);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mysql.tb_role_status.proto", &protobuf_RegisterTypes);
  tb_role_status::default_instance_ = new tb_role_status();
  tb_role_status::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mysql_2etb_5frole_5fstatus_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mysql_2etb_5frole_5fstatus_2eproto {
  StaticDescriptorInitializer_mysql_2etb_5frole_5fstatus_2eproto() {
    protobuf_AddDesc_mysql_2etb_5frole_5fstatus_2eproto();
  }
} static_descriptor_initializer_mysql_2etb_5frole_5fstatus_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int tb_role_status::kRoleIdFieldNumber;
const int tb_role_status::kPosMapIdFieldNumber;
const int tb_role_status::kPosSceneIdFieldNumber;
const int tb_role_status::kPosXFieldNumber;
const int tb_role_status::kPosYFieldNumber;
const int tb_role_status::kPosZFieldNumber;
const int tb_role_status::kTmpMapIdFieldNumber;
const int tb_role_status::kTmpSceneIdFieldNumber;
const int tb_role_status::kTmpXFieldNumber;
const int tb_role_status::kTmpYFieldNumber;
const int tb_role_status::kTmpZFieldNumber;
const int tb_role_status::kMditationFieldNumber;
const int tb_role_status::kRidingFieldNumber;
const int tb_role_status::kFindpathFieldNumber;
const int tb_role_status::kFightFieldNumber;
const int tb_role_status::kAutoPlayFieldNumber;
const int tb_role_status::kPvpModeFieldNumber;
const int tb_role_status::kAttkModeFieldNumber;
const int tb_role_status::kAliveFieldNumber;
const int tb_role_status::kOnlineFieldNumber;
const int tb_role_status::kRedGoodsNumFieldNumber;
const int tb_role_status::kBlueGoodsNumFieldNumber;
const int tb_role_status::kCompleteTaskNumFieldNumber;
const int tb_role_status::kAbandonTaskNumFieldNumber;
const int tb_role_status::kReceveTaskNumFieldNumber;
const int tb_role_status::kIsPackageFullFieldNumber;
const int tb_role_status::kBufFuriousFieldNumber;
const int tb_role_status::kBufHurtedFieldNumber;
const int tb_role_status::kBufWeekFieldNumber;
const int tb_role_status::kBufGiddyFieldNumber;
const int tb_role_status::kBufFaintFieldNumber;
const int tb_role_status::kBufFiredFieldNumber;
const int tb_role_status::kBufPosionFieldNumber;
const int tb_role_status::kBufBloodFieldNumber;
const int tb_role_status::kBufInjuryFieldNumber;
const int tb_role_status::kBufCursedFieldNumber;
const int tb_role_status::kBufBlindFieldNumber;
const int tb_role_status::kBufMaimedFieldNumber;
const int tb_role_status::kBufSilentFieldNumber;
const int tb_role_status::kBufDisarmFieldNumber;
const int tb_role_status::kBufSlowlyFieldNumber;
const int tb_role_status::kBufDecHarmFieldNumber;
const int tb_role_status::kBufRejHarmFieldNumber;
const int tb_role_status::kBufTurnBodyFieldNumber;
const int tb_role_status::kStrengthFieldNumber;
const int tb_role_status::kStatusFieldNumber;
const int tb_role_status::kCreatedDateFieldNumber;
const int tb_role_status::kTmpSceneInstIdFieldNumber;
const int tb_role_status::kTmpSceneInstTimeFieldNumber;
const int tb_role_status::kSpaActionTimesFieldNumber;
const int tb_role_status::kSpaLastTimeFieldNumber;
const int tb_role_status::kArenaLastChallTimeFieldNumber;
const int tb_role_status::kArenaHasTimesFieldNumber;
const int tb_role_status::kArenaBuyTimesFieldNumber;
const int tb_role_status::kTestRewardsFieldNumber;
const int tb_role_status::kUnlimitedFlyFieldNumber;
#endif  // !_MSC_VER

tb_role_status::tb_role_status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void tb_role_status::InitAsDefaultInstance() {
}

tb_role_status::tb_role_status(const tb_role_status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void tb_role_status::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = 0u;
  pos_map_id_ = 0u;
  pos_scene_id_ = 0u;
  pos_x_ = 0u;
  pos_y_ = 0u;
  pos_z_ = 0u;
  tmp_map_id_ = 0u;
  tmp_scene_id_ = 0u;
  tmp_x_ = 0u;
  tmp_y_ = 0u;
  tmp_z_ = 0u;
  mditation_ = 0u;
  riding_ = 0u;
  findpath_ = 0u;
  fight_ = 0u;
  auto_play_ = 0u;
  pvp_mode_ = 0u;
  attk_mode_ = 0u;
  alive_ = 0u;
  online_ = 0u;
  red_goods_num_ = 0u;
  blue_goods_num_ = 0u;
  complete_task_num_ = 0u;
  abandon_task_num_ = 0u;
  receve_task_num_ = 0u;
  is_package_full_ = 0u;
  buf_furious_ = 0u;
  buf_hurted_ = 0u;
  buf_week_ = 0u;
  buf_giddy_ = 0u;
  buf_faint_ = 0u;
  buf_fired_ = 0u;
  buf_posion_ = 0u;
  buf_blood_ = 0u;
  buf_injury_ = 0u;
  buf_cursed_ = 0u;
  buf_blind_ = 0u;
  buf_maimed_ = 0u;
  buf_silent_ = 0u;
  buf_disarm_ = 0u;
  buf_slowly_ = 0u;
  buf_dec_harm_ = 0u;
  buf_rej_harm_ = 0u;
  buf_turn_body_ = 0u;
  strength_ = 0u;
  status_ = 0u;
  created_date_ = 0u;
  tmp_scene_inst_id_ = 0u;
  tmp_scene_inst_time_ = 0u;
  spa_action_times_ = 0u;
  spa_last_time_ = 0u;
  arena_last_chall_time_ = 0u;
  arena_has_times_ = 0u;
  arena_buy_times_ = 0u;
  test_rewards_ = 0u;
  unlimited_fly_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

tb_role_status::~tb_role_status() {
  SharedDtor();
}

void tb_role_status::SharedDtor() {
  if (this != default_instance_) {
  }
}

void tb_role_status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tb_role_status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return tb_role_status_descriptor_;
}

const tb_role_status& tb_role_status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mysql_2etb_5frole_5fstatus_2eproto();
  return *default_instance_;
}

tb_role_status* tb_role_status::default_instance_ = NULL;

tb_role_status* tb_role_status::New() const {
  return new tb_role_status;
}

void tb_role_status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = 0u;
    pos_map_id_ = 0u;
    pos_scene_id_ = 0u;
    pos_x_ = 0u;
    pos_y_ = 0u;
    pos_z_ = 0u;
    tmp_map_id_ = 0u;
    tmp_scene_id_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    tmp_x_ = 0u;
    tmp_y_ = 0u;
    tmp_z_ = 0u;
    mditation_ = 0u;
    riding_ = 0u;
    findpath_ = 0u;
    fight_ = 0u;
    auto_play_ = 0u;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    pvp_mode_ = 0u;
    attk_mode_ = 0u;
    alive_ = 0u;
    online_ = 0u;
    red_goods_num_ = 0u;
    blue_goods_num_ = 0u;
    complete_task_num_ = 0u;
    abandon_task_num_ = 0u;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    receve_task_num_ = 0u;
    is_package_full_ = 0u;
    buf_furious_ = 0u;
    buf_hurted_ = 0u;
    buf_week_ = 0u;
    buf_giddy_ = 0u;
    buf_faint_ = 0u;
    buf_fired_ = 0u;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    buf_posion_ = 0u;
    buf_blood_ = 0u;
    buf_injury_ = 0u;
    buf_cursed_ = 0u;
    buf_blind_ = 0u;
    buf_maimed_ = 0u;
    buf_silent_ = 0u;
    buf_disarm_ = 0u;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    buf_slowly_ = 0u;
    buf_dec_harm_ = 0u;
    buf_rej_harm_ = 0u;
    buf_turn_body_ = 0u;
    strength_ = 0u;
    status_ = 0u;
    created_date_ = 0u;
    tmp_scene_inst_id_ = 0u;
  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    tmp_scene_inst_time_ = 0u;
    spa_action_times_ = 0u;
    spa_last_time_ = 0u;
    arena_last_chall_time_ = 0u;
    arena_has_times_ = 0u;
    arena_buy_times_ = 0u;
    test_rewards_ = 0u;
    unlimited_fly_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool tb_role_status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos_map_id;
        break;
      }

      // required uint32 pos_map_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_map_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_map_id_)));
          set_has_pos_map_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pos_scene_id;
        break;
      }

      // required uint32 pos_scene_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_scene_id_)));
          set_has_pos_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pos_x;
        break;
      }

      // required uint32 pos_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pos_y;
        break;
      }

      // required uint32 pos_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_pos_z;
        break;
      }

      // required uint32 pos_z = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_z_)));
          set_has_pos_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_tmp_map_id;
        break;
      }

      // required uint32 tmp_map_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tmp_map_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tmp_map_id_)));
          set_has_tmp_map_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_tmp_scene_id;
        break;
      }

      // required uint32 tmp_scene_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tmp_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tmp_scene_id_)));
          set_has_tmp_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_tmp_x;
        break;
      }

      // required uint32 tmp_x = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tmp_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tmp_x_)));
          set_has_tmp_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_tmp_y;
        break;
      }

      // required uint32 tmp_y = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tmp_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tmp_y_)));
          set_has_tmp_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_tmp_z;
        break;
      }

      // required uint32 tmp_z = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tmp_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tmp_z_)));
          set_has_tmp_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_mditation;
        break;
      }

      // required uint32 mditation = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mditation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mditation_)));
          set_has_mditation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_riding;
        break;
      }

      // required uint32 riding = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_riding:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &riding_)));
          set_has_riding();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_findpath;
        break;
      }

      // required uint32 findpath = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_findpath:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &findpath_)));
          set_has_findpath();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_fight;
        break;
      }

      // required uint32 fight = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fight_)));
          set_has_fight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_auto_play;
        break;
      }

      // required uint32 auto_play = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_play:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auto_play_)));
          set_has_auto_play();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_pvp_mode;
        break;
      }

      // required uint32 pvp_mode = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pvp_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pvp_mode_)));
          set_has_pvp_mode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_attk_mode;
        break;
      }

      // required uint32 attk_mode = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attk_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attk_mode_)));
          set_has_attk_mode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_alive;
        break;
      }

      // required uint32 alive = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_alive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alive_)));
          set_has_alive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_online;
        break;
      }

      // required uint32 online = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_)));
          set_has_online();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_red_goods_num;
        break;
      }

      // required uint32 red_goods_num = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_red_goods_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_goods_num_)));
          set_has_red_goods_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_blue_goods_num;
        break;
      }

      // required uint32 blue_goods_num = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_blue_goods_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blue_goods_num_)));
          set_has_blue_goods_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_complete_task_num;
        break;
      }

      // required uint32 complete_task_num = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_complete_task_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &complete_task_num_)));
          set_has_complete_task_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_abandon_task_num;
        break;
      }

      // required uint32 abandon_task_num = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_abandon_task_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &abandon_task_num_)));
          set_has_abandon_task_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_receve_task_num;
        break;
      }

      // required uint32 receve_task_num = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receve_task_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receve_task_num_)));
          set_has_receve_task_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_is_package_full;
        break;
      }

      // required uint32 is_package_full = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_package_full:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_package_full_)));
          set_has_is_package_full();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_buf_furious;
        break;
      }

      // required uint32 buf_furious = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_furious:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_furious_)));
          set_has_buf_furious();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_buf_hurted;
        break;
      }

      // required uint32 buf_hurted = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_hurted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_hurted_)));
          set_has_buf_hurted();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_buf_week;
        break;
      }

      // required uint32 buf_week = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_week:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_week_)));
          set_has_buf_week();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_buf_giddy;
        break;
      }

      // required uint32 buf_giddy = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_giddy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_giddy_)));
          set_has_buf_giddy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_buf_faint;
        break;
      }

      // required uint32 buf_faint = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_faint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_faint_)));
          set_has_buf_faint();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_buf_fired;
        break;
      }

      // required uint32 buf_fired = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_fired:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_fired_)));
          set_has_buf_fired();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_buf_posion;
        break;
      }

      // required uint32 buf_posion = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_posion:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_posion_)));
          set_has_buf_posion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_buf_blood;
        break;
      }

      // required uint32 buf_blood = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_blood_)));
          set_has_buf_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_buf_injury;
        break;
      }

      // required uint32 buf_injury = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_injury:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_injury_)));
          set_has_buf_injury();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_buf_cursed;
        break;
      }

      // required uint32 buf_cursed = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_cursed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_cursed_)));
          set_has_buf_cursed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(296)) goto parse_buf_blind;
        break;
      }

      // required uint32 buf_blind = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_blind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_blind_)));
          set_has_buf_blind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(304)) goto parse_buf_maimed;
        break;
      }

      // required uint32 buf_maimed = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_maimed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_maimed_)));
          set_has_buf_maimed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_buf_silent;
        break;
      }

      // required uint32 buf_silent = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_silent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_silent_)));
          set_has_buf_silent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(320)) goto parse_buf_disarm;
        break;
      }

      // required uint32 buf_disarm = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_disarm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_disarm_)));
          set_has_buf_disarm();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(328)) goto parse_buf_slowly;
        break;
      }

      // required uint32 buf_slowly = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_slowly:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_slowly_)));
          set_has_buf_slowly();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(336)) goto parse_buf_dec_harm;
        break;
      }

      // required uint32 buf_dec_harm = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_dec_harm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_dec_harm_)));
          set_has_buf_dec_harm();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(344)) goto parse_buf_rej_harm;
        break;
      }

      // required uint32 buf_rej_harm = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_rej_harm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_rej_harm_)));
          set_has_buf_rej_harm();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(352)) goto parse_buf_turn_body;
        break;
      }

      // required uint32 buf_turn_body = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buf_turn_body:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_turn_body_)));
          set_has_buf_turn_body();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(360)) goto parse_strength;
        break;
      }

      // required uint32 strength = 45;
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strength_)));
          set_has_strength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(368)) goto parse_status;
        break;
      }

      // required uint32 status = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(376)) goto parse_created_date;
        break;
      }

      // required uint32 created_date = 47;
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_created_date:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &created_date_)));
          set_has_created_date();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(384)) goto parse_tmp_scene_inst_id;
        break;
      }

      // required uint32 tmp_scene_inst_id = 48;
      case 48: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tmp_scene_inst_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tmp_scene_inst_id_)));
          set_has_tmp_scene_inst_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(392)) goto parse_tmp_scene_inst_time;
        break;
      }

      // required uint32 tmp_scene_inst_time = 49;
      case 49: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tmp_scene_inst_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tmp_scene_inst_time_)));
          set_has_tmp_scene_inst_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(400)) goto parse_spa_action_times;
        break;
      }

      // required uint32 spa_action_times = 50;
      case 50: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_spa_action_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spa_action_times_)));
          set_has_spa_action_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(408)) goto parse_spa_last_time;
        break;
      }

      // required uint32 spa_last_time = 51;
      case 51: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_spa_last_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spa_last_time_)));
          set_has_spa_last_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(416)) goto parse_arena_last_chall_time;
        break;
      }

      // required uint32 arena_last_chall_time = 52;
      case 52: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arena_last_chall_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &arena_last_chall_time_)));
          set_has_arena_last_chall_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(424)) goto parse_arena_has_times;
        break;
      }

      // required uint32 arena_has_times = 53;
      case 53: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arena_has_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &arena_has_times_)));
          set_has_arena_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(432)) goto parse_arena_buy_times;
        break;
      }

      // required uint32 arena_buy_times = 54;
      case 54: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arena_buy_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &arena_buy_times_)));
          set_has_arena_buy_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(440)) goto parse_test_rewards;
        break;
      }

      // required uint32 test_rewards = 55;
      case 55: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_test_rewards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &test_rewards_)));
          set_has_test_rewards();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(448)) goto parse_unlimited_fly;
        break;
      }

      // required uint32 unlimited_fly = 56;
      case 56: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unlimited_fly:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unlimited_fly_)));
          set_has_unlimited_fly();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void tb_role_status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->role_id(), output);
  }

  // required uint32 pos_map_id = 2;
  if (has_pos_map_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pos_map_id(), output);
  }

  // required uint32 pos_scene_id = 3;
  if (has_pos_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pos_scene_id(), output);
  }

  // required uint32 pos_x = 4;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pos_x(), output);
  }

  // required uint32 pos_y = 5;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pos_y(), output);
  }

  // required uint32 pos_z = 6;
  if (has_pos_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pos_z(), output);
  }

  // required uint32 tmp_map_id = 7;
  if (has_tmp_map_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->tmp_map_id(), output);
  }

  // required uint32 tmp_scene_id = 8;
  if (has_tmp_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->tmp_scene_id(), output);
  }

  // required uint32 tmp_x = 9;
  if (has_tmp_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->tmp_x(), output);
  }

  // required uint32 tmp_y = 10;
  if (has_tmp_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->tmp_y(), output);
  }

  // required uint32 tmp_z = 11;
  if (has_tmp_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->tmp_z(), output);
  }

  // required uint32 mditation = 12;
  if (has_mditation()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mditation(), output);
  }

  // required uint32 riding = 13;
  if (has_riding()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->riding(), output);
  }

  // required uint32 findpath = 14;
  if (has_findpath()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->findpath(), output);
  }

  // required uint32 fight = 15;
  if (has_fight()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->fight(), output);
  }

  // required uint32 auto_play = 16;
  if (has_auto_play()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->auto_play(), output);
  }

  // required uint32 pvp_mode = 17;
  if (has_pvp_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->pvp_mode(), output);
  }

  // required uint32 attk_mode = 18;
  if (has_attk_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->attk_mode(), output);
  }

  // required uint32 alive = 19;
  if (has_alive()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->alive(), output);
  }

  // required uint32 online = 20;
  if (has_online()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->online(), output);
  }

  // required uint32 red_goods_num = 21;
  if (has_red_goods_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->red_goods_num(), output);
  }

  // required uint32 blue_goods_num = 22;
  if (has_blue_goods_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->blue_goods_num(), output);
  }

  // required uint32 complete_task_num = 23;
  if (has_complete_task_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->complete_task_num(), output);
  }

  // required uint32 abandon_task_num = 24;
  if (has_abandon_task_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->abandon_task_num(), output);
  }

  // required uint32 receve_task_num = 25;
  if (has_receve_task_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->receve_task_num(), output);
  }

  // required uint32 is_package_full = 26;
  if (has_is_package_full()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->is_package_full(), output);
  }

  // required uint32 buf_furious = 27;
  if (has_buf_furious()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->buf_furious(), output);
  }

  // required uint32 buf_hurted = 28;
  if (has_buf_hurted()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->buf_hurted(), output);
  }

  // required uint32 buf_week = 29;
  if (has_buf_week()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->buf_week(), output);
  }

  // required uint32 buf_giddy = 30;
  if (has_buf_giddy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->buf_giddy(), output);
  }

  // required uint32 buf_faint = 31;
  if (has_buf_faint()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->buf_faint(), output);
  }

  // required uint32 buf_fired = 32;
  if (has_buf_fired()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->buf_fired(), output);
  }

  // required uint32 buf_posion = 33;
  if (has_buf_posion()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->buf_posion(), output);
  }

  // required uint32 buf_blood = 34;
  if (has_buf_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->buf_blood(), output);
  }

  // required uint32 buf_injury = 35;
  if (has_buf_injury()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->buf_injury(), output);
  }

  // required uint32 buf_cursed = 36;
  if (has_buf_cursed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->buf_cursed(), output);
  }

  // required uint32 buf_blind = 37;
  if (has_buf_blind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->buf_blind(), output);
  }

  // required uint32 buf_maimed = 38;
  if (has_buf_maimed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->buf_maimed(), output);
  }

  // required uint32 buf_silent = 39;
  if (has_buf_silent()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->buf_silent(), output);
  }

  // required uint32 buf_disarm = 40;
  if (has_buf_disarm()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->buf_disarm(), output);
  }

  // required uint32 buf_slowly = 41;
  if (has_buf_slowly()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(41, this->buf_slowly(), output);
  }

  // required uint32 buf_dec_harm = 42;
  if (has_buf_dec_harm()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->buf_dec_harm(), output);
  }

  // required uint32 buf_rej_harm = 43;
  if (has_buf_rej_harm()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->buf_rej_harm(), output);
  }

  // required uint32 buf_turn_body = 44;
  if (has_buf_turn_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(44, this->buf_turn_body(), output);
  }

  // required uint32 strength = 45;
  if (has_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(45, this->strength(), output);
  }

  // required uint32 status = 46;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(46, this->status(), output);
  }

  // required uint32 created_date = 47;
  if (has_created_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(47, this->created_date(), output);
  }

  // required uint32 tmp_scene_inst_id = 48;
  if (has_tmp_scene_inst_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(48, this->tmp_scene_inst_id(), output);
  }

  // required uint32 tmp_scene_inst_time = 49;
  if (has_tmp_scene_inst_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->tmp_scene_inst_time(), output);
  }

  // required uint32 spa_action_times = 50;
  if (has_spa_action_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->spa_action_times(), output);
  }

  // required uint32 spa_last_time = 51;
  if (has_spa_last_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(51, this->spa_last_time(), output);
  }

  // required uint32 arena_last_chall_time = 52;
  if (has_arena_last_chall_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(52, this->arena_last_chall_time(), output);
  }

  // required uint32 arena_has_times = 53;
  if (has_arena_has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(53, this->arena_has_times(), output);
  }

  // required uint32 arena_buy_times = 54;
  if (has_arena_buy_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(54, this->arena_buy_times(), output);
  }

  // required uint32 test_rewards = 55;
  if (has_test_rewards()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(55, this->test_rewards(), output);
  }

  // required uint32 unlimited_fly = 56;
  if (has_unlimited_fly()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(56, this->unlimited_fly(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* tb_role_status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->role_id(), target);
  }

  // required uint32 pos_map_id = 2;
  if (has_pos_map_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pos_map_id(), target);
  }

  // required uint32 pos_scene_id = 3;
  if (has_pos_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pos_scene_id(), target);
  }

  // required uint32 pos_x = 4;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pos_x(), target);
  }

  // required uint32 pos_y = 5;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pos_y(), target);
  }

  // required uint32 pos_z = 6;
  if (has_pos_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pos_z(), target);
  }

  // required uint32 tmp_map_id = 7;
  if (has_tmp_map_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->tmp_map_id(), target);
  }

  // required uint32 tmp_scene_id = 8;
  if (has_tmp_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->tmp_scene_id(), target);
  }

  // required uint32 tmp_x = 9;
  if (has_tmp_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->tmp_x(), target);
  }

  // required uint32 tmp_y = 10;
  if (has_tmp_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->tmp_y(), target);
  }

  // required uint32 tmp_z = 11;
  if (has_tmp_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->tmp_z(), target);
  }

  // required uint32 mditation = 12;
  if (has_mditation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mditation(), target);
  }

  // required uint32 riding = 13;
  if (has_riding()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->riding(), target);
  }

  // required uint32 findpath = 14;
  if (has_findpath()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->findpath(), target);
  }

  // required uint32 fight = 15;
  if (has_fight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->fight(), target);
  }

  // required uint32 auto_play = 16;
  if (has_auto_play()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->auto_play(), target);
  }

  // required uint32 pvp_mode = 17;
  if (has_pvp_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->pvp_mode(), target);
  }

  // required uint32 attk_mode = 18;
  if (has_attk_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->attk_mode(), target);
  }

  // required uint32 alive = 19;
  if (has_alive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->alive(), target);
  }

  // required uint32 online = 20;
  if (has_online()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->online(), target);
  }

  // required uint32 red_goods_num = 21;
  if (has_red_goods_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->red_goods_num(), target);
  }

  // required uint32 blue_goods_num = 22;
  if (has_blue_goods_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->blue_goods_num(), target);
  }

  // required uint32 complete_task_num = 23;
  if (has_complete_task_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->complete_task_num(), target);
  }

  // required uint32 abandon_task_num = 24;
  if (has_abandon_task_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->abandon_task_num(), target);
  }

  // required uint32 receve_task_num = 25;
  if (has_receve_task_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->receve_task_num(), target);
  }

  // required uint32 is_package_full = 26;
  if (has_is_package_full()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->is_package_full(), target);
  }

  // required uint32 buf_furious = 27;
  if (has_buf_furious()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->buf_furious(), target);
  }

  // required uint32 buf_hurted = 28;
  if (has_buf_hurted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->buf_hurted(), target);
  }

  // required uint32 buf_week = 29;
  if (has_buf_week()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->buf_week(), target);
  }

  // required uint32 buf_giddy = 30;
  if (has_buf_giddy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->buf_giddy(), target);
  }

  // required uint32 buf_faint = 31;
  if (has_buf_faint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->buf_faint(), target);
  }

  // required uint32 buf_fired = 32;
  if (has_buf_fired()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->buf_fired(), target);
  }

  // required uint32 buf_posion = 33;
  if (has_buf_posion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->buf_posion(), target);
  }

  // required uint32 buf_blood = 34;
  if (has_buf_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->buf_blood(), target);
  }

  // required uint32 buf_injury = 35;
  if (has_buf_injury()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->buf_injury(), target);
  }

  // required uint32 buf_cursed = 36;
  if (has_buf_cursed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->buf_cursed(), target);
  }

  // required uint32 buf_blind = 37;
  if (has_buf_blind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->buf_blind(), target);
  }

  // required uint32 buf_maimed = 38;
  if (has_buf_maimed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->buf_maimed(), target);
  }

  // required uint32 buf_silent = 39;
  if (has_buf_silent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->buf_silent(), target);
  }

  // required uint32 buf_disarm = 40;
  if (has_buf_disarm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->buf_disarm(), target);
  }

  // required uint32 buf_slowly = 41;
  if (has_buf_slowly()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(41, this->buf_slowly(), target);
  }

  // required uint32 buf_dec_harm = 42;
  if (has_buf_dec_harm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->buf_dec_harm(), target);
  }

  // required uint32 buf_rej_harm = 43;
  if (has_buf_rej_harm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->buf_rej_harm(), target);
  }

  // required uint32 buf_turn_body = 44;
  if (has_buf_turn_body()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(44, this->buf_turn_body(), target);
  }

  // required uint32 strength = 45;
  if (has_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(45, this->strength(), target);
  }

  // required uint32 status = 46;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(46, this->status(), target);
  }

  // required uint32 created_date = 47;
  if (has_created_date()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(47, this->created_date(), target);
  }

  // required uint32 tmp_scene_inst_id = 48;
  if (has_tmp_scene_inst_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(48, this->tmp_scene_inst_id(), target);
  }

  // required uint32 tmp_scene_inst_time = 49;
  if (has_tmp_scene_inst_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(49, this->tmp_scene_inst_time(), target);
  }

  // required uint32 spa_action_times = 50;
  if (has_spa_action_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->spa_action_times(), target);
  }

  // required uint32 spa_last_time = 51;
  if (has_spa_last_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(51, this->spa_last_time(), target);
  }

  // required uint32 arena_last_chall_time = 52;
  if (has_arena_last_chall_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(52, this->arena_last_chall_time(), target);
  }

  // required uint32 arena_has_times = 53;
  if (has_arena_has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(53, this->arena_has_times(), target);
  }

  // required uint32 arena_buy_times = 54;
  if (has_arena_buy_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(54, this->arena_buy_times(), target);
  }

  // required uint32 test_rewards = 55;
  if (has_test_rewards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(55, this->test_rewards(), target);
  }

  // required uint32 unlimited_fly = 56;
  if (has_unlimited_fly()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(56, this->unlimited_fly(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int tb_role_status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->role_id());
    }

    // required uint32 pos_map_id = 2;
    if (has_pos_map_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos_map_id());
    }

    // required uint32 pos_scene_id = 3;
    if (has_pos_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos_scene_id());
    }

    // required uint32 pos_x = 4;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos_x());
    }

    // required uint32 pos_y = 5;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos_y());
    }

    // required uint32 pos_z = 6;
    if (has_pos_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos_z());
    }

    // required uint32 tmp_map_id = 7;
    if (has_tmp_map_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tmp_map_id());
    }

    // required uint32 tmp_scene_id = 8;
    if (has_tmp_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tmp_scene_id());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 tmp_x = 9;
    if (has_tmp_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tmp_x());
    }

    // required uint32 tmp_y = 10;
    if (has_tmp_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tmp_y());
    }

    // required uint32 tmp_z = 11;
    if (has_tmp_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tmp_z());
    }

    // required uint32 mditation = 12;
    if (has_mditation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mditation());
    }

    // required uint32 riding = 13;
    if (has_riding()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->riding());
    }

    // required uint32 findpath = 14;
    if (has_findpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->findpath());
    }

    // required uint32 fight = 15;
    if (has_fight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fight());
    }

    // required uint32 auto_play = 16;
    if (has_auto_play()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auto_play());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required uint32 pvp_mode = 17;
    if (has_pvp_mode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pvp_mode());
    }

    // required uint32 attk_mode = 18;
    if (has_attk_mode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attk_mode());
    }

    // required uint32 alive = 19;
    if (has_alive()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->alive());
    }

    // required uint32 online = 20;
    if (has_online()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->online());
    }

    // required uint32 red_goods_num = 21;
    if (has_red_goods_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->red_goods_num());
    }

    // required uint32 blue_goods_num = 22;
    if (has_blue_goods_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blue_goods_num());
    }

    // required uint32 complete_task_num = 23;
    if (has_complete_task_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->complete_task_num());
    }

    // required uint32 abandon_task_num = 24;
    if (has_abandon_task_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->abandon_task_num());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required uint32 receve_task_num = 25;
    if (has_receve_task_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receve_task_num());
    }

    // required uint32 is_package_full = 26;
    if (has_is_package_full()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->is_package_full());
    }

    // required uint32 buf_furious = 27;
    if (has_buf_furious()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_furious());
    }

    // required uint32 buf_hurted = 28;
    if (has_buf_hurted()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_hurted());
    }

    // required uint32 buf_week = 29;
    if (has_buf_week()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_week());
    }

    // required uint32 buf_giddy = 30;
    if (has_buf_giddy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_giddy());
    }

    // required uint32 buf_faint = 31;
    if (has_buf_faint()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_faint());
    }

    // required uint32 buf_fired = 32;
    if (has_buf_fired()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_fired());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // required uint32 buf_posion = 33;
    if (has_buf_posion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_posion());
    }

    // required uint32 buf_blood = 34;
    if (has_buf_blood()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_blood());
    }

    // required uint32 buf_injury = 35;
    if (has_buf_injury()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_injury());
    }

    // required uint32 buf_cursed = 36;
    if (has_buf_cursed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_cursed());
    }

    // required uint32 buf_blind = 37;
    if (has_buf_blind()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_blind());
    }

    // required uint32 buf_maimed = 38;
    if (has_buf_maimed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_maimed());
    }

    // required uint32 buf_silent = 39;
    if (has_buf_silent()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_silent());
    }

    // required uint32 buf_disarm = 40;
    if (has_buf_disarm()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_disarm());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // required uint32 buf_slowly = 41;
    if (has_buf_slowly()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_slowly());
    }

    // required uint32 buf_dec_harm = 42;
    if (has_buf_dec_harm()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_dec_harm());
    }

    // required uint32 buf_rej_harm = 43;
    if (has_buf_rej_harm()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_rej_harm());
    }

    // required uint32 buf_turn_body = 44;
    if (has_buf_turn_body()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buf_turn_body());
    }

    // required uint32 strength = 45;
    if (has_strength()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strength());
    }

    // required uint32 status = 46;
    if (has_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // required uint32 created_date = 47;
    if (has_created_date()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->created_date());
    }

    // required uint32 tmp_scene_inst_id = 48;
    if (has_tmp_scene_inst_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tmp_scene_inst_id());
    }

  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // required uint32 tmp_scene_inst_time = 49;
    if (has_tmp_scene_inst_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tmp_scene_inst_time());
    }

    // required uint32 spa_action_times = 50;
    if (has_spa_action_times()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spa_action_times());
    }

    // required uint32 spa_last_time = 51;
    if (has_spa_last_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spa_last_time());
    }

    // required uint32 arena_last_chall_time = 52;
    if (has_arena_last_chall_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->arena_last_chall_time());
    }

    // required uint32 arena_has_times = 53;
    if (has_arena_has_times()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->arena_has_times());
    }

    // required uint32 arena_buy_times = 54;
    if (has_arena_buy_times()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->arena_buy_times());
    }

    // required uint32 test_rewards = 55;
    if (has_test_rewards()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->test_rewards());
    }

    // required uint32 unlimited_fly = 56;
    if (has_unlimited_fly()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->unlimited_fly());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tb_role_status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const tb_role_status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const tb_role_status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void tb_role_status::MergeFrom(const tb_role_status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_pos_map_id()) {
      set_pos_map_id(from.pos_map_id());
    }
    if (from.has_pos_scene_id()) {
      set_pos_scene_id(from.pos_scene_id());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_pos_z()) {
      set_pos_z(from.pos_z());
    }
    if (from.has_tmp_map_id()) {
      set_tmp_map_id(from.tmp_map_id());
    }
    if (from.has_tmp_scene_id()) {
      set_tmp_scene_id(from.tmp_scene_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_tmp_x()) {
      set_tmp_x(from.tmp_x());
    }
    if (from.has_tmp_y()) {
      set_tmp_y(from.tmp_y());
    }
    if (from.has_tmp_z()) {
      set_tmp_z(from.tmp_z());
    }
    if (from.has_mditation()) {
      set_mditation(from.mditation());
    }
    if (from.has_riding()) {
      set_riding(from.riding());
    }
    if (from.has_findpath()) {
      set_findpath(from.findpath());
    }
    if (from.has_fight()) {
      set_fight(from.fight());
    }
    if (from.has_auto_play()) {
      set_auto_play(from.auto_play());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_pvp_mode()) {
      set_pvp_mode(from.pvp_mode());
    }
    if (from.has_attk_mode()) {
      set_attk_mode(from.attk_mode());
    }
    if (from.has_alive()) {
      set_alive(from.alive());
    }
    if (from.has_online()) {
      set_online(from.online());
    }
    if (from.has_red_goods_num()) {
      set_red_goods_num(from.red_goods_num());
    }
    if (from.has_blue_goods_num()) {
      set_blue_goods_num(from.blue_goods_num());
    }
    if (from.has_complete_task_num()) {
      set_complete_task_num(from.complete_task_num());
    }
    if (from.has_abandon_task_num()) {
      set_abandon_task_num(from.abandon_task_num());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_receve_task_num()) {
      set_receve_task_num(from.receve_task_num());
    }
    if (from.has_is_package_full()) {
      set_is_package_full(from.is_package_full());
    }
    if (from.has_buf_furious()) {
      set_buf_furious(from.buf_furious());
    }
    if (from.has_buf_hurted()) {
      set_buf_hurted(from.buf_hurted());
    }
    if (from.has_buf_week()) {
      set_buf_week(from.buf_week());
    }
    if (from.has_buf_giddy()) {
      set_buf_giddy(from.buf_giddy());
    }
    if (from.has_buf_faint()) {
      set_buf_faint(from.buf_faint());
    }
    if (from.has_buf_fired()) {
      set_buf_fired(from.buf_fired());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_buf_posion()) {
      set_buf_posion(from.buf_posion());
    }
    if (from.has_buf_blood()) {
      set_buf_blood(from.buf_blood());
    }
    if (from.has_buf_injury()) {
      set_buf_injury(from.buf_injury());
    }
    if (from.has_buf_cursed()) {
      set_buf_cursed(from.buf_cursed());
    }
    if (from.has_buf_blind()) {
      set_buf_blind(from.buf_blind());
    }
    if (from.has_buf_maimed()) {
      set_buf_maimed(from.buf_maimed());
    }
    if (from.has_buf_silent()) {
      set_buf_silent(from.buf_silent());
    }
    if (from.has_buf_disarm()) {
      set_buf_disarm(from.buf_disarm());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_buf_slowly()) {
      set_buf_slowly(from.buf_slowly());
    }
    if (from.has_buf_dec_harm()) {
      set_buf_dec_harm(from.buf_dec_harm());
    }
    if (from.has_buf_rej_harm()) {
      set_buf_rej_harm(from.buf_rej_harm());
    }
    if (from.has_buf_turn_body()) {
      set_buf_turn_body(from.buf_turn_body());
    }
    if (from.has_strength()) {
      set_strength(from.strength());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_created_date()) {
      set_created_date(from.created_date());
    }
    if (from.has_tmp_scene_inst_id()) {
      set_tmp_scene_inst_id(from.tmp_scene_inst_id());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from.has_tmp_scene_inst_time()) {
      set_tmp_scene_inst_time(from.tmp_scene_inst_time());
    }
    if (from.has_spa_action_times()) {
      set_spa_action_times(from.spa_action_times());
    }
    if (from.has_spa_last_time()) {
      set_spa_last_time(from.spa_last_time());
    }
    if (from.has_arena_last_chall_time()) {
      set_arena_last_chall_time(from.arena_last_chall_time());
    }
    if (from.has_arena_has_times()) {
      set_arena_has_times(from.arena_has_times());
    }
    if (from.has_arena_buy_times()) {
      set_arena_buy_times(from.arena_buy_times());
    }
    if (from.has_test_rewards()) {
      set_test_rewards(from.test_rewards());
    }
    if (from.has_unlimited_fly()) {
      set_unlimited_fly(from.unlimited_fly());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void tb_role_status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tb_role_status::CopyFrom(const tb_role_status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tb_role_status::IsInitialized() const {
  if ((_has_bits_[0] & 0xffffffff) != 0xffffffff) return false;
  if ((_has_bits_[1] & 0x00ffffff) != 0x00ffffff) return false;

  return true;
}

void tb_role_status::Swap(tb_role_status* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(pos_map_id_, other->pos_map_id_);
    std::swap(pos_scene_id_, other->pos_scene_id_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(pos_z_, other->pos_z_);
    std::swap(tmp_map_id_, other->tmp_map_id_);
    std::swap(tmp_scene_id_, other->tmp_scene_id_);
    std::swap(tmp_x_, other->tmp_x_);
    std::swap(tmp_y_, other->tmp_y_);
    std::swap(tmp_z_, other->tmp_z_);
    std::swap(mditation_, other->mditation_);
    std::swap(riding_, other->riding_);
    std::swap(findpath_, other->findpath_);
    std::swap(fight_, other->fight_);
    std::swap(auto_play_, other->auto_play_);
    std::swap(pvp_mode_, other->pvp_mode_);
    std::swap(attk_mode_, other->attk_mode_);
    std::swap(alive_, other->alive_);
    std::swap(online_, other->online_);
    std::swap(red_goods_num_, other->red_goods_num_);
    std::swap(blue_goods_num_, other->blue_goods_num_);
    std::swap(complete_task_num_, other->complete_task_num_);
    std::swap(abandon_task_num_, other->abandon_task_num_);
    std::swap(receve_task_num_, other->receve_task_num_);
    std::swap(is_package_full_, other->is_package_full_);
    std::swap(buf_furious_, other->buf_furious_);
    std::swap(buf_hurted_, other->buf_hurted_);
    std::swap(buf_week_, other->buf_week_);
    std::swap(buf_giddy_, other->buf_giddy_);
    std::swap(buf_faint_, other->buf_faint_);
    std::swap(buf_fired_, other->buf_fired_);
    std::swap(buf_posion_, other->buf_posion_);
    std::swap(buf_blood_, other->buf_blood_);
    std::swap(buf_injury_, other->buf_injury_);
    std::swap(buf_cursed_, other->buf_cursed_);
    std::swap(buf_blind_, other->buf_blind_);
    std::swap(buf_maimed_, other->buf_maimed_);
    std::swap(buf_silent_, other->buf_silent_);
    std::swap(buf_disarm_, other->buf_disarm_);
    std::swap(buf_slowly_, other->buf_slowly_);
    std::swap(buf_dec_harm_, other->buf_dec_harm_);
    std::swap(buf_rej_harm_, other->buf_rej_harm_);
    std::swap(buf_turn_body_, other->buf_turn_body_);
    std::swap(strength_, other->strength_);
    std::swap(status_, other->status_);
    std::swap(created_date_, other->created_date_);
    std::swap(tmp_scene_inst_id_, other->tmp_scene_inst_id_);
    std::swap(tmp_scene_inst_time_, other->tmp_scene_inst_time_);
    std::swap(spa_action_times_, other->spa_action_times_);
    std::swap(spa_last_time_, other->spa_last_time_);
    std::swap(arena_last_chall_time_, other->arena_last_chall_time_);
    std::swap(arena_has_times_, other->arena_has_times_);
    std::swap(arena_buy_times_, other->arena_buy_times_);
    std::swap(test_rewards_, other->test_rewards_);
    std::swap(unlimited_fly_, other->unlimited_fly_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata tb_role_status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = tb_role_status_descriptor_;
  metadata.reflection = tb_role_status_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mysql

// @@protoc_insertion_point(global_scope)
