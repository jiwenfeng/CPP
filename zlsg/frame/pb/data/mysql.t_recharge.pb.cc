// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysql.t_recharge.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mysql.t_recharge.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mysql {

namespace {

const ::google::protobuf::Descriptor* t_recharge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  t_recharge_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mysql_2et_5frecharge_2eproto() {
  protobuf_AddDesc_mysql_2et_5frecharge_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mysql.t_recharge.proto");
  GOOGLE_CHECK(file != NULL);
  t_recharge_descriptor_ = file->message_type(0);
  static const int t_recharge_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, did_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, playername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, playerlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, transactionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, inpourtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, addcoin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, exchangetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, depay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, gdepay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, createdate_),
  };
  t_recharge_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      t_recharge_descriptor_,
      t_recharge::default_instance_,
      t_recharge_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(t_recharge, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(t_recharge));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mysql_2et_5frecharge_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    t_recharge_descriptor_, &t_recharge::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mysql_2et_5frecharge_2eproto() {
  delete t_recharge::default_instance_;
  delete t_recharge_reflection_;
}

void protobuf_AddDesc_mysql_2et_5frecharge_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026mysql.t_recharge.proto\022\005mysql\"\263\002\n\nt_re"
    "charge\022\n\n\002id\030\001 \002(\r\022\013\n\003sid\030\002 \002(\t\022\013\n\003did\030\003"
    " \002(\t\022\023\n\013accountName\030\004 \002(\t\022\022\n\nplayerName\030"
    "\005 \002(\t\022\023\n\013playerLevel\030\006 \002(\r\022\025\n\rtransactio"
    "nId\030\007 \002(\t\022\020\n\010currency\030\010 \002(\t\022\022\n\ninpourTyp"
    "e\030\t \002(\t\022\017\n\007addcoin\030\n \002(\005\022\r\n\005money\030\013 \002(\001\022"
    "\014\n\004gold\030\014 \002(\r\022\024\n\014exchangeType\030\r \002(\005\022\r\n\005D"
    "epay\030\016 \002(\001\022\016\n\006gDepay\030\017 \002(\001\022\r\n\005state\030\020 \002("
    "\005\022\022\n\ncreateDate\030\021 \002(\r", 341);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mysql.t_recharge.proto", &protobuf_RegisterTypes);
  t_recharge::default_instance_ = new t_recharge();
  t_recharge::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mysql_2et_5frecharge_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mysql_2et_5frecharge_2eproto {
  StaticDescriptorInitializer_mysql_2et_5frecharge_2eproto() {
    protobuf_AddDesc_mysql_2et_5frecharge_2eproto();
  }
} static_descriptor_initializer_mysql_2et_5frecharge_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int t_recharge::kIdFieldNumber;
const int t_recharge::kSidFieldNumber;
const int t_recharge::kDidFieldNumber;
const int t_recharge::kAccountNameFieldNumber;
const int t_recharge::kPlayerNameFieldNumber;
const int t_recharge::kPlayerLevelFieldNumber;
const int t_recharge::kTransactionIdFieldNumber;
const int t_recharge::kCurrencyFieldNumber;
const int t_recharge::kInpourTypeFieldNumber;
const int t_recharge::kAddcoinFieldNumber;
const int t_recharge::kMoneyFieldNumber;
const int t_recharge::kGoldFieldNumber;
const int t_recharge::kExchangeTypeFieldNumber;
const int t_recharge::kDepayFieldNumber;
const int t_recharge::kGDepayFieldNumber;
const int t_recharge::kStateFieldNumber;
const int t_recharge::kCreateDateFieldNumber;
#endif  // !_MSC_VER

t_recharge::t_recharge()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void t_recharge::InitAsDefaultInstance() {
}

t_recharge::t_recharge(const t_recharge& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void t_recharge::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  sid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  did_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  accountname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  playerlevel_ = 0u;
  transactionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  inpourtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  addcoin_ = 0;
  money_ = 0;
  gold_ = 0u;
  exchangetype_ = 0;
  depay_ = 0;
  gdepay_ = 0;
  state_ = 0;
  createdate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

t_recharge::~t_recharge() {
  SharedDtor();
}

void t_recharge::SharedDtor() {
  if (sid_ != &::google::protobuf::internal::kEmptyString) {
    delete sid_;
  }
  if (did_ != &::google::protobuf::internal::kEmptyString) {
    delete did_;
  }
  if (accountname_ != &::google::protobuf::internal::kEmptyString) {
    delete accountname_;
  }
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (transactionid_ != &::google::protobuf::internal::kEmptyString) {
    delete transactionid_;
  }
  if (currency_ != &::google::protobuf::internal::kEmptyString) {
    delete currency_;
  }
  if (inpourtype_ != &::google::protobuf::internal::kEmptyString) {
    delete inpourtype_;
  }
  if (this != default_instance_) {
  }
}

void t_recharge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* t_recharge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return t_recharge_descriptor_;
}

const t_recharge& t_recharge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mysql_2et_5frecharge_2eproto();
  return *default_instance_;
}

t_recharge* t_recharge::default_instance_ = NULL;

t_recharge* t_recharge::New() const {
  return new t_recharge;
}

void t_recharge::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    if (has_sid()) {
      if (sid_ != &::google::protobuf::internal::kEmptyString) {
        sid_->clear();
      }
    }
    if (has_did()) {
      if (did_ != &::google::protobuf::internal::kEmptyString) {
        did_->clear();
      }
    }
    if (has_accountname()) {
      if (accountname_ != &::google::protobuf::internal::kEmptyString) {
        accountname_->clear();
      }
    }
    if (has_playername()) {
      if (playername_ != &::google::protobuf::internal::kEmptyString) {
        playername_->clear();
      }
    }
    playerlevel_ = 0u;
    if (has_transactionid()) {
      if (transactionid_ != &::google::protobuf::internal::kEmptyString) {
        transactionid_->clear();
      }
    }
    if (has_currency()) {
      if (currency_ != &::google::protobuf::internal::kEmptyString) {
        currency_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_inpourtype()) {
      if (inpourtype_ != &::google::protobuf::internal::kEmptyString) {
        inpourtype_->clear();
      }
    }
    addcoin_ = 0;
    money_ = 0;
    gold_ = 0u;
    exchangetype_ = 0;
    depay_ = 0;
    gdepay_ = 0;
    state_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    createdate_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool t_recharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sid;
        break;
      }

      // required string sid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sid().data(), this->sid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_did;
        break;
      }

      // required string did = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_did:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->did().data(), this->did().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_accountName;
        break;
      }

      // required string accountName = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_accountName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_playerName;
        break;
      }

      // required string playerName = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_playerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->playername().data(), this->playername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_playerLevel;
        break;
      }

      // required uint32 playerLevel = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_playerLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerlevel_)));
          set_has_playerlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_transactionId;
        break;
      }

      // required string transactionId = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_transactionId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transactionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->transactionid().data(), this->transactionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_currency;
        break;
      }

      // required string currency = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_inpourType;
        break;
      }

      // required string inpourType = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inpourType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inpourtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inpourtype().data(), this->inpourtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_addcoin;
        break;
      }

      // required int32 addcoin = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addcoin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addcoin_)));
          set_has_addcoin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_money;
        break;
      }

      // required double money = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_gold;
        break;
      }

      // required uint32 gold = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_exchangeType;
        break;
      }

      // required int32 exchangeType = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchangeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchangetype_)));
          set_has_exchangetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(113)) goto parse_Depay;
        break;
      }

      // required double Depay = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Depay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &depay_)));
          set_has_depay();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(121)) goto parse_gDepay;
        break;
      }

      // required double gDepay = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_gDepay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gdepay_)));
          set_has_gdepay();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_state;
        break;
      }

      // required int32 state = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_createDate;
        break;
      }

      // required uint32 createDate = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_createDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &createdate_)));
          set_has_createdate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void t_recharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required string sid = 2;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sid(), output);
  }

  // required string did = 3;
  if (has_did()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->did().data(), this->did().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->did(), output);
  }

  // required string accountName = 4;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->accountname(), output);
  }

  // required string playerName = 5;
  if (has_playername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->playername(), output);
  }

  // required uint32 playerLevel = 6;
  if (has_playerlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->playerlevel(), output);
  }

  // required string transactionId = 7;
  if (has_transactionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transactionid().data(), this->transactionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->transactionid(), output);
  }

  // required string currency = 8;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->currency(), output);
  }

  // required string inpourType = 9;
  if (has_inpourtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inpourtype().data(), this->inpourtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->inpourtype(), output);
  }

  // required int32 addcoin = 10;
  if (has_addcoin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->addcoin(), output);
  }

  // required double money = 11;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->money(), output);
  }

  // required uint32 gold = 12;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->gold(), output);
  }

  // required int32 exchangeType = 13;
  if (has_exchangetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->exchangetype(), output);
  }

  // required double Depay = 14;
  if (has_depay()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->depay(), output);
  }

  // required double gDepay = 15;
  if (has_gdepay()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->gdepay(), output);
  }

  // required int32 state = 16;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->state(), output);
  }

  // required uint32 createDate = 17;
  if (has_createdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->createdate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* t_recharge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required string sid = 2;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sid().data(), this->sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sid(), target);
  }

  // required string did = 3;
  if (has_did()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->did().data(), this->did().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->did(), target);
  }

  // required string accountName = 4;
  if (has_accountname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->accountname(), target);
  }

  // required string playerName = 5;
  if (has_playername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->playername().data(), this->playername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->playername(), target);
  }

  // required uint32 playerLevel = 6;
  if (has_playerlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->playerlevel(), target);
  }

  // required string transactionId = 7;
  if (has_transactionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->transactionid().data(), this->transactionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->transactionid(), target);
  }

  // required string currency = 8;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->currency(), target);
  }

  // required string inpourType = 9;
  if (has_inpourtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inpourtype().data(), this->inpourtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->inpourtype(), target);
  }

  // required int32 addcoin = 10;
  if (has_addcoin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->addcoin(), target);
  }

  // required double money = 11;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->money(), target);
  }

  // required uint32 gold = 12;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->gold(), target);
  }

  // required int32 exchangeType = 13;
  if (has_exchangetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->exchangetype(), target);
  }

  // required double Depay = 14;
  if (has_depay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->depay(), target);
  }

  // required double gDepay = 15;
  if (has_gdepay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->gdepay(), target);
  }

  // required int32 state = 16;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->state(), target);
  }

  // required uint32 createDate = 17;
  if (has_createdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->createdate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int t_recharge::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required string sid = 2;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sid());
    }

    // required string did = 3;
    if (has_did()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->did());
    }

    // required string accountName = 4;
    if (has_accountname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accountname());
    }

    // required string playerName = 5;
    if (has_playername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playername());
    }

    // required uint32 playerLevel = 6;
    if (has_playerlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->playerlevel());
    }

    // required string transactionId = 7;
    if (has_transactionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transactionid());
    }

    // required string currency = 8;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string inpourType = 9;
    if (has_inpourtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inpourtype());
    }

    // required int32 addcoin = 10;
    if (has_addcoin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addcoin());
    }

    // required double money = 11;
    if (has_money()) {
      total_size += 1 + 8;
    }

    // required uint32 gold = 12;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gold());
    }

    // required int32 exchangeType = 13;
    if (has_exchangetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchangetype());
    }

    // required double Depay = 14;
    if (has_depay()) {
      total_size += 1 + 8;
    }

    // required double gDepay = 15;
    if (has_gdepay()) {
      total_size += 1 + 8;
    }

    // required int32 state = 16;
    if (has_state()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required uint32 createDate = 17;
    if (has_createdate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->createdate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void t_recharge::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const t_recharge* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const t_recharge*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void t_recharge::MergeFrom(const t_recharge& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_sid()) {
      set_sid(from.sid());
    }
    if (from.has_did()) {
      set_did(from.did());
    }
    if (from.has_accountname()) {
      set_accountname(from.accountname());
    }
    if (from.has_playername()) {
      set_playername(from.playername());
    }
    if (from.has_playerlevel()) {
      set_playerlevel(from.playerlevel());
    }
    if (from.has_transactionid()) {
      set_transactionid(from.transactionid());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_inpourtype()) {
      set_inpourtype(from.inpourtype());
    }
    if (from.has_addcoin()) {
      set_addcoin(from.addcoin());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_exchangetype()) {
      set_exchangetype(from.exchangetype());
    }
    if (from.has_depay()) {
      set_depay(from.depay());
    }
    if (from.has_gdepay()) {
      set_gdepay(from.gdepay());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_createdate()) {
      set_createdate(from.createdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void t_recharge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void t_recharge::CopyFrom(const t_recharge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool t_recharge::IsInitialized() const {
  if ((_has_bits_[0] & 0x0001ffff) != 0x0001ffff) return false;

  return true;
}

void t_recharge::Swap(t_recharge* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(sid_, other->sid_);
    std::swap(did_, other->did_);
    std::swap(accountname_, other->accountname_);
    std::swap(playername_, other->playername_);
    std::swap(playerlevel_, other->playerlevel_);
    std::swap(transactionid_, other->transactionid_);
    std::swap(currency_, other->currency_);
    std::swap(inpourtype_, other->inpourtype_);
    std::swap(addcoin_, other->addcoin_);
    std::swap(money_, other->money_);
    std::swap(gold_, other->gold_);
    std::swap(exchangetype_, other->exchangetype_);
    std::swap(depay_, other->depay_);
    std::swap(gdepay_, other->gdepay_);
    std::swap(state_, other->state_);
    std::swap(createdate_, other->createdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata t_recharge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = t_recharge_descriptor_;
  metadata.reflection = t_recharge_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mysql

// @@protoc_insertion_point(global_scope)
