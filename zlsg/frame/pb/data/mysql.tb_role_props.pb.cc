// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysql.tb_role_props.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mysql.tb_role_props.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mysql {

namespace {

const ::google::protobuf::Descriptor* tb_role_props_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  tb_role_props_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mysql_2etb_5frole_5fprops_2eproto() {
  protobuf_AddDesc_mysql_2etb_5frole_5fprops_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mysql.tb_role_props.proto");
  GOOGLE_CHECK(file != NULL);
  tb_role_props_descriptor_ = file->message_type(0);
  static const int tb_role_props_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_props, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_props, pack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_props, depot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_props, equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_props, explore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_props, task_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_props, created_date_),
  };
  tb_role_props_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      tb_role_props_descriptor_,
      tb_role_props::default_instance_,
      tb_role_props_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_props, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tb_role_props, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(tb_role_props));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mysql_2etb_5frole_5fprops_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    tb_role_props_descriptor_, &tb_role_props::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mysql_2etb_5frole_5fprops_2eproto() {
  delete tb_role_props::default_instance_;
  delete tb_role_props_reflection_;
}

void protobuf_AddDesc_mysql_2etb_5frole_5fprops_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031mysql.tb_role_props.proto\022\005mysql\"\201\001\n\rt"
    "b_role_props\022\017\n\007role_id\030\001 \002(\r\022\014\n\004pack\030\002 "
    "\002(\014\022\r\n\005depot\030\003 \002(\014\022\r\n\005equip\030\004 \002(\014\022\017\n\007exp"
    "lore\030\005 \002(\014\022\014\n\004task\030\006 \002(\014\022\024\n\014created_date"
    "\030\007 \002(\r", 166);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mysql.tb_role_props.proto", &protobuf_RegisterTypes);
  tb_role_props::default_instance_ = new tb_role_props();
  tb_role_props::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mysql_2etb_5frole_5fprops_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mysql_2etb_5frole_5fprops_2eproto {
  StaticDescriptorInitializer_mysql_2etb_5frole_5fprops_2eproto() {
    protobuf_AddDesc_mysql_2etb_5frole_5fprops_2eproto();
  }
} static_descriptor_initializer_mysql_2etb_5frole_5fprops_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int tb_role_props::kRoleIdFieldNumber;
const int tb_role_props::kPackFieldNumber;
const int tb_role_props::kDepotFieldNumber;
const int tb_role_props::kEquipFieldNumber;
const int tb_role_props::kExploreFieldNumber;
const int tb_role_props::kTaskFieldNumber;
const int tb_role_props::kCreatedDateFieldNumber;
#endif  // !_MSC_VER

tb_role_props::tb_role_props()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void tb_role_props::InitAsDefaultInstance() {
}

tb_role_props::tb_role_props(const tb_role_props& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void tb_role_props::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = 0u;
  pack_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  depot_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  equip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  explore_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  task_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  created_date_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

tb_role_props::~tb_role_props() {
  SharedDtor();
}

void tb_role_props::SharedDtor() {
  if (pack_ != &::google::protobuf::internal::kEmptyString) {
    delete pack_;
  }
  if (depot_ != &::google::protobuf::internal::kEmptyString) {
    delete depot_;
  }
  if (equip_ != &::google::protobuf::internal::kEmptyString) {
    delete equip_;
  }
  if (explore_ != &::google::protobuf::internal::kEmptyString) {
    delete explore_;
  }
  if (task_ != &::google::protobuf::internal::kEmptyString) {
    delete task_;
  }
  if (this != default_instance_) {
  }
}

void tb_role_props::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tb_role_props::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return tb_role_props_descriptor_;
}

const tb_role_props& tb_role_props::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mysql_2etb_5frole_5fprops_2eproto();
  return *default_instance_;
}

tb_role_props* tb_role_props::default_instance_ = NULL;

tb_role_props* tb_role_props::New() const {
  return new tb_role_props;
}

void tb_role_props::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = 0u;
    if (has_pack()) {
      if (pack_ != &::google::protobuf::internal::kEmptyString) {
        pack_->clear();
      }
    }
    if (has_depot()) {
      if (depot_ != &::google::protobuf::internal::kEmptyString) {
        depot_->clear();
      }
    }
    if (has_equip()) {
      if (equip_ != &::google::protobuf::internal::kEmptyString) {
        equip_->clear();
      }
    }
    if (has_explore()) {
      if (explore_ != &::google::protobuf::internal::kEmptyString) {
        explore_->clear();
      }
    }
    if (has_task()) {
      if (task_ != &::google::protobuf::internal::kEmptyString) {
        task_->clear();
      }
    }
    created_date_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool tb_role_props::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_pack;
        break;
      }

      // required bytes pack = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pack()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_depot;
        break;
      }

      // required bytes depot = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_depot:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_depot()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_equip;
        break;
      }

      // required bytes equip = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_equip()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_explore;
        break;
      }

      // required bytes explore = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_explore:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_explore()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_task;
        break;
      }

      // required bytes task = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_task()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_created_date;
        break;
      }

      // required uint32 created_date = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_created_date:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &created_date_)));
          set_has_created_date();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void tb_role_props::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->role_id(), output);
  }

  // required bytes pack = 2;
  if (has_pack()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->pack(), output);
  }

  // required bytes depot = 3;
  if (has_depot()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->depot(), output);
  }

  // required bytes equip = 4;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->equip(), output);
  }

  // required bytes explore = 5;
  if (has_explore()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->explore(), output);
  }

  // required bytes task = 6;
  if (has_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->task(), output);
  }

  // required uint32 created_date = 7;
  if (has_created_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->created_date(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* tb_role_props::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->role_id(), target);
  }

  // required bytes pack = 2;
  if (has_pack()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pack(), target);
  }

  // required bytes depot = 3;
  if (has_depot()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->depot(), target);
  }

  // required bytes equip = 4;
  if (has_equip()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->equip(), target);
  }

  // required bytes explore = 5;
  if (has_explore()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->explore(), target);
  }

  // required bytes task = 6;
  if (has_task()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->task(), target);
  }

  // required uint32 created_date = 7;
  if (has_created_date()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->created_date(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int tb_role_props::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->role_id());
    }

    // required bytes pack = 2;
    if (has_pack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pack());
    }

    // required bytes depot = 3;
    if (has_depot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->depot());
    }

    // required bytes equip = 4;
    if (has_equip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->equip());
    }

    // required bytes explore = 5;
    if (has_explore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->explore());
    }

    // required bytes task = 6;
    if (has_task()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->task());
    }

    // required uint32 created_date = 7;
    if (has_created_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->created_date());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tb_role_props::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const tb_role_props* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const tb_role_props*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void tb_role_props::MergeFrom(const tb_role_props& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_pack()) {
      set_pack(from.pack());
    }
    if (from.has_depot()) {
      set_depot(from.depot());
    }
    if (from.has_equip()) {
      set_equip(from.equip());
    }
    if (from.has_explore()) {
      set_explore(from.explore());
    }
    if (from.has_task()) {
      set_task(from.task());
    }
    if (from.has_created_date()) {
      set_created_date(from.created_date());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void tb_role_props::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tb_role_props::CopyFrom(const tb_role_props& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tb_role_props::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void tb_role_props::Swap(tb_role_props* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(pack_, other->pack_);
    std::swap(depot_, other->depot_);
    std::swap(equip_, other->equip_);
    std::swap(explore_, other->explore_);
    std::swap(task_, other->task_);
    std::swap(created_date_, other->created_date_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata tb_role_props::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = tb_role_props_descriptor_;
  metadata.reflection = tb_role_props_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mysql

// @@protoc_insertion_point(global_scope)
