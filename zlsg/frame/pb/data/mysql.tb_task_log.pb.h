// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysql.tb_task_log.proto

#ifndef PROTOBUF_mysql_2etb_5ftask_5flog_2eproto__INCLUDED
#define PROTOBUF_mysql_2etb_5ftask_5flog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mysql {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mysql_2etb_5ftask_5flog_2eproto();
void protobuf_AssignDesc_mysql_2etb_5ftask_5flog_2eproto();
void protobuf_ShutdownFile_mysql_2etb_5ftask_5flog_2eproto();

class tb_task_log;

// ===================================================================

class tb_task_log : public ::google::protobuf::Message {
 public:
  tb_task_log();
  virtual ~tb_task_log();

  tb_task_log(const tb_task_log& from);

  inline tb_task_log& operator=(const tb_task_log& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tb_task_log& default_instance();

  void Swap(tb_task_log* other);

  // implements Message ----------------------------------------------

  tb_task_log* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tb_task_log& from);
  void MergeFrom(const tb_task_log& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sid = 1;
  inline bool has_sid() const;
  inline void clear_sid();
  static const int kSidFieldNumber = 1;
  inline ::google::protobuf::uint32 sid() const;
  inline void set_sid(::google::protobuf::uint32 value);

  // required uint32 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // required uint32 task_id = 3;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 3;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);

  // required int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required int32 quality = 5;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 5;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // required uint32 create_date = 6;
  inline bool has_create_date() const;
  inline void clear_create_date();
  static const int kCreateDateFieldNumber = 6;
  inline ::google::protobuf::uint32 create_date() const;
  inline void set_create_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mysql.tb_task_log)
 private:
  inline void set_has_sid();
  inline void clear_has_sid();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_create_date();
  inline void clear_has_create_date();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 sid_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::uint32 create_date_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_mysql_2etb_5ftask_5flog_2eproto();
  friend void protobuf_AssignDesc_mysql_2etb_5ftask_5flog_2eproto();
  friend void protobuf_ShutdownFile_mysql_2etb_5ftask_5flog_2eproto();

  void InitAsDefaultInstance();
  static tb_task_log* default_instance_;
};
// ===================================================================


// ===================================================================

// tb_task_log

// required uint32 sid = 1;
inline bool tb_task_log::has_sid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tb_task_log::set_has_sid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tb_task_log::clear_has_sid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tb_task_log::clear_sid() {
  sid_ = 0u;
  clear_has_sid();
}
inline ::google::protobuf::uint32 tb_task_log::sid() const {
  return sid_;
}
inline void tb_task_log::set_sid(::google::protobuf::uint32 value) {
  set_has_sid();
  sid_ = value;
}

// required uint32 role_id = 2;
inline bool tb_task_log::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tb_task_log::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tb_task_log::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tb_task_log::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 tb_task_log::role_id() const {
  return role_id_;
}
inline void tb_task_log::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required uint32 task_id = 3;
inline bool tb_task_log::has_task_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tb_task_log::set_has_task_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tb_task_log::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tb_task_log::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 tb_task_log::task_id() const {
  return task_id_;
}
inline void tb_task_log::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required int32 status = 4;
inline bool tb_task_log::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tb_task_log::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tb_task_log::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tb_task_log::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 tb_task_log::status() const {
  return status_;
}
inline void tb_task_log::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required int32 quality = 5;
inline bool tb_task_log::has_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tb_task_log::set_has_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tb_task_log::clear_has_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tb_task_log::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 tb_task_log::quality() const {
  return quality_;
}
inline void tb_task_log::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// required uint32 create_date = 6;
inline bool tb_task_log::has_create_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tb_task_log::set_has_create_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tb_task_log::clear_has_create_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tb_task_log::clear_create_date() {
  create_date_ = 0u;
  clear_has_create_date();
}
inline ::google::protobuf::uint32 tb_task_log::create_date() const {
  return create_date_;
}
inline void tb_task_log::set_create_date(::google::protobuf::uint32 value) {
  set_has_create_date();
  create_date_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mysql

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mysql_2etb_5ftask_5flog_2eproto__INCLUDED
