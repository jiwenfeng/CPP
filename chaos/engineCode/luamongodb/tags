!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR	Makefile	/^AR= ar rcu$/;"	m
CC	Makefile	/^CC= g++$/;"	m
CFLAGS	Makefile	/^CFLAGS= -g -O2 -shared -fpic -I\/usr\/include\/ -I \/usr\/local\/mongo\/include\/mongo\/ -I \/usr\/local\/mongo\/include\/ -I \/usr\/include\/mongo\/$/;"	m
CFLAGS	Makefile	/^CFLAGS= -g -O2 -shared -fpic -I\/usr\/local\/include\/ -I \/usr\/local\/include\/mongo\/ -I \/usr\/local\/include\/lua51$/;"	m
CFLAGS	Makefile	/^old: CFLAGS := $(CFLAGS) -DMONGO_PRE_1_5$/;"	m
CHUNK	common.h	26;"	d
CHUNK	common.h	28;"	d
LDFLAGS	Makefile	/^LDFLAGS= $(LIBS)$/;"	m
LIBS	Makefile	/^LIBS=-L\/usr\/local\/lib -L\/usr\/local\/lib\/lua51\/ -L\/usr\/local\/mongo\/lib -lmongoclient -lboost_thread-mt -lboost_filesystem -lboost_program_options -llua$/;"	m
LIBS	Makefile	/^LIBS=-L\/usr\/local\/lib -L\/usr\/local\/lib\/lua51\/ -lmongoclient -lboost_thread -lboost_filesystem -lboost_program_options -llua$/;"	m
LM_EXPORT	utils.h	86;"	d
LM_EXPORT	utils.h	88;"	d
LUAMONGO_CONNECTION	common.h	2;"	d
LUAMONGO_CURSOR	common.h	3;"	d
LUAMONGO_ERR_CALLING	common.h	23;"	d
LUAMONGO_ERR_CONNECTION_FAILED	common.h	9;"	d
LUAMONGO_ERR_CONNECT_FAILED	common.h	14;"	d
LUAMONGO_ERR_COUNT_FAILED	common.h	15;"	d
LUAMONGO_ERR_GRIDFSCHUNK_FAILED	common.h	11;"	d
LUAMONGO_ERR_GRIDFS_FAILED	common.h	10;"	d
LUAMONGO_ERR_INSERT_FAILED	common.h	13;"	d
LUAMONGO_ERR_QUERY_FAILED	common.h	12;"	d
LUAMONGO_ERR_REMOVE_FAILED	common.h	16;"	d
LUAMONGO_ERR_UPDATE_FAILED	common.h	17;"	d
LUAMONGO_GRIDFILE	common.h	6;"	d
LUAMONGO_GRIDFS	common.h	5;"	d
LUAMONGO_GRIDFSCHUNK	common.h	7;"	d
LUAMONGO_NOT_IMPLEMENTED	common.h	22;"	d
LUAMONGO_QUERY	common.h	4;"	d
LUAMONGO_REQUIRES_JSON_OR_TABLE	common.h	20;"	d
LUAMONGO_REQUIRES_QUERY	common.h	21;"	d
LUAMONGO_ROOT	common.h	1;"	d
LUAMONGO_UNSUPPORTED_BSON_TYPE	common.h	18;"	d
LUAMONGO_UNSUPPORTED_LUA_TYPE	common.h	19;"	d
LUA_PUSH_ARRAY_BOOL	utils.h	74;"	d
LUA_PUSH_ARRAY_FLOAT	utils.h	64;"	d
LUA_PUSH_ARRAY_INT	utils.h	59;"	d
LUA_PUSH_ARRAY_NIL	utils.h	79;"	d
LUA_PUSH_ARRAY_STRING	utils.h	69;"	d
LUA_PUSH_ATTRIB_BOOL	utils.h	47;"	d
LUA_PUSH_ATTRIB_FLOAT	utils.h	37;"	d
LUA_PUSH_ATTRIB_INT	utils.h	32;"	d
LUA_PUSH_ATTRIB_NIL	utils.h	52;"	d
LUA_PUSH_ATTRIB_STRING	utils.h	42;"	d
OBJS	Makefile	/^OBJS = main.o mongo_bsontypes.o mongo_connection.o mongo_cursor.o mongo_gridfile.o mongo_gridfs.o mongo_gridfschunk.o mongo_query.o utils.o$/;"	m
OUTLIB	Makefile	/^OUTLIB=mongo.so$/;"	m
RANLIB	Makefile	/^RANLIB= ranlib$/;"	m
RM	Makefile	/^RM= rm -f$/;"	m
UNAME	Makefile	/^UNAME = $(shell uname)$/;"	m
bson_fromjson	mongo_bsontypes.cpp	/^static int bson_fromjson(lua_State *L) {$/;"	f	file:
bson_name	utils.cpp	/^const char *bson_name(int type) {$/;"	f
bson_to_array	utils.cpp	/^static void bson_to_array(lua_State *L, const BSONObj &obj) {$/;"	f	file:
bson_to_lua	utils.cpp	/^void bson_to_lua(lua_State *L, const BSONObj &obj) {$/;"	f
bson_to_table	utils.cpp	/^static void bson_to_table(lua_State *L, const BSONObj &obj) {$/;"	f	file:
bson_tojson	mongo_bsontypes.cpp	/^static int bson_tojson(lua_State *L) {$/;"	f	file:
bson_tonumber	mongo_bsontypes.cpp	/^static int bson_tonumber(lua_State *L) {$/;"	f	file:
bson_type_Date	mongo_bsontypes.cpp	/^static int bson_type_Date(lua_State *L) {$/;"	f	file:
bson_type_NULL	mongo_bsontypes.cpp	/^static int bson_type_NULL(lua_State *L) {$/;"	f	file:
bson_type_NumberInt	mongo_bsontypes.cpp	/^static int bson_type_NumberInt(lua_State *L) {$/;"	f	file:
bson_type_NumberLong	mongo_bsontypes.cpp	/^static int bson_type_NumberLong(lua_State *L) {$/;"	f	file:
bson_type_ObjectID	mongo_bsontypes.cpp	/^static int bson_type_ObjectID(lua_State *L) {$/;"	f	file:
bson_type_RegEx	mongo_bsontypes.cpp	/^static int bson_type_RegEx(lua_State *L) {$/;"	f	file:
bson_type_Symbol	mongo_bsontypes.cpp	/^static int bson_type_Symbol(lua_State *L) {$/;"	f	file:
bson_type_Timestamp	mongo_bsontypes.cpp	/^static int bson_type_Timestamp(lua_State*L) {$/;"	f	file:
bson_type_name	mongo_bsontypes.cpp	/^static int bson_type_name(lua_State *L) {$/;"	f	file:
check_array	utils.cpp	/^static int check_array(lua_State *L, int stackpos) {$/;"	f	file:
connection_auth	mongo_connection.cpp	/^static int connection_auth(lua_State *L) {$/;"	f	file:
connection_connect	mongo_connection.cpp	/^static int connection_connect(lua_State *L) {$/;"	f	file:
connection_count	mongo_connection.cpp	/^static int connection_count(lua_State *L) {$/;"	f	file:
connection_drop_collection	mongo_connection.cpp	/^static int connection_drop_collection(lua_State *L) {$/;"	f	file:
connection_drop_index_by_fields	mongo_connection.cpp	/^static int connection_drop_index_by_fields(lua_State *L) {$/;"	f	file:
connection_drop_index_by_name	mongo_connection.cpp	/^static int connection_drop_index_by_name(lua_State *L) {$/;"	f	file:
connection_drop_indexes	mongo_connection.cpp	/^static int connection_drop_indexes(lua_State *L) {$/;"	f	file:
connection_ensure_index	mongo_connection.cpp	/^static int connection_ensure_index(lua_State *L) {$/;"	f	file:
connection_eval	mongo_connection.cpp	/^static int connection_eval(lua_State *L) {$/;"	f	file:
connection_exists	mongo_connection.cpp	/^static int connection_exists(lua_State *L) {$/;"	f	file:
connection_gc	mongo_connection.cpp	/^static int connection_gc(lua_State *L) {$/;"	f	file:
connection_gen_index_name	mongo_connection.cpp	/^static int connection_gen_index_name(lua_State *L) {$/;"	f	file:
connection_get_indexes	mongo_connection.cpp	/^static int connection_get_indexes(lua_State *L) {$/;"	f	file:
connection_get_server_address	mongo_connection.cpp	/^static int connection_get_server_address(lua_State *L) {$/;"	f	file:
connection_insert	mongo_connection.cpp	/^static int connection_insert(lua_State *L) {$/;"	f	file:
connection_insert_batch	mongo_connection.cpp	/^static int connection_insert_batch(lua_State *L) {$/;"	f	file:
connection_is_failed	mongo_connection.cpp	/^static int connection_is_failed(lua_State *L) {$/;"	f	file:
connection_mapreduce	mongo_connection.cpp	/^static int connection_mapreduce(lua_State *L) {$/;"	f	file:
connection_new	mongo_connection.cpp	/^static int connection_new(lua_State *L) {$/;"	f	file:
connection_query	mongo_connection.cpp	/^static int connection_query(lua_State *L) {$/;"	f	file:
connection_reindex	mongo_connection.cpp	/^static int connection_reindex(lua_State *L) {$/;"	f	file:
connection_remove	mongo_connection.cpp	/^static int connection_remove(lua_State *L) {$/;"	f	file:
connection_reset_index_cache	mongo_connection.cpp	/^static int connection_reset_index_cache(lua_State *L) {$/;"	f	file:
connection_tostring	mongo_connection.cpp	/^static int connection_tostring(lua_State *L) {$/;"	f	file:
connection_update	mongo_connection.cpp	/^static int connection_update(lua_State *L) {$/;"	f	file:
cursor_create	mongo_cursor.cpp	/^int cursor_create(lua_State *L, DBClientConnection *connection, const char *ns,$/;"	f
cursor_gc	mongo_cursor.cpp	/^static int cursor_gc(lua_State *L) {$/;"	f	file:
cursor_get_id	mongo_cursor.cpp	/^static int cursor_get_id(lua_State *L) {$/;"	f	file:
cursor_has_more	mongo_cursor.cpp	/^static int cursor_has_more(lua_State *L) {$/;"	f	file:
cursor_has_result_flag	mongo_cursor.cpp	/^static int cursor_has_result_flag(lua_State *L) {$/;"	f	file:
cursor_is_dead	mongo_cursor.cpp	/^static int cursor_is_dead(lua_State *L) {$/;"	f	file:
cursor_is_tailable	mongo_cursor.cpp	/^static int cursor_is_tailable(lua_State *L) {$/;"	f	file:
cursor_itcount	mongo_cursor.cpp	/^static int cursor_itcount(lua_State *L) {$/;"	f	file:
cursor_next	mongo_cursor.cpp	/^static int cursor_next(lua_State *L) {$/;"	f	file:
cursor_results	mongo_cursor.cpp	/^static int cursor_results(lua_State *L) {$/;"	f	file:
cursor_tostring	mongo_cursor.cpp	/^static int cursor_tostring(lua_State *L) {$/;"	f	file:
date_tostring	mongo_bsontypes.cpp	/^static int date_tostring(lua_State *L) {$/;"	f	file:
generic_tostring	mongo_bsontypes.cpp	/^static int generic_tostring(lua_State *L) {$/;"	f	file:
gridfile_chunk	mongo_gridfile.cpp	/^static int gridfile_chunk(lua_State *L) {$/;"	f	file:
gridfile_chunk_size	mongo_gridfile.cpp	/^static int gridfile_chunk_size(lua_State *L) {$/;"	f	file:
gridfile_content_length	mongo_gridfile.cpp	/^static int gridfile_content_length(lua_State *L) {$/;"	f	file:
gridfile_create	mongo_gridfile.cpp	/^int gridfile_create(lua_State *L, GridFile gf) {$/;"	f
gridfile_data	mongo_gridfile.cpp	/^static int gridfile_data(lua_State *L) {$/;"	f	file:
gridfile_exists	mongo_gridfile.cpp	/^static int gridfile_exists(lua_State *L) {$/;"	f	file:
gridfile_field	mongo_gridfile.cpp	/^static int gridfile_field(lua_State *L) {$/;"	f	file:
gridfile_filename	mongo_gridfile.cpp	/^static int gridfile_filename(lua_State *L) {$/;"	f	file:
gridfile_gc	mongo_gridfile.cpp	/^static int gridfile_gc(lua_State *L) {$/;"	f	file:
gridfile_md5	mongo_gridfile.cpp	/^static int gridfile_md5(lua_State *L) {$/;"	f	file:
gridfile_metadata	mongo_gridfile.cpp	/^static int gridfile_metadata(lua_State *L) {$/;"	f	file:
gridfile_num_chunks	mongo_gridfile.cpp	/^static int gridfile_num_chunks(lua_State *L) {$/;"	f	file:
gridfile_tostring	mongo_gridfile.cpp	/^static int gridfile_tostring(lua_State *L) {$/;"	f	file:
gridfile_upload_date	mongo_gridfile.cpp	/^static int gridfile_upload_date(lua_State *L) {$/;"	f	file:
gridfile_write	mongo_gridfile.cpp	/^static int gridfile_write(lua_State *L) {$/;"	f	file:
gridfs_find_file	mongo_gridfs.cpp	/^static int gridfs_find_file(lua_State *L) {$/;"	f	file:
gridfs_gc	mongo_gridfs.cpp	/^static int gridfs_gc(lua_State *L) {$/;"	f	file:
gridfs_list	mongo_gridfs.cpp	/^static int gridfs_list(lua_State *L) {$/;"	f	file:
gridfs_new	mongo_gridfs.cpp	/^static int gridfs_new(lua_State *L) {$/;"	f	file:
gridfs_remove_file	mongo_gridfs.cpp	/^static int gridfs_remove_file(lua_State *L) {$/;"	f	file:
gridfs_store_data	mongo_gridfs.cpp	/^static int gridfs_store_data(lua_State *L) {$/;"	f	file:
gridfs_store_file	mongo_gridfs.cpp	/^static int gridfs_store_file(lua_State *L) {$/;"	f	file:
gridfs_tostring	mongo_gridfs.cpp	/^static int gridfs_tostring(lua_State *L) {$/;"	f	file:
gridfschunk_data	mongo_gridfschunk.cpp	/^static int gridfschunk_data(lua_State *L) {$/;"	f	file:
gridfschunk_gc	mongo_gridfschunk.cpp	/^static int gridfschunk_gc(lua_State *L) {$/;"	f	file:
gridfschunk_len	mongo_gridfschunk.cpp	/^static int gridfschunk_len(lua_State *L) {$/;"	f	file:
gridfschunk_tostring	mongo_gridfschunk.cpp	/^static int gridfschunk_tostring(lua_State *L) {$/;"	f	file:
integer_value	mongo_bsontypes.cpp	/^static int integer_value(lua_State *L) {$/;"	f	file:
longlong_tostring	mongo_bsontypes.cpp	/^static int longlong_tostring(lua_State *L) {$/;"	f	file:
lua_append_bson	utils.cpp	/^static void lua_append_bson(lua_State *L, const char *key, int stackpos, BSONObjBuilder *builder) {$/;"	f	file:
lua_push_value	utils.cpp	/^void lua_push_value(lua_State *L, const BSONElement &elem) {$/;"	f
lua_to_bson	utils.cpp	/^void lua_to_bson(lua_State *L, int stackpos, BSONObj &obj) {$/;"	f
luaopen_mongo	main.cpp	/^LM_EXPORT int luaopen_mongo(lua_State *L) {$/;"	f
mongo_bsontypes_register	mongo_bsontypes.cpp	/^int mongo_bsontypes_register(lua_State *L) {$/;"	f
mongo_connection_register	mongo_connection.cpp	/^int mongo_connection_register(lua_State *L) {$/;"	f
mongo_cursor_register	mongo_cursor.cpp	/^int mongo_cursor_register(lua_State *L) {$/;"	f
mongo_gridfile_register	mongo_gridfile.cpp	/^int mongo_gridfile_register(lua_State *L) {$/;"	f
mongo_gridfs_register	mongo_gridfs.cpp	/^int mongo_gridfs_register(lua_State *L) {$/;"	f
mongo_gridfschunk_register	mongo_gridfschunk.cpp	/^int mongo_gridfschunk_register(lua_State *L) {$/;"	f
mongo_query_register	mongo_query.cpp	/^int mongo_query_register(lua_State *L) {$/;"	f
null_tostring	mongo_bsontypes.cpp	/^static int null_tostring(lua_State *L) {$/;"	f	file:
null_value	mongo_bsontypes.cpp	/^static int null_value(lua_State *L) {$/;"	f	file:
number_value	mongo_bsontypes.cpp	/^static int number_value(lua_State *L) {$/;"	f	file:
push_bsontype_table	mongo_bsontypes.cpp	/^void push_bsontype_table(lua_State* L, mongo::BSONType bsontype) {$/;"	f
query_explain	mongo_query.cpp	/^static int query_explain(lua_State *L) {$/;"	f	file:
query_gc	mongo_query.cpp	/^static int query_gc(lua_State *L) {$/;"	f	file:
query_hint	mongo_query.cpp	/^static int query_hint(lua_State *L) {$/;"	f	file:
query_is_explain	mongo_query.cpp	/^static int query_is_explain(lua_State *L) {$/;"	f	file:
query_max_key	mongo_query.cpp	/^static int query_max_key(lua_State *L) {$/;"	f	file:
query_min_key	mongo_query.cpp	/^static int query_min_key(lua_State *L) {$/;"	f	file:
query_new	mongo_query.cpp	/^static int query_new(lua_State *L) {$/;"	f	file:
query_snapshot	mongo_query.cpp	/^static int query_snapshot(lua_State *L) {$/;"	f	file:
query_sort	mongo_query.cpp	/^static int query_sort(lua_State *L) {$/;"	f	file:
query_tostring	mongo_query.cpp	/^static int query_tostring(lua_State *L) {$/;"	f	file:
query_where	mongo_query.cpp	/^static int query_where(lua_State *L) {$/;"	f	file:
regex_tostring	mongo_bsontypes.cpp	/^static int regex_tostring(lua_State *L) {$/;"	f	file:
result_iterator	mongo_cursor.cpp	/^static int result_iterator(lua_State *L) {$/;"	f	file:
string_value	mongo_bsontypes.cpp	/^static int string_value(lua_State *L) {$/;"	f	file:
stringpair_value	mongo_bsontypes.cpp	/^static int stringpair_value(lua_State *L) {$/;"	f	file:
userdata_to_connection	mongo_connection.cpp	/^inline DBClientConnection* userdata_to_connection(lua_State* L, int index) {$/;"	f	namespace:__anon5
userdata_to_cursor	mongo_cursor.cpp	/^inline DBClientCursor* userdata_to_cursor(lua_State* L, int index) {$/;"	f	namespace:__anon2
userdata_to_gridfile	mongo_gridfile.cpp	/^    inline GridFile* userdata_to_gridfile(lua_State* L, int index) {$/;"	f	namespace:__anon1
userdata_to_gridfs	mongo_gridfs.cpp	/^    inline GridFS* userdata_to_gridfs(lua_State* L, int index) {$/;"	f	namespace:__anon4
userdata_to_gridfschunk	mongo_gridfschunk.cpp	/^    inline CHUNK* userdata_to_gridfschunk(lua_State* L, int index) {$/;"	f	namespace:__anon6
userdata_to_query	mongo_query.cpp	/^inline Query* userdata_to_query(lua_State* L, int index) {$/;"	f	namespace:__anon3
